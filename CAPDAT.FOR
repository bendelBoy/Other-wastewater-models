
     SUBROUTINE AEROEX(SVOLU,PSOLID,PVOLAT,RR) 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSSA),(QQ(2),DT    ),(QQ(3),PVSD  ), 
    &(QQ( 4),DMLS  ),(QQ( 5),PSD   ),(QQ( 6),ALPHA ),(QQ( 7),BETA  ), 
    &(QQ( 8),STE   ),(QQ( 9),SP    ),(QQ(10),VOL   ),(QQ(11),VSLD  ), 
    &(QQ(12),SLAC  ),(QQ(13),SLD   ),(QQ(14),SRT   ),(QQ(15),SLW   ), 
    &(QQ(16),O2R   ),(QQ(17),OTE   ),(QQ(18),AS    ),(QQ(19),TEMS  ) 
    >,(QQ(20),SSXSA),(QQ(21),COSTPD),(QQ(22),COSTPH),(QQ(23),TYPE) 
    >,(QQ(24),QAVE),(QQ(25),VOLMIL) 
    >,(QQ(26),RSPD),(QQ(27),RSPH),(QQ(28),RSST) 
     CALL INIT(QQ,RR,28) 
     RS=SVOLU 
     RSSG=1.05 
     RSLS=PSOLID 
     SLVS=PVOLAT 
     VOL=DT*RS 
     VOLM=VOL/7.48/1000.0 
     VSLD=RS*SLVS/VOL/100.0*RSSG*RSLS/100.0*8.34*7.48 
     SLAC=RS*RSSG*RSLS/100.0*8.34*(1.0-SLVS*PVSD/10000.0)*0.75 
     CX=SLAC 
     SLD=VOL*DMLS*8.34/1000000.0 
     SRT=SLD/SLAC 
     SLW=SLD/RSSG/PSD/8.34*100.00 
     O2R=2.0*RS*SLVS*PVSD/10000.0*RSLS/100.0*RSSG*8.34 
     CS=14.652-0.41022*TEMS+0.00799*TEMS**2-0.00007777*TEMS**3 
     OTE=STE*(BETA*CS-2.0)/9.17*ALPHA*1.02**(TEMS-20.0) 
     AS=O2R/OTE/0.0176/1440.0/VOL*1000.0*7.48*100.0 
     IF(AS.LE.20.0)AS=20.0 
     SVOLU=SLAC/RSSG/PSD/8.34*100.0 
     PSOLID=PSD 
     PVOLAT=SLVS/100.0*(1.0-PVSD/100.0)/(1.0-(PVSD/100.0)* 
    <(SLVS/100.0))*100.0 
     CFM3=AS*VOLM/1000. 
   1 VOLMIL=VOL/1000000.0 
     IF(TYPE.EQ.0.0)GO TO 3 
     QAVE=RS/1000000.0 
     CALL DIFFPR(3,QAVE,CX,0.,VOLMIL,AS,COSTPD,COSTPH,82.0,0, 
    >RSPD,RSPH,RSST) 
     CALL USEREX(2) 
     GO TO 2 
   3 QAVE=RS/1000000.0 
     HP=O2R/OTE/24.0 
     IF(HP.LT.VOL/10000.0)HP=VOL/10000.0 
     AS=HP 
     CALL MECHPR(3,QAVE,0.0,0.0,VOLMIL,HP,SSXSA,82.0,0, 
    >RSSA,RSST) 
     CALL USEREX(2) 
   2 CALL INIT(RR,QQ,28) 
     RETURN 
     END 
     SUBROUTINE AEROIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSSA),(QQ(2),DT    ),(QQ(3),PVSD  ), 
    &(QQ( 4),DMLS  ),(QQ( 5),PSD   ),(QQ( 6),ALPHA ),(QQ( 7),BETA  ), 
    &(QQ( 8),STE   ),(QQ( 9),SP    ),(QQ(10),VOL   ),(QQ(11),VSLD  ), 
    &(QQ(12),SLAC  ),(QQ(13),SLD   ),(QQ(14),SRT   ),(QQ(15),SLW   ), 
    &(QQ(16),O2R   ),(QQ(17),OTE   ),(QQ(18),AS    ),(QQ(19),TEMS  ) 
    >,(QQ(20),SSXSA),(QQ(21),COSTPD),(QQ(22),COSTPH),(QQ(23),TYPE) 
    >,(QQ(24),QAVE),(QQ(25),VOLMIL) 
    >,(QQ(26),RSPD),(QQ(27),RSPH),(QQ(28),RSST) 
     DIMENSION LIST(12) 
     DATA LIST/'DETE','VOLA','MIXE','SOLI','REPL','XXXX','END ','TEMP', 
    >'ESTI','DIFF','MECH','XXXX'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,28) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 DT=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 PVSD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 DMLS=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 PSD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
   6 GO TO 50 
   7 CALL INIT(RR,QQ,28) 
     RETURN 
   8 TEMS=VALUE(1) 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     GO TO 50 
  10 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     STE=VALUE(3) 
     ID(MODT,5)=IA 
     ID(MODT,6)=IA 
     ID(MODT,7)=IA 
     GO TO 50 
  11 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     STE=VALUE(3) 
     ID(MODT,5)=IA 
     ID(MODT,6)=IA 
     ID(MODT,7)=IA 
     GO TO 50 
  12 GO TO 50 
     END 
     SUBROUTINE AEROOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSSA),(QQ(2),DT    ),(QQ(3),PVSD  ), 
    &(QQ( 4),DMLS  ),(QQ( 5),PSD   ),(QQ( 6),ALPHA ),(QQ( 7),BETA  ), 
    &(QQ( 8),STE   ),(QQ( 9),SP    ),(QQ(10),VOL   ),(QQ(11),VSLD  ), 
    &(QQ(12),SLAC  ),(QQ(13),SLD   ),(QQ(14),SRT   ),(QQ(15),SLW   ), 
    &(QQ(16),O2R   ),(QQ(17),OTE   ),(QQ(18),AS    ),(QQ(19),TEMS  ) 
    >,(QQ(20),SSXSA),(QQ(21),COSTPD),(QQ(22),COSTPH),(QQ(23),TYPE) 
    >,(QQ(24),QAVE),(QQ(25),VOLMIL) 
    >,(QQ(26),RSPD),(QQ(27),RSPH),(QQ(28),RSST) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,28) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     RSSG=1.05 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0AEROBIC DIGESTION') 
     WRITE(6,202)RSSG 
 202 FORMAT('0  RAW SLUDGE SPECIFIC GRAVITY       ',E9.3) 
     WRITE(6,204)ID(MODT,1),DT 
 204 FORMAT(' ',A1,' DETENTION TIME                    ',E9.3,' DAYS') 
     WRITE(6,205)ID(MODT,2),PVSD 
 205 FORMAT(' ',A1,' VOLATILE SOLIDS DESTROYED         ',E9.3, 
    > ' PERCENT') 
     WRITE(6,206)ID(MODT,3),DMLS 
 206 FORMAT(' ',A1,' MIXED LIQUOR SOLIDS               ',E9.3,' MG/L') 
     WRITE(6,207)ID(MODT,4),PSD 
 207 FORMAT(' ',A1,' SOLIDS IN DIGESTED SLUDGE         ',E9.3, 
    > ' PERCENT') 
     WRITE(6,208)ID(MODT,5),ALPHA 
 208 FORMAT(' ',A1,' ALPHA                             ',E9.3) 
     WRITE(6,209)ID(MODT,6),BETA 
 209 FORMAT(' ',A1,' BETA                              ',E9.3) 
     IF(TYPE.EQ.1.0)WRITE(6,210)ID(MODT,7),STE 
 210 FORMAT(' ',A1,' STANDARD TRANSFER EFFICIENCY      ',E9.3, 
    > ' PERCENT') 
     IF(TYPE.EQ.0.0)WRITE(6,301)ID(MODT,7),STE 
 301 FORMAT('0',A1,' STANDARD TRANSFER EFFICIENCY      ',E9.3, 
    > ' LB O/HP-HR') 
     IF(TYPE.EQ.0.0)WRITE(6,303)AS 
 303 FORMAT('   HORSEPOWER REQUIRED               ',E9.3,' HP') 
     WRITE(6,212)VOL 
 212 FORMAT('   DIGESTER VOLUME                   ',E9.3,' GAL') 
     WRITE(6,213)VSLD 
 213 FORMAT('   VOLATILE SOLIDS LOADING           ',E9.3, 
    > ' LB VS/CUFT/DAY') 
     WRITE(6,214)SLAC 
 214 FORMAT('   SOLIDS ACCUMULATED PER DAY        ',E9.3,' LB/DAY') 
     WRITE(6,215)SLD 
 215 FORMAT('   DIGESTER CAPACITY                 ',E9.3,' LB') 
     WRITE(6,216)SLW 
 216 FORMAT('   VOLUME OF WASTED SLUDGE           ',E9.3,' GAL') 
     WRITE(6,217)SRT 
 217 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
     WRITE(6,218)O2R 
 218 FORMAT('   OXYGEN REQUIREMENT                ',E9.3,' LB/DAY') 
     IF(TYPE.EQ.1.0)WRITE(6,219)AS 
 219 FORMAT('   AIR SUPPLY                        ',E9.3,' CFM/TCFT') 
     WRITE(6,121)STARDA 
     IF(TYPE.EQ.0.0)GO TO 3 
     CALL DIFFPR(3,QAVE,0.,0.,VOLMIL,CFM3,COSTPD,COSTPH,82.0,1, 
    >RSPD,RSPH,RSST) 
     GO TO 2 
   3 HP=O2R/OTE/24.0 
     CALL MECHPR(3,QAVE,0.0,0.0,VOLMIL,HP,SSXSA,82.0,1,RSSA,RSST) 
   2 RETURN 
     END 
     SUBROUTINE AIONEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC   ),(QQ(3),REC   ), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),BT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,28) 
     FIRC=(CIC-EFC)*0.0000834 
     SV=REC/FIRC 
     ST=SV/TFR 
     VR=FIRC*QAVE*1000000.0/REC*ST/60.0/24.0 
     VREG=RL/RC*VR/8.34/RSG*100.0 
     VRIN=RW*VR 
     VBW=BW*VR 
     BT=BW/RBW 
     RT=VREG/RFR/VR 
     WT=RW/RIN 
     OMT=.1*(ST+BT+RT+WT) 
     EC=ST+BT+RT+WT+OMT 
     CPD=HOD/EC*60.0 
     CIC=EFC 
     CALL PRICE(QAVE,0.0,0.0,16,RSST) 
     CALL INIT(RR,QQ,28) 
     RETURN 
     END 
     SUBROUTINE AIONIN(RR) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC   ),(QQ(3),REC   ), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),BT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     DIMENSION LIST(10) 
     DATA LIST/'EFFL','RESI','REGE','FLOW','HOUR','AMOU','COLU', 
    > 'END ','BACK','REPL'/ 
     CALL INIT(QQ,RR,28) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 EFC=VALUE(1) 
     GO TO 50 
   2 REC=VALUE(1) 
     GO TO 50 
   3 RD=VALUE(1) 
     RL=VALUE(2) 
     RC=VALUE(3) 
     RSG=VALUE(4) 
     GO TO 50 
   4 TFR=VALUE(1) 
     RFR=VALUE(2) 
     RIN=VALUE(3) 
     GO TO 50 
   5 HOD=VALUE(1) 
     GO TO 50 
   6 RW=VALUE(1) 
     GO TO 50 
   7 CD=VALUE(1) 
     GO TO 50 
   8 CALL INIT(RR,QQ,28) 
     RETURN 
   9 BW=VALUE(1) 
     RBW=VALUE(2) 
     GO TO 50 
  10 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE AIONOT(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC   ),(QQ(3),REC   ), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),BT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,28) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0ANION EXCHANGE') 
     WRITE(6,201)QAVE 
 201 FORMAT('0AVERAGE WASTE FLOW                  ',E9.3,' MGD') 
     WRITE(6,202)EFC 
 202 FORMAT(' EFFLUENT CONCENTRATION              ',E9.3,' MG/L     ') 
     WRITE(6,203)REC 
 203 FORMAT(' RESIN EXCHANGE CAPACITY             ',E9.3,' LB/CUFT') 
     WRITE(6,204)RL 
 204 FORMAT(' REGENERANT LEVEL                    ',E9.3,' LB/CUFT') 
     WRITE(6,205)TFR 
 205 FORMAT(' TREATMENT FLOW RATE                 ',E9.3,' GPM/CUFT') 
     WRITE(6,206)RFR 
 206 FORMAT(' REGENERANT FLOW RATE                ',E9.3,' GPM/CUFT') 
     WRITE(6,207)RIN 
 207 FORMAT(' RINSE FLOW RATE                     ',E9.3,' GPM/CUFT') 
     WRITE(6,208)RBW 
 208 FORMAT(' BACKWASH FLOW RATE                  ',E9.3,' GPM/CUFT') 
     WRITE(6,209)VREG 
 209 FORMAT(' VOLUME OF REGENERANT                ',E9.3,' GAL') 
     WRITE(6,210)VRIN 
 210 FORMAT(' VOLUME OF RINSE WATER               ',E9.3,' GAL') 
     WRITE(6,211)VBW 
 211 FORMAT(' VOLUME OF BACKWASH WATER            ',E9.3,' GAL') 
     WRITE(6,212)VR 
 212 FORMAT(' VOLUME OF RESIN                     ',E9.3,' CU FT') 
     WRITE(6,213)ST 
 213 FORMAT(' SERVICE TIME                        ',E9.3,' MIN') 
     WRITE(6,214)EC 
 214 FORMAT(' EXCHANGE CYCLE                      ',E9.3,' MIN') 
     WRITE(6,215)CPD 
 215 FORMAT(' CYCLES PER DAY                      ',E9.3) 
     WRITE(6,216)SV 
 216 FORMAT(' SERVICE VOLUME                      ',E9.3,' GAL/CUFT') 
 505 FORMAT(' BACKWASH WATER                      ',E9.3,' GAL/CUFT') 
 506 FORMAT(' RINSE WATER                         ',E9.3,' GAL/CUFT') 
     WRITE(6,505)BW 
     WRITE(6,506)RW 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,28) 
     RETURN 
     END 
     SUBROUTINE AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPRM,AF,AFRM, 
    &TYPE,TEMS) 
     CS=14.652-0.41022*TEMS+0.00799*TEMS**2-0.00007777*TEMS**3 
     OTE=STE*(CS*BETA-2.0)/9.17*ALPHA*1.024**(TEMS-20.0) 
     IF(TYPE.GT.0.5)GO TO 200 
     HPR=VOL*1000.0*HPRM 
     HP=OREQ/24.0/OTE 
     IF(HP.LT.HPR)HP=HPR 
     RETURN 
 200 AF=OREQ*7.48*100000.0/(0.0176*1440.0*OTE*VOL)/1000000.0 
     AFR=AFRM 
     IF(AF.LT.AFR)AF=AFR 
     VOLFT=VOL*1000./7.48 
     CFM3=VOLFT*AF/1000. 
   1 RETURN 
     END 
     SUBROUTINE AIROT(TYPE,STE,OTE,HP,AF,IA) 
     IF(TYPE.EQ.1.0)GO TO 400 
     WRITE(6,300) 
 300 FORMAT('0MECHANICAL AERATION SYSTEM') 
     WRITE(6,301)IA,STE 
 301 FORMAT('0',A1,' STANDARD TRANSFER EFFICIENCY      ',E9.3, 
    > ' LB O/HP-HR') 
     WRITE(6,302)OTE 
 302 FORMAT('   OPERATING TRANSFER EFFICIENCY     ',E9.3,' LB O/HP-HR') 
     WRITE(6,303)HP 
 303 FORMAT('   HORSEPOWER REQUIRED               ',E9.3,' HP') 
     RETURN 
 400 WRITE(6,304) 
 304 FORMAT('0DIFFUSED AERATION SYSTEM') 
     WRITE(6,305)IA,STE 
 305 FORMAT('0',A1,' STANDARD TRANSFER EFFICIENCY      ',E9.3, 
    > ' PERCENT') 
     WRITE(6,306)OTE 
 306 FORMAT('   OPERATING EFFICIENCY              ',E9.3,' PERCENT') 
     WRITE(6,307)AF 
 307 FORMAT('   REQUIRED AIR FLOW                 ',E9.3,' CFM/TCFT') 
     RETURN 
     END 
     SUBROUTINE AIRPR(XOSTSB,TCFM) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON ICTL,KCTL,IPRT 
     DIMENSION COSTSB(3),XOSTSB(6) 
     DO 200 I=1,3 
 200 COSTSB(I)=XOSTSB(I) 
     FNUM=59.0 
     NB=TCFM/7500.0+1.99 
     IF(TCFM.GT.30000.0)NB=TCFM/18000.0+1.99 
     IF(TCFM.GT.72000.00)NB=TCFM/100000.0+1.99 
     IF(NB.LT.2)NB=2 
     CFMB=TCFM/(NB-1) 
     BBA=128.0*TCFM**0.256 
     CF=1.11 
     COSTRO=0.70*CFMB**0.6169 
     IF(TCFM.GT.30000.0)COSTRO=0.377*CFMB**0.5928 
     IF(TCFM.GT.72000.0)COSTRO=0.964*CFMB**0.4286 
     IF(COSTSB(1).EQ.0.0)COSTSB(1)=16000.0 
     IF(COSTSB(2).EQ.0.0)COSTSB(2)=45000.0 
     IF(COSTSB(3).EQ.0.0)COSTSB(3)=300000.0 
     K=1 
     IF(TCFM.GT.30000.00)K=2 
     IF(TCFM.GT.72000.0)K=3 
     IF(XOSTSB(K).EQ.0.0)COSTSB(K)=COSTSB(K)*FMSECI/491.60 
     RS=XOSTSB(K+3) 
     COSTBE=COSTSB(K)*COSTRO/100.0 
     FIBC=COSTBE*2.0 
     BBC=BBA*UPIBC 
     IF(IPRT.EQ.1.AND.KCTL.NE.0)CALL AIRQU(TCFM,CFMB,NB,BBA) 
     CC=(FIBC*NB+BBC)*CF 
     CALL AMORT(CC,RS,RC1) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,9)=FNUM 
     RETURN 
     END 
     SUBROUTINE AIRQU(TCFM,CFMB,NB,BBA) 
     CALL TITLE 
     N=NB-1 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR BLOWERS') 
     WRITE(6,2)TCFM 
2    FORMAT('0DESIGN CAPACITY FOR BLOWER SYSTEM',T45,E9.3,' SCFM') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER OF BLOWERS FOR MAX AIR REQUIREMENTS',T45,I9) 
     WRITE(6,4)CFMB 
4    FORMAT(' CAPACITY OF INDIVIDUAL BLOWERS',T45,E9.3,' SCFM') 
     WRITE(6,5)NB 
5    FORMAT(' TOTAL NUMBER OF BLOWERS REQUIRED',T45,I9) 
     WRITE(6,6)BBA 
6    FORMAT(' BLOWER BUILDING AREA',T45,E9.3,' SQ FT') 
     RETURN 
     END 
     SUBROUTINE ALUMPR(ALUM) 
     COMMON ICTL,KCTL,IPRT 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     AL=ALUM*27.0/603.0 
     CALFED=EPACI/DIVSOR*59000.0 
     IF(AL.GT.400.0)CALFED=EPACI/DIVSOR*10260.0*AL**0.289 
     IF(AL.GT.1000.0)CALFED=EPACI/DIVSOR*661.7*AL**0.689 
     IF(AL.GT.4000.0)CALFED=EPACI/DIVSOR*2.419*AL**1.365 
     FLCV=AL/0.4902 
     OMMPI=600.0 
     IF(FLCV.GT.90.0)OMMPI=189.2*FLCV**0.2565 
     IF(FLCV.GT.350.0)OMMPI=33.4*FLCV**0.5527 
     IF(FLCV.GT.1050.0)OMMPI=51.8*FLCV**0.4894 
     IF(FLCV.GT.10000.0)OMMPI=12.2*FLCV**0.647 
     OMMP=OMMPI 
     OMMC=2.0*CALFED/100.0 
     RS=40.0 
     CALL AMORT(CALFED,RS,RC1) 
     FNUM=56.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CALFED 
     SUMMDA(NUM,2)=OMMP 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     IF(KCTL.NE.0.AND.IPRT.EQ.1)CALL ALUMQU(ALUM,AL,EPACI,FLCV,OMMPI, 
    >OMMP,OMMC) 
     RETURN 
     END 
     SUBROUTINE ALUMQU(ALUM,AL,EPACI,FLCV,OMMPI,OMMP,OMMC) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR ALUM FEED SYSTEM') 
     WRITE(6,2)ALUM 
2    FORMAT('0ALUM DOSAGE RATE AS AL2(SO4)3*14H2O',T45,E9.3,' LBS/DAY') 
     WRITE(6,3)AL 
3    FORMAT(' ALUM DOSAGE RATE AS EQUIVALENT ALUMINUM',T45,E9.3, 
    >' LBS/DAY') 
     WRITE(6,4)EPACI 
4    FORMAT(' EPA COST INDEX USED',T45,E9.3) 
     WRITE(6,6)FLCV 
6    FORMAT(' LIQUID CHEMICAL SOLUTION FED PER DAY',T45,E9.3, 
    > ' GAL/DAY') 
     WRITE(6,7)OMMPI 
7    FORMAT(' OPERATION AND MAINTENANCE MANPOWER',T45,E9.3,' MAN-', 
    > 'HOURS/YR') 
     WRITE(6,8)OMMP 
8    FORMAT(' TOTAL OPERATION AND MAINTENANCE MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE AMORT(P,RS,AMR) 
     COMMON/COSTS/A,B,C,RATE,NOPER,W 
     R=RATE/100.0 
     SN=((1.0+R)**NOPER-1.0)/R 
     CRF=1.0/SN+R 
     N=NOPER/RS 
     CCOS=P 
     IF(N.EQ.0)GO TO 600 
     DO 601 J=1,N 
     NY=J*RS 
 601 CCOS=CCOS+P/(1.0+R)**NY 
 600 YRSAL=RS+N*RS-NOPER 
     SAL=P*YRSAL/RS 
     CCOS=CCOS-SAL/(1.0+R)**NOPER 
     AMR=CRF*CCOS 
     RETURN 
     END 
     SUBROUTINE ANAEEX(SVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     EQUIVALENCE (QQ(1),RSCO),(QQ(2),SG    ),(QQ(3),PVSD  ), 
    &(QQ( 4),PSD   ),(QQ( 5),RST   ),(QQ( 6),DST   ),(QQ( 7),TA    ), 
    &(QQ( 8),TD  ),(QQ( 9),RSUS),(QQ(10),VPU   ),(QQ(11),WA    ), 
    &(QQ(12),FA    ),(QQ(13),TNG   ),(QQ(14),VF    ),(QQ(15),SA    ), 
    &(QQ(16),VD    ),(QQ(17),VAV   ),(QQ(18),VTOT  ),(QQ(19),COSNG ), 
    &(QQ(20),GR    ),(QQ(21),GP    ) 
    >,(QQ(22),SFLOCO),(QQ(23),CGCUS),(QQ(24),HRHXS),(QQ(25),CGSES), 
    >(QQ(26),CSPUMP),(QQ(27),LOCAT) 
    >,(QQ(28),SP),(QQ(29),DIA),(QQ(30),NT),(QQ(31),NB), 
    >(QQ(32),NP),(QQ(33),SWD),(QQ(34),QT),(QQ(35),DGP) 
    >,(QQ(36),RSXS),(QQ(37),RSES),(QQ(38),RSMP),(QQ(39),RSST) 
     DIMENSION QD(9),NTR(9),NPR(9),NSR(9) 
     DATA QD/2.0,10.0,20.,30.,40.,50.,60.,80.,101.0/ 
     DATA NTR/1,2,3,4,6,8,9,12,16/ 
     DATA NPR/0,1,2,3,4,5,6,8,10/ 
     DATA NSR/0,1,1,1,2,3,3,4,6/ 
     CALL INIT(QQ,RR,39) 
     VF=SVOLU/7.48 
     SP=PSOLID*SVOLU*SG*8.34/100.0 
     ECF=1.0 
     IF(ECF.LT.1.0)ECF=1.0 
     SD=SP*(1.0-PVOLAT*PVSD*10.0**(-4.0)) 
     VD=SD/PSD/62.4/SG*100.0 
     NB=QAVE/100.0+1.0 
     QPB=QAVE/NB 
     DO 5 I=1,9 
     IF(QD(I).GT.QPB)GO TO 6 
   5 CONTINUE 
     I=9 
   6 NT=NTR(I) 
     NP=NPR(I) 
     NS=NSR(I) 
     UNITS=NT 
     IF(NP.EQ.0)GO TO 7 
     TD=EXP((PVSD-18.94)/13.7) 
     VP=(VF-2.0/3.0*(VF-VD))*TD 
     VPD=ECF*VP 
     IF(VPD.LT.5000.0)GO TO 7 
     VPU=VPD/NP/NB 
     GO TO 8 
   7 TD=(PVSD-30.0)*2.0 
     NP=0 
     VT=(VF-0.67*(VF-VD))*TD 
     VPU=ECF*VT 
     IF(VPU.LT.5000.0)GO TO 200 
   8 DIA=25.0 
   9 SWD=15.6+0.1765*DIA 
     VOLUME=3.1416*DIA**2/4.0*SWD 
     VOLUME=VOLUME+1.047*DIA**3/32.0 
     IF(VOLUME.GT.VPU)GO TO 10 
     DIA=DIA+5.0 
     IF(DIA.EQ.105.0)DIA=110.0 
     IF(DIA.LE.110.0)GO TO 9 
     DIA=110.0 
  10 VTOT=VPU*NT*NB 
     QS=SP/PSOLID*(DST-RST)/24.0*100.0 
     GO TO (11,12,13),LOCAT 
  11 QL=1.25*25.9*DIA**2.24 
     GO TO 14 
  12 QL=1.25*31.8*DIA**2.24 
     GO TO 14 
  13 QL=1.25*46.3*DIA**2.24 
  14 MP=NP 
     IF(NP.EQ.0)MP=1 
     QT=QS+MP*QL*NB 
     DGP=SP*PVOLAT*PVSD/10000.0*15.0/24.0 
     GR=QT/600.0/0.8/0.9 
     EGR=(GR-DGP)*600.0/1000.0 
     IF(EGR.LT.0.0)EGR=0.0 
     GO TO(31,32,33),LOCAT 
  31 TNG=30.0*24.0*EGR 
     GO TO 34 
  32 TNG=2.5*30.0*24.0*EGR 
     GO TO 34 
  33 TNG=4.0*30.0*24.0*EGR 
  34 SVOLU=SD/(PSD/100.0)/8.34/SG 
     PSOLID=PSD 
     PVOLAT=PVOLAT*SP*(1.0-PVSD/100.0)/(SVOLU*8.34*SG*PSOLID)*100.0 
  20 CALL ANAEPR(SP,DIA,NT,NB,NP,SWD,QT,DGP,LOCAT,SFLOCO,CGCUS, 
    >HRHXS,CGSES,CSPUMP,0,TNG,COSNG,RSCO,RSUS,RSXS,RSES,RSMP,RSST) 
     CALL USEREX(3) 
 200 CALL INIT(RR,QQ,39) 
     RETURN 
     END 
     SUBROUTINE ANAEIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSCO),(QQ(2),SG    ),(QQ(3),PVSD  ), 
    &(QQ( 4),PSD   ),(QQ( 5),RST   ),(QQ( 6),DST   ),(QQ( 7),TA    ), 
    &(QQ( 8),TD  ),(QQ( 9),RSUS),(QQ(10),VPU   ),(QQ(11),WA    ), 
    &(QQ(12),FA    ),(QQ(13),TNG   ),(QQ(14),VF    ),(QQ(15),SA    ), 
    &(QQ(16),VD    ),(QQ(17),VAV   ),(QQ(18),VTOT  ),(QQ(19),COSNG ), 
    &(QQ(20),GR    ),(QQ(21),GP    ) 
    >,(QQ(22),SFLOCO),(QQ(23),CGCUS),(QQ(24),HRHXS),(QQ(25),CGSES), 
    >(QQ(26),CSPUMP),(QQ(27),LOCAT) 
    >,(QQ(28),SP),(QQ(29),DIA),(QQ(30),NT),(QQ(31),NB), 
    >(QQ(32),NP),(QQ(33),SWD),(QQ(34),QT),(QQ(35),DGP) 
    >,(QQ(36),RSXS),(QQ(37),RSES),(QQ(38),RSMP),(QQ(39),RSST) 
     DIMENSION LIST(13) 
     DATA LIST/'SPEC','REPL','PERC','CONC','TEMP','XXXX','XXXX', 
    > 'XXXX','END ','SOUT','MIDD','NORT','ESTI'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,39) 
     LOCAT=2 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,4,5,6,50,50,50,10,11,12,13,14),I 
   1 SG=VALUE(1) 
     GO TO 50 
   2 RSCO=VALUE(1) 
     RSUS=VALUE(2) 
     RSXS=VALUE(3) 
     RSES=VALUE(4) 
     RSMP=VALUE(5) 
     RSST=VALUE(6) 
     GO TO 50 
   4 PVSD=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   5 PSD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   6 RST=VALUE(1) 
     DST=VALUE(2) 
     ID(MODT,3)=IA 
     ID(MODT,4)=IA 
     TA=VALUE(3) 
     GO TO 50 
  10 CALL INIT(RR,QQ,39) 
     RETURN 
  11 LOCAT=1 
     GO TO 50 
  12 LOCAT=2 
     GO TO 50 
  13 LOCAT=3 
     GO TO 50 
  14 SFLOCO=VALUE(1) 
     CGCUS=VALUE(2) 
     HRHXS=VALUE(3) 
     CGSES=VALUE(4) 
     CSPUMP=VALUE(5) 
     COSNG=VALUE(6) 
     GO TO 50 
     END 
     SUBROUTINE ANAEOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSCO),(QQ(2),SG    ),(QQ(3),PVSD  ), 
    &(QQ( 4),PSD   ),(QQ( 5),RST   ),(QQ( 6),DST   ),(QQ( 7),TA    ), 
    &(QQ( 8),TD  ),(QQ( 9),RSUS  ),(QQ(10),VPU   ),(QQ(11),WA    ), 
    &(QQ(12),FA    ),(QQ(13),TNG   ),(QQ(14),VF    ),(QQ(15),SA    ), 
    &(QQ(16),VD    ),(QQ(17),VAV   ),(QQ(18),VTOT  ),(QQ(19),COSNG ), 
    &(QQ(20),GR    ),(QQ(21),GP    ) 
    >,(QQ(22),SFLOCO),(QQ(23),CGCUS),(QQ(24),HRHXS),(QQ(25),CGSES), 
    >(QQ(26),CSPUMP),(QQ(27),LOCAT) 
    >,(QQ(28),SP),(QQ(29),DIA),(QQ(30),NT),(QQ(31),NB), 
    >(QQ(32),NP),(QQ(33),SWD),(QQ(34),QT),(QQ(35),DGP) 
    >,(QQ(36),RSXS),(QQ(37),RSES),(QQ(38),RSMP),(QQ(39),RSST) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,39) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0ANAEROBIC DIGESTION') 
     IF(NP.EQ.0.AND.VPU.LT.5000.0)GO TO 220 
     WRITE(6,204)ID(MODT,1),PVSD 
 204 FORMAT('0',A1,' PERCENT V. S. DESTROYED           ',E9.3, 
    > ' PERCENT') 
     WRITE(6,205)ID(MODT,2),PSD 
 205 FORMAT(' ',A1,' SOLIDS CONCENTRATION IN DIGESTER  ',E9.3, 
    > ' PERCENT') 
     WRITE(6,206)ID(MODT,3),RST 
 206 FORMAT(' ',A1,' RAW SLUDGE TEMPERATURE            ',E9.3,' DEG F') 
     WRITE(6,207)ID(MODT,4),DST 
     WRITE(6,227)ID(MODT,4),TA 
 207 FORMAT(' ',A1,' DIGESTER TEMPERATURE              ',E9.3,' DEG F') 
 227 FORMAT(' ',A1,' AIR TEMPERATURE                   ',E9.3,' DEG F') 
     WRITE(6,208)TD 
 208 FORMAT(' ',' ',' DETENTION TIME                    ',E9.3,' DAYS') 
     WRITE(6,209)VTOT 
 209 FORMAT('   TOTAL VOLUME                      ',E9.3,' CU FT') 
     WRITE(6,210)DGP 
 210 FORMAT('   GAS PRODUCED                      ',E9.3,' CUFT/HOUR') 
     WRITE(6,211)QT 
 211 FORMAT('   HEAT REQUIREMENT                  ',E9.3,' BTU/HR') 
     WRITE(6,212)GR 
 212 FORMAT('   DIGESTER GAS REQUIREMENT          ',E9.3,' CUFT/HOUR') 
     WRITE(6,313)TNG 
 313 FORMAT('   TOTAL NATURAL GAS REQUIRED        ',E9.3, 
    > ' CUFT/YEAR') 
     WRITE(6,217)SWD 
 217 FORMAT(' ',' ',' DIGESTER DEPTH                    ',E9.3,' FEET') 
     WRITE(6,218)DIA 
 218 FORMAT('   DIGESTER DIAMETER                 ',E9.3,' FEET') 
     GO TO 400 
 220 WRITE(6,221)VPU 
 221 FORMAT(70X,'****NOTE-VOLUME OF SLUDGE IS',F7.2,'CU.FT.'/ 
    <70X,' CONSIDER AEROBIC DIGESTION***') 
 400 WRITE(6,120)STARDA 
     CALL ANAEPR(SP,DIA,NT,NB,NP,SWD,QT,DGP, 
    >LOCAT,SFLOCO,CGCUS,HRHXS,CGSES,CSPUMP,1,TNG,COSNG, 
    >RSCO,RSUS,RSXS,RSES,RSMP,RSST) 
 222 CALL INIT(RR,QQ,39) 
     RETURN 
     END 
     SUBROUTINE ANAEPR(SP,DIA,NT,NB,NP,SWD,QT,DGP,LOCAT,XFLOCO,XGCUS, 
    > XRHXS,XGSES,XSPUMP,IQU,TNG,COSNG,RSCO,RSUS,RSXS,RSES,RSMP,RSST) 
     DIMENSION QHUL(13) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     DATA QHUL/140000.0,175000.0,250000.0,375000.0,500000.0, 
    >750000.0,1000000.0,1125000.0,1250000.0,1500000.0,2000000.0, 
    >2800000.0,3500000.0/ 
     IF(IQU.EQ.1)GO TO 678 
     WRITE(6,998)SP,DIA,NT,NB,NP,SWD,QT,DGP,LOCAT 
 998 FORMAT(' ANAEPR',2E11.5,3I5,3E11.5,I5) 
     FNUM=83.0 
     SFLOCO=XFLOCO 
     CGCUS=XGCUS 
     HRHXS=XRHXS 
     CGSES=XGSES 
     CSPUMP=XSPUMP 
     VEWN=0.1713*DIA**3+12.174*DIA**2 
     VEW=NT*VEWN*NB 
     TW=7.5+0.5*SWD 
     VCWN=0.275*(SWD+4.5)*DIA*TW 
     VCW=NT*VCWN*NB 
     TS=8.0+0.24*(SWD-15.5) 
     VCSN=0.0675*DIA**2*TS+3.1416*DIA 
     VCS=NT*VCSN*NB 
     ADCB=(0.1+0.097*NT)*DIA**2*NB 
     IF(NT.GE.6)ADCB=(0.13*NT-0.08)*DIA**2*NB 
     NH=NP/2 
     IF(NH.LT.1)NH=1 
     QH=QT/NH/NB*1.20 
     NHE=QH/3500000.0+0.99 
     IF(NHE.LT.1)NHE=1 
     QHU=QH/NHE 
     DO 1 I=1,13 
     IF(QHUL(I).GE.QHU)GO TO 2 
   1 CONTINUE 
     I=13 
   2 QHUS=QHUL(I) 
     NHEB=0 
     IF(NT.GE.2)NHEB=1 
     IF(NT.GE.4)NHEB=2 
     IF(NT.GE.9)NHEB=3 
     NHT=(NH*NHE+NHEB)*NB 
     GPS=2.0 
     IF(DIA.GT.30.0)GPS=3.0 
     IF(DIA.GT.50.0)GPS=4.0 
     IF(DIA.GT.75.0)GPS=6.0 
     NGSE=1 
     IF(NT.GT.1)NGSE=NT/2.0+0.9 
     NSTP=2 
     IF(NT.GT.1)NSTP=NT/2.0*3.0+0.9 
     DPUMP=75.0 
     IF(DIA.GT.30.0)DPUMP=150.0 
     IF(DIA.GT.70.0)DPUMP=350.0 
     PIPES=4.0 
     IF(DIA.GT.30.0)PIPES=6.0 
     IF(DIA.GT.50.0)PIPES=8.0 
     IF(DIA.GT.70.0)PIPES=10.0 
     IF(DIA.GT.90.0)PIPES=12.0 
     PIPEL=(NT*(SWD+2.17*DIA+36.0)+NT/2.0*(2.25*DIA+70.0))*NB 
     IPIRN=(6.0*NT+14.0*NT/2.0)*NB+0.9 
     IPITN=(16.0*NT+19.0*NT/2.0)*NB+0.9 
     IPIVN=(7.0*NT+23.0*NT/2.0)*NB+0.9 
     PENPIP=25.0 
     TDS=SP/2000.0 
     FKWH=46720.0*TDS**0.596 
     IF(TDS.GT.8.5)FKWH=30691.0*TDS**0.8 
     OMH=608.0 
     IF(TDS.GT.0.1)OMH=720.0*TDS**0.0734 
     IF(TDS.GT.1.0)OMH=720.0*TDS**0.4437 
     IF(TDS.GT.10.0)OMH=280.0*TDS**0.8405 
     FMMH=352.0 
     IF(TDS.GT.0.1)FMMH=448*TDS**0.105 
     IF(TDS.GT.1.0)FMMH=448.0*TDS**0.47 
     IF(TDS.GT.10.0)FMMH=200.0*TDS**0.804 
     OMMP=1.5 
     RS=30.0 
     CF=1.11 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCW*UPICW/27.0 
     COSTCS=VCS*UPICS/27.0 
     COSTCB=ADCB*2.0*UPIBC*0.5 
     FLOCOR=0.14*10.0**(0.0122*DIA) 
     IF(DIA.GT.70.0)FLOCOR=0.209*10.0**(0.00973*DIA) 
     IF(SFLOCO.EQ.0.0)SFLOCO=71000.0*FMSECI/491.6 
     CFLOCO=SFLOCO*FLOCOR 
     FIMH=0.374*DIA**1.966 
     FICH=0.037*DIA**1.966 
     PMINC=23.0 
     IF(DIA.GT.70.0)PMINC=29.0 
     FIFLOC=CFLOCO*(1.0+PMINC/100.0)+FIMH*FLABRI+FICH*UPICR 
     FIFLOC=NT*FIFLOC*NB 
     CGCUR=0.678+0.00537*DIA 
     IF(DIA.GT.60.0)CGCUR=0.3715+0.01048*DIA 
     IF(CGCUS.EQ.0.0)CGCUS=32000.0*FMSECI/491.6 
     CGCUP=CGCUS*CGCUR 
     PMIC=75.0 
     FICGCU=NP*CGCUP*(1.0+PMIC/100.0)*NB 
     IF(HRHXS.EQ.0.0)HRHXS=49000.0*FMSECI/491.6 
     HRHXR=0.6778+3.222*10.0**(-7)*QHUS 
     IF(QHUS.GT.1000000.0)HRHXR=0.256+7.44*10.0**(-7)*QHUS 
     HRHXC=HRHXS*HRHXR 
     FIHRHX=HRHXC*NHT*1.51 
     IF(CGSES.EQ.0.0)CGSES=7100.0*FMSECI/491.6 
     CGSER=0.675+0.1625*GPS 
     CGSE=CGSES*CGSER 
     FIGSEC=1.9*CGSE*NGSE*NB 
     CRPUMR=0.379+0.00766*DPUMP 
     IF(CSPUMP.EQ.0.0)CSPUMP=2500.0*FMSECI/491.6 
     CRPUMP=CSPUMP*CRPUMR 
     FIPUMP=2.5*CRPUMP*NSTP*NB 
     PCRIO=0.083*PIPES**1.197 
     CCIP=CCIPS*PCRIO 
     VCRIO=0.044*PIPES**1.507 
     CCPV=CCPVS*VCRIO 
     BENRIO=0.078*PIPES**1.233 
     CCRB=CCRS*BENRIO 
     TRIO=0.074*PIPES**1.263 
     IF(PIPES.GE.8.0)TRIO=0.011*PIPES**2.16 
     COT=COTS*TRIO 
     FMHVJ=0.25*PIPES 
     FMHPJ=1.5+0.125*PIPES 
     FMHPH=0.0633*PIPES 
     FMHVH=0.2+0.288*PIPES 
     PSMC=PIPEL*CCIP+IPIRN*CCRB+IPITN*COT+IPIVN*CCPV 
     PSLC=FLABII*(IPIVN*(2.0*FMHVJ+FMHVH)+FMHPJ*(2.0*IPIRN+3.0*IPITN)+ 
    >PIPEL*FMHPH)*1.21 
     TPIPEC=(PSMC+PSLC)*(1.0+PENPIP/100.0) 
     CC=CF*(COSTE+COSTCW+COSTCS+COSTCB+FIFLOC+FICGCU+FIHRHX+FIGSEC+ 
    >FIPUMP+TPIPEC) 
     PRIN=FIFLOC*CF 
     CALL AMORT(PRIN,RSCO,RC1) 
     PRIN=FICGCU*CF 
     CALL AMORT(PRIN,RSUS,RC2) 
     PRIN=FIHRHX*CF 
     CALL AMORT(PRIN,RSXS,RC3) 
     PRIN=FIGSEC*CF 
     CALL AMORT(PRIN,RSES,RC4) 
     PRIN=FIPUMP*CF 
     CALL AMORT(PRIN,RSMP,RC5) 
     PRIN=(COSTE+COSTCW+COSTCS+COSTCB+TPIPEC)*CF 
     CALL AMORT(PRIN,RSST,RC6) 
     OMMC=(FIFLOC+FICGCU+FIHRHX+FIGSEC+FIPUMP)*OMMP/100.0 
     XOSNG=COSNG 
     IF(XOSNG.EQ.0.0)XOSNG=2.30*ENRCCI/2470.0 
     OMMC=OMMC+XOSNG*TNG/1000.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4+RC5+RC6 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC+XOSNG*TNG/1000.0 
     RETURN 
 678 IF(KCTL.NE.0)CALL ANAEQU(DIA,NT,NB,VEW,SWD,TW,VCW,TS,VCS, 
    >ADCB,PIPES,PIPEL,IPIRN,IPITN,IPIVN,TDS,FKWH,OMH,FMMH) 
     RETURN 
     END 
     SUBROUTINE ANAEQU(DIA,NT,NB,VEW,SWD,TW,VCW,TS,VCS,ADCB,PIPES,PIPEL 
    >,IPIRN,IPITN,IPIVN,TDS,FKWH,OMH,FMMH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR ANAEROBIC DIGESTION') 
     WRITE(6,2)DIA 
2    FORMAT('0DIAMETER OF TANK',T45,E9.3,' FEET') 
     WRITE(6,3)NT 
3    FORMAT(' NUMBER OF DIGESTERS PER BATTERY',T45,I9) 
     WRITE(6,4)NB 
4    FORMAT(' NUMBER OF BATTERIES',T45,I9) 
     WRITE(6,5)VEW 
5    FORMAT(' VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
     WRITE(6,6)SWD 
6    FORMAT(' SIDEWATER DEPTH OF DIGESTER',T45,E9.3,' FEET') 
     WRITE(6,7)TW 
7    FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,8)VCW 
8    FORMAT(' REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,9)TS 
9    FORMAT(' SLAB THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,10)VCS 
10   FORMAT(' REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,11)ADCB 
11   FORMAT(' SURFACE AREA/FLOOR OF 2-STORY CONTROL BLDG',T45,E9.3, 
    >' SQ FT') 
     WRITE(6,12)PIPES 
12   FORMAT(' PIPING SIZE',T45,E9.3,' INCHES') 
     WRITE(6,13)PIPEL 
13   FORMAT(' LENGTH OF TOTAL PIPING SYSTEM',T45,E9.3,' FEET') 
     WRITE(6,14)IPIRN 
14   FORMAT(' NUMBER OF 90 DEGREE ELBOWS',T45,I9) 
     WRITE(6,15)IPITN 
15   FORMAT(' NUMBER OF TEES',T45,I9) 
     WRITE(6,16)IPIVN 
16   FORMAT(' NUMBER OF PLUG VALVES',T45,I9) 
     WRITE(6,17)TDS 
17   FORMAT(' TOTAL DRY SOLIDS TREATED PER DAY',T45,E9.3,' TONS/DAY') 
     WRITE(6,18)FKWH 
18   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,19)OMH 
19   FORMAT(' OPERATION MAN-HOUR REQUIREMENT',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,20)FMMH 
20   FORMAT(' MAINTENANCE MAN-HOUR REQUIREMENT',T45,E9.3,' MAN-HOURS/' 
    >'YR') 
     RETURN 
     END 
     SUBROUTINE ANAMIX(QSLR,SLR) 
     DIMENSION SLR(5) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/STARCO/STARDA(19) 
     IF(IPRT.EQ.1)CALL TITLE 
     IF(IPRT.EQ.1)WRITE(6,1)STARDA 
   1 FORMAT('0',19A4) 
     IF(IPRT.EQ.1)WRITE(6,2) 
   2 FORMAT(//' **** SUPERNATANT FROM SLUDGE LINE PROCESSES ', 
    >'ADDED TO LIQUID LINE ****') 
     RBOD=BOD5S/BOD5 
     RCOD=CODS/COD 
     SOLIDS=(SOLIDS*QAVE+SLR(1)*QSLR)/(QAVE+QSLR) 
     BOD5=(BOD5*QAVE+SLR(2)*QSLR)/(QAVE+QSLR) 
     BOD5S=BOD5*RBOD 
     COD=(COD*QAVE+SLR(3)*QSLR)/(QAVE+QSLR) 
     CODS=COD*RCOD 
     TKN=(TKN*QAVE+SLR(4)*QSLR)/(QAVE+QSLR) 
     FNH3=(FNH3*QAVE+SLR(5)*QSLR)/(QAVE+QSLR) 
     QAVE=QAVE+QSLR 
     QMAX=QMAX+QSLR 
     QMIN=QMIN+QSLR 
     IF(IPRT.EQ.1)CALL WASTOT 
     RETURN 
     END 
     BLOCK DATA 
     REAL LIQUDA,NTRFDA,MICRDA,MHINDA,NEUTDA,NITRDA,LRIMDA,NRBCDA 
     COMMON/LIQUID/LIQUDA(22) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/CHARCO/ID(9),EPAGO,EPAGLT,EPAG,OG,AFF,RIB, 
    >RPLS,NR,GIB,GPLS,NG,OIB,OPLS,NO,EBUR,PPH,GPCD,EOMR,BU 
     COMMON/TITLCO/ITLE(44),NNT,KKKK,LLLL,NAMT(6,2) 
     COMMON/ADDRCO/IADDA(600) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL 
    >,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP,ILABM,IGRAV 
     COMMON/STARCO/STARDA(19) 
     COMMON/BANKCO/EQULDA(59),FLOTDA(25),FILTDA(83),MICRDA(23), 
    > CARBDA(56),COUNDA(12),CROSDA(12),CIONDA(28),AIONDA(28), 
    > NEUTDA(7),DISIDA(10),TRICDA(39),CMASDA(40),STEPDA(40), 
    > PLUGDA(40),HIGHDA(40),PUREDA(36),EXTEDA(41),CONTDA(36), 
    > ZLAGOD(25),ZAERAD(51),GECODA(29),OXIDDA(34),NITRDA(34), 
    >COAGDA(13),PRIMDA(25),GRITDA(25),SCRNDA(13),COMMDA(5),SECODA(24), 
    >CLARDA(25),XECODA(25),DENIDA(56),DUMMDA(35),POSTDA(42),RBCDA(31), 
    > RECADA(6),FLOCDA(8),LRIMDA(25),FRECDA(6),SRECDA(6), 
    > OVERDA(75),RAPIDA(72),SLOWDA(77),PUMPDA(6),PECODA(24), 
    > OECODA(24),RECODA(24),DLARDA(25),DATTDA(38),NRBCDA(20), 
    > NTRFDA(33),RAWSDA(42),SLFLDA(22),AERODA(28),ANAEDA(39), 
    > THICDA(18),VACUDA(18),CENTDA(17),DRYIDA(20),HAULDA(14), 
    >MHINDA(16),FBINDA(42),PRESDA(13),PFILDA(10),WETODA(13),SLUMDA(9), 
    >ZSLUDD(17), ZFLOTD(34),ZFILTD(21),ZCHLOD(26), 
    > ZOXIDD(37),ZCOAGD(29),ZBARD(20),ZSEPTD(16),ZACTID(26), 
    > ZINTED(26),ZRAWSD(16),ZDRYID(20), 
    > DUMMY(5777) 
     EQUIVALENCE (NC,COAGDA(10)),(LOCAT,ANAEDA(27)) 
     DATA IADDA/600*0/ 
     DATA NAMT/' PRE',' PRO','CONS','    ','  EN',' ANA', 
    > 'SENT','JECT','TRCT' ,' O&M','ERGY','LYZE'/ 
     DATA STARDA/19*'* * '/ 
     DATA QAVEI,CP,REVNUE,REVOVR,REVSLO/0.0,3.0,0.0,0.0,0.0/ 
     DATA ID,EPAGO,EPAGLT,EPAG,OG,AFF,RIB, 
    >RPLS,NR,GIB,GPLS,NG,OIB,OPLS,NO,EBUR,PPH,GPCD,EOMR,BU 
    >/9*'D',75.0,85.0,75.0,0.0,3.0,10.0,100.0,30,0.0,0.0,30, 
    >0.0,0.0,30,0.0,3.5,100.0,0.0,0.0/ 
     DATA LIQUDA/3*0.0,10.0,200.0,60.0,250.0,75.0,500.0,400.00,7.6, 
    >160.0,160.0,45.0,18.0,25.0,15.0,80.0,0.0,0.0,23.0,0.0/ 
     DATA FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP, 
    > ILABM,IGRAV/ 
    > 1000.00,5.0,2.0,3.5,2.0,8.0,22.0,2.0,4*0,0.0,8*0/ 
     DATA UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM,ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL/ 
    > 48.0,1.20,207.0,91.0,577.0,67.0,163.00,15.75,13.40,7.50,0.04, 
    > 0.03,0.04,0.06,1.62,2886.0,25.20,295.2,14.70,3*0.0, 
    > 0.0,1.0/ 
     DATA AERODA/ 20.0,.18000E+02,.40000E+02,.12000E+05, 
    >.25000E+01,.90000E+00,.90000E+00,6.00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.23000E+02, 
    >.00000,.00000,.00000,.10000E+01,.00000, 
    >.00000,30.0,30.0,40.0/ 
     DATA ANAEDA/ 30.0,.10500E+01,.50000E+02,.50000E+01, 
    >.70000E+02,.10000E+03,.40000E+02,0.0,30.0, 
    >.00000E+00,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >0.0,30.0,30.0,30.0,40.0/ 
     DATA AIONDA/ 40.00,.20000E+01,.40000E+01,.12000E+02, 
    >.30000E+01,.15000E+01,.10000E+01,.80000E+01,.60000E+02, 
    >.24000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.75000E+01, 
    >.75000E+01,.10400E+01,.10000E+03,.10000E+02/ 
     DATA CARBDA/26.0,32.0,6.0,25.0,2.0,1.0,0.5,7.0,32*0.0,12.0, 
    >15.0,0.0,75.0,0.0,2.0,5*0.0,4*15.0,40.0/ 
     DATA EQULDA/24*0.0,0.03,0.9,0.9,5.0,15.0,0.0,1.0,23.0, 
    >2.0,6.0,0.0,0.30,20*0.0,15.0,40.0,15.0/ 
     EQUIVALENCE (EQULDA(56),NFF) 
     DATA NFF/0/ 
     DATA CIONDA/40.0,2.0,4.0,12.0, 
    >.30000E+01,.15000E+01,.10000E+01,.80000E+01,.50000E+02, 
    >.24000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.75000E+01, 
    >.75000E+01,.10400E+01,.10000E+03,.10000E+02/ 
     DATA CENTDA/ 40.0,.10000E+01,.80000E+01,.50000E+01, 
    >.20000E+01,.12500E+01,1.0,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,18.0/ 
     DATA DISIDA/ 40.0,.30000E+02,.10000E+02,.10000E+01, 
    >.00000,.00000,.00000,0.00,.00000,15.0/ 
     DATA COAGDA/40.0,250.0,90.,60.,10.5,0.0,60.0,40.0,0.0, 
    > 0.0,50.0,5.0,40.0/ 
     EQUIVALENCE (NCC,COAGDA(10)) 
     DATA NCC/1/ 
     DATA COMMDA/ .00000,.20000E+01,.00000,.00000, 
    >.00000   / 
     DATA CMASDA/ 40.0,.13500E-02,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.50000E+00,.45000E+04,.31500E+04, 
    >.10350E+01,10.00,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+00, 
    >.90000E+00,.10000E+01,6.0,.00000,.00000, 
    >.00000,20.0,.00000,.00000,.00000, 
    >0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA CONTDA/ 40.0,.10000E+01,.30000E+01,.30000E+04, 
    >.60000E+04,.70000E+02,.12500E+01,.30000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.10000E+02,.50000E+00, 
    >.90000E+00,.90000E+00,.10000E+01,6.0,.00000, 
    >.00000,20.0,.00000,.00000,.00000, 
    >0.0,0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA COUNDA/ 40.0,.20000E+01,.60000E+03,.18000E+04, 
    >.20000E+03,.15000E+02,.00000,.00000,.30000E-01, 
    >.00000,.00000,.00000   / 
     DATA CROSDA/ 40.0,.20000E+01,.60000E+03,.18000E+04, 
    >.20000E+03,.15000E+02,.00000,.00000,.00000, 
    >.00000,.00000,.00000   / 
     DATA DENIDA/5.0,2.0,3.0,1200.0,960.0,3.0,0.9,3.0,0.16,0.04, 
    >1.0,0.1,3*0.0,1.0,9*0.0,8.0,26*0.0,20.0,20.0,25.0,40.0/ 
     DATA DATTDA/3.0,3.0,41.0,0.0,0.75,12.0,12.0,4*0.0,3.0,23*0.0, 
    >25.0,25.0,40.0/ 
     DATA DRYIDA/ .12000E+02,.20000E+01,.20000E+02,.50000E+01, 
    >.30000E+01,.75000E+00,.57000E+00,0.0,.50000E+02, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,40.0,.00000   ,20.0/ 
     DATA EXTEDA/ 40.0,.12000E-02,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.10000E+00,.35000E+04,.25000E+04, 
    >.10300E+01,1.0000E+01,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.56000E+00, 
    >.90000E+00,.90000E+00,.10000E+01,6.0,.00000, 
    >.00000,20.0,.00000,.00000,.00000, 
    >0.0,0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA FILTDA/ 40.0,.60000E+01,.50000E-02,.10000E+01, 
    >.10000E+01,.10000E+01,.10000E+01,.00000,.60000E+01, 
    >.50000E+01,.40000E+01,.60000E+01,.00000,.50000E+00, 
    >.40000E+00,.47000E+00,.60000E+00,.00000,.46000E-02, 
    >.20000E-02,.10000E-02,.50000E-01,.00000,.70000E+01, 
    >.85000E+01,.80000E+01,.60000E+01,.00000,.14000E+01, 
    >.26500E+01,.26500E+01,.26500E+01,.00000,.75000E+00, 
    >.16540E+03,.00000,.62400E+02,.40000E+00,.50000E+01, 
    >.50000E+02,.10000E+01,.10000E+01,.10000E+01,.30000E+01, 
    >.65000E+01,.10000E+02,.40000E+01,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.10000E+01, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.10087E+01, 
    >.00000,.00000,.00000,.00000,.00000, 
    >0.0,0.0,20.0,25.0/ 
     DATA FLOCDA/ .25000E+03,.30000E+01,.45000E+02,10.5, 
    >.00000,.00000,0.0,40.0  / 
     DATA FLOTDA/ 40.0,.20000E-01,.40000E+02,.50000E+00, 
    >.15000E+02,.35000E+01,.10000E+01,.80000E+02,.30000E+01, 
    >.00000,.00000,.00000,.00000,.30000E+01, 
    >.00000,.00000,.30000E+02,.00000,.30000E+02, 
    >.00000,.00000,.10000E+02,.00000,.00000,30.0/ 
     DATA FBINDA/ .80000E+01,.87300E+02,.12600E+02,.00000, 
    >.10000E+01,.10000E+04,.75000E+02,.15000E+02,.60000E+01, 
    >.11000E+03,.59800E+02,.84000E+01,.27500E+02,.10000E+01, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.18000E+05,.50000E+01,0.00, 
    >0.0,40.0,30.0/ 
     DATA THICDA/ 40.0,.00000,.00000,.50000E+01, 
    >.10000E+02,.00000,.00000,0.0,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+01, 
    >0.0,0.0,0.0,40.0/ 
     DATA GRITDA/ 40.0,1.00,.20000E+00,.26500E+01, 
    >.20000E+01,.15000E+01,.10000E+01,.40000E+01,.00000, 
    >0.000,.17000E+01,.35000E-01,.40000E+01,2.500, 
    >3.0,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000   / 
     DATA HAULDA/ .80000E+01,.75000E+00,.10000E+01,.00000, 
    >.00000,.00000,.00000,.10000E+02,.00000, 
    >.80000E+04,.00000,.00000,6.0,40.0/ 
     DATA HIGHDA/ 40.0,.00000,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.20000E+01,.60000E+04,.45000E+04, 
    >.10350E+01,.10000E+02,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+00, 
    >.90000E+00,.10000E+01,6.0,.00000,.00000, 
    >20.0,.00000,.00000,.00000,.00000, 
    >0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA MICRDA/7.0,60.0,4*50.0,4.0,14*0.0,40.0,15.0/ 
     DATA MHINDA/ .10000E+02,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.26000E+03,.00000,0.0,30.0,40.0/ 
     DATA NEUTDA/ 40.0,.10000E+00,.30000E+00,.00000, 
    >.00000,.00000,.50000E+01/ 
     DATA NITRDA/23.0,10.0,2.0,5.0,0.05,0.65,15.0,6.0,0.9,0.9, 
    >1.0,0.1,20.0,1.0,6*0.0,300.0,8.0,7*0.0,20.0,30.0,30.0,25.0,40.0/ 
     DATA NRBCDA/23.0,10.0,2.0,5.0,12*0.0,300.0,0.0,15.0,40.0/ 
     DATA OXIDDA/ 40.0,.12000E-02,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.65000E-01,.60000E+04,.37500E+04, 
    >.10300E+01,.10000E+02,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.56000E+00, 
    >.90000E+00,.90000E+00,.35000E+01,.00000,.00000, 
    >.80000E-01,.00000,.00000,15.0,25.0/ 
     DATA PLUGDA/ 40.0,.13500E-02,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.30000E+00,.25000E+04,.17500E+04, 
    >.10300E+01,1.00000E+01,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+00, 
    >.90000E+00,.10000E+01,6.0,.00000,.00000, 
    >20.0,.00000,.00000,.00000,.00000, 
    >0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA POSTDA/2.0,5.0,10.0,1.0,23.0,2.0,0.0,0.9,0.9,6.0, 
    >0.8,1.0,26*0.0,20.0,30.0,30.0,40.0/ 
     EQUIVALENCE (POSTDA(7),ITPO) 
     DATA ITPO/1/ 
     DATA PRIMDA/ 40.0,.10000E+04,.00000,.10500E+01, 
    >.40000E+01,.58000E+02,.32000E+02,.15000E+05,.90000E+01, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.40000E+02,.50000E+01,.00000,.00000,.50000E+01, 
    >.00000,.00000,.00000,.00000,.00000,40.0/ 
     DATA PUREDA/40.0,20.0,20.0,20.0,25.0, 
    >.15000E+00,.62500E+00,.70000E+04,.55000E+04, 
    >.10300E+01,1.00000E+01,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+00, 
    >.90000E+00,.00000,.35000E+01,.00000,.00000, 
    >.00000,0.10,.00000,.00000,.00000, 
    >.00000,.00000   / 
     DATA RECADA/ .15000E+02,.50000E+02,.15000E+03,.00000, 
    >0.0,40.0   / 
     DATA FRECDA/ .15000E+02,.50000E+02,.15000E+03,.00000, 
    >0.0,40.0   / 
     DATA SRECDA/ .15000E+02,.50000E+02,.15000E+03,.00000, 
    >0.0,40.0   / 
     DATA SCRNDA/ .00000,.10000E+01,.25000E+01,.15000E+01, 
    >.25000E+00,.30000E+02,.24200E+01,.30000E+01,.25000E+01, 
    >.00000,1.0000,0.0,1.0   / 
     DATA SECODA/ 40.0,.20000E+02,.50000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,0.0,40.0/ 
     DATA LRIMDA/ .10000E+04,.00000,.10300E+01,.60000E+01, 
    >.80000E+02,.85000E+02,.15000E+05,.90000E+01,.00000, 
    >.00000,.00000,.00000,.00000,.85000E+02, 
    >.30000E+02,.00000,.00000,.80000E+02,.00000, 
    >.00000,.00000,.00000,.00000,40.0,40.0/ 
     DATA CLARDA/ 40.0,.20000E+02,.60000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    > 0.0,0.0,0.53,0.0,0.0,40.0/ 
     DATA XECODA/ 40.0,.20000E+02,.80000E+03,.10300E+01, 
    >.30000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,1.6000E+03,.00000,.00000   ,40.0/ 
     DATA SLFLDA/ 40.0,.20000E-01,.60000E+02,.30000E+01, 
    >1.0000E+01,.25000E+01,.10000E+01,.80000E+02,.40000E+01, 
    >.00000,.00000,.00000,.00000,.20000E+01, 
    >.00000,.10000E+01,.00000,.00000,.00000, 
    >0.0,0.0,30.0/ 
     DATA STEPDA/ 40.0,.12000E-02,.73000E+00,.52000E+00, 
    >.75000E-01,.15000E+00,.30000E+00,.25000E+04,.17500E+04, 
    >.10350E+01,1.00000E+01,.40000E+00,.53000E+00,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.90000E+00, 
    >.90000E+00,1.0000,.60000E+01,.00000,.00000, 
    > 20.0,0.0,0.0,0.0,0.0, 
    >0.0,0.0,20.0,30.0,30.0,25.0/ 
     DATA TRICDA/0.65,0.,0.75,26.,0.,30.,0.0,28*0.,40.,40.,25.,40.0/ 
     EQUIVALENCE (TRICDA(5),ITRTY) 
     DATA ITRTY/3/ 
     DATA VACUDA/ 40.0,0.0,.40000E+10,.20000E+02, 
    >25.0,.30000E+01,.10000E+01,.10000E+02,.50000E+01, 
    >.80000E+01,.00000,3.5,.00000,.00000, 
    >.00000,.00000,.00000,.00000   / 
     DATA PRESDA/2*0.0,45.0,0.0,65.0,0.0,2.0,0.0,8.0,2.0,0.0,5.0,40.0/ 
     DATA PFILDA/0.0,0.0,19.0,0.0,75.0,8.0,6.0,0.0,5.0,40.0/ 
     DATA WETODA/30.0,0.0,0.0,600.0,0.77,482.0,0.0,1.0,0.0,75.0,0.0, 
    >0.0,40.0/ 
     DATA OVERDA/0.0,90.0,0.0,5.0,3.5,0.8,0.4,10.0,365.0,52.0, 
    >5.0,15.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,20.0,30.0,50.0,2.0, 
    >0.0,10.0,2.75,27*0.0,3.50,0.0,6*0.0,0.0,0.0,7.0,8.0, 
    >25.0,20.0,20.0,20.0,20.0,20.0,40.0,15.0,40.0,15.0/ 
     EQUIVALENCE (NOWEL,OVERDA(24)) 
     EQUIVALENCE (MOWEL,RAPIDA(24)) 
      EQUIVALENCE (LOWEL,SLOWDA(24)) 
     DATA RAPIDA/40.0,45.00,0.0,0.0,35.0,0.80,0.4,15.,365.0,52.0,0.0, 
    > 0.0,0.0,0.0,0.00,0.0,0.0,0.0,0.0,20.0,30.0,50.0,2.0,0.0,10.0, 
    > 2.75,27*0.,0.,0.,0.,8*0.,20.,0.,20.,20.,20.,20.,20.,25./ 
     DATA SLOWDA/40.0,20.0,0.0,0.0,2.0,0.8,0.4,0.0,365.0,52.0,0.0, 
    >10.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,20.0,30.0,50.0,2.0,0.0, 
    >10.0,2.75,27*0.0,80.0,0.0,0.0,8.0,7.0,0.2,8*0.0, 
    >25.0,20.0,20.0,20.0,20.0,20.0,20.0,15.0,40.0,15.0/ 
     DATA PECODA/ 40.0,.20000E+02,.50000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,0.0,40.0/ 
     DATA OECODA/ 40.0,.20000E+02,.50000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,0.0,40.0/ 
     DATA RECODA/ 40.0,.20000E+02,.50000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,0.0,40.0/ 
     DATA DLARDA/ 40.0,.20000E+02,.60000E+03,.10300E+01, 
    >.10000E+01,.15000E+05,.90000E+01,.00000,.00000, 
    >.20000E+02,.00000,.00000,.00000,.00000, 
    >.00000,.00000,.00000,.00000,.00000, 
    > 0.0,0.0,0.53,0.0,0.0,40.0/ 
     DATA RBCDA/25.0,10.0,25.0,125.0,15.0,24*0.0,15.0,40.0/ 
     DATA NTRFDA/23.0,10.0,2.0,5.0,41.0,0.75,8*0.0,13*0.0,300.0,0.0, 
    >40.0,40.0,25.0,40.0/ 
     DATA RAWSDA/15.0,40.0,0.0,0.0,34*0.0,25.0,25.0,25.0,40.0/ 
     EQUIVALENCE(RAWSDA(4),ITEP) 
     DATA ITEP/0/ 
     DATA GECODA/2500.0,20.0,800.0,1.03,3.0,15000.0,9.0,0.0,0.0, 
    >60.0,8*0.0,5*0.0,65.0,65.0,20.0,60.0,40.0,40.0/ 
     DATA ZACTID/15.0,10.4,0.02,1.02,30.0,25.0,0.0,25.,30.,10.,15., 
    >10000.0,12*0.0,20.0,40.0/ 
     DATA ZAERAD/30.0,10.0,10.0,0.00135,0.73,0.52,0.075,0.15,1.035, 
    >4*0.0,0.06,18*0.0,0.9,0.9,1.0,2.0,3.0,0.0,0.3,3.0,0.,400.0,320.0, 
    >5*0.0,15.0,40.0,15.0/ 
     DATA ZBARD/3.5,0.0,40.0,0.5,1.0,0.3125,1.67,10.0,11*0.0,20.0/ 
     DATA ZCHLOD/30.0,40.0,0.0,8.0,8.0,15*0.0,0.0,3*0.0,15.0,40.0/ 
     DATA ZCOAGD/1.0,250.0,90.0,50.0,800.0,17*0.0,60.0,60.0,40.0, 
    >10.5,5.0,40.0,40.0/ 
     DATA ZDRYID/15.0,17*0.0,20.0,40.0/ 
     DATA ZFILTD/5.0,4.0,20.0,10.0,2.0,14*0.0,20.0,40.0/ 
     DATA ZFLOTD/40.0,0.02,40.0,0.5,2.0,3.0,3.0,3*0.0,1.02,0.0, 
    >100.0,14*0.0,80.0,30.0,30.0,10.0,10.0,0.0,30.0/ 
     EQUIVALENCE (ZFLOTD(12),ICHEM) 
     DATA ICHEM/2/ 
     DATA ZINTED/500000.0,30.0,2*0.0,3.0,18*0.0,20.0,20.0,40.0/ 
     DATA ZLAGOD/1.0,90.0,3.0,0.0,17*0.0,15.0,20.0,20.0,40.0/ 
     EQUIVALENCE (ZLAGOD(6),ITY) 
     DATA ITY/1/ 
     DATA ZOXIDD/40.,0.067,12.5,100.,0.68,90.,90.,0.,15.,2.35,23*0., 
    >60.0,30.0,0.0,25.0/ 
     DATA ZRAWSD/40.0,13*0.0,25.0,40.0/ 
     DATA ZSEPTD/0.5,13*0.0,20.0,40.0/ 
     DATA ZSLUDD/2.3,1.0,14*0.0,40.0/ 
     DATA DUMMY/5777*0.0/ 
     EQUIVALENCE (IRECOV,RAPIDA(18)) 
     DATA IRECOV/0/ 
     DATA NC,LOCAT/1,2/ 
     DATA NOWEL/9/ 
     DATA MOWEL/9/ 
     DATA LOWEL/9/ 
     DATA PUMPDA/0.0,100.0,7.0,24.0,25.0,40.0/ 
     END 
     COMPUTER ASSISTED PROCEDURE FOR THE DESIGN AND EVALUATION OF 
                     WASTEWATER TREATMENT PLANTS 
                              (CAPDET) 
 
                        PROGRAM DEVELOPED BY 
                  THE CIVIL ENGINEERING DEPARTMENT 
                    MISSISSIPPI STATE UNIVERSITY 
 
                               FOR THE 
                    U. S. ARMY CORPS OF ENGINEERS 
                    WATERWAYS EXPERIMENT STATION 
                       VICKSBURG, MISSISSIPPI 
 
                           PROGRAMMED BY 
                       DR. M. W. COREY, P. E. 
                                AND 
                       DR. J. W. EPPS, P. E. 
 
 
                     VERSION:  FEBRUARY 2, 1981 
 
 
     REAL LIQUDA 
     DIMENSION MASTER(4,10,60),NO(4,60),KSTRT(4,3),KEND(4,3), 
    &LISQ(57),LISS(15),LISTPL(45),LISTPS(19), 
    &LIST(10),LISTS(5),LMT(60),KNT(60),LISTRA(60),IZZZ(10),ITRN(14) 
     DIMENSION ID(3,448) 
     DIMENSION LISTC(11),NIST(10),KIST(4) 
     DIMENSION COSTSB(6) 
     DIMENSION MAST(60),KPRTA(100,5),NLMT(5) 
     DIMENSION LTLE(66) 
     DIMENSION NOQ(57),NOS(15),MIST(10),MISTRA(60) 
     DIMENSION NOQS(57),NOSS(15),NIDQ(57),NIDS(15),NIDQS(57),NIDSS(15) 
     DIMENSION ISPEC(18),KXXX(6) 
     COMMON/CHARCO/DUMX(28) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/SPCLCO/KNATS(10),KNATL(10),ISPTYP(40),PER(40),ISPTNK(40), 
    >NEXTAD,KNATSS(10),KNATSL(10) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/IDACO/IDAQ(57),IDAS(15),IDAQS(57),IDASS(15) 
     COMMON/STESPE/FOUN,EFPU,EFOT,EFDI,FMOB,SITE,ELEC,FIAC,FMYRP, 
    >PUMP,FLABM,GRAV 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP, 
    > ILABM,IGRAV 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/COSTS/CAPCOS,OPMCOS,AMRCOS,RATE,NOPER,WAGE 
     COMMON ICTL,KCTL,IPRT,USE(22) 
     COMMON/BANKCO/BANKDA(8000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3),LQADS(80,3),LSADS(20,3) 
     COMMON/LIQUID/LIQUDA(22) 
     COMMON/SSLUCO/SSLUDA(3) 
     COMMON/PSLUCO/PSLUDA(3) 
     COMMON/DESICO/DESIDA(20) 
     COMMON/STARCO/STARDA(19) 
     COMMON/TRAINS/ISCH(100,5),FARE(100,5),TAB(5),LSCH(500) 
     COMMON/TITLCO/ITLE(44),NNT,KKKK,LLLL,NAMT(6,2) 
     COMMON/USERCO/NOUSER,USERDA(30,9),MODT 
     COMMON/QQCO/QQ(100) 
     COMMON/XXCO/XXDA(100) 
     DATA NOSPC/0/ 
     DATA ISPEC/'L SP','L ST','L SH','L AD','L RE','L ME', 
    >'S SP','S ST','S SH','S AD','S RE','S ME', 
    >'P SP','P ST','P SH','P AD','P RE','P ME'/ 
     DATA ID/1344*'D'/ 
     DATA ITRN/1,12,20,21,26,35,36,43,44,45,49,51,56,33/ 
     DATA NIDQ/7,6,7,1,8,6*0,3,11,11,11,10,2*11,5,4,8,5,11,8,4,9,11, 
    >7,1,0,4,4,4,10,0,6,2,2*0,9,2*0,28,26,28,3*0,3,4*4,8,2,2*4/ 
     DATA NIDS/6,7,2*4,7,6,2,4,1,10,4*0,2/ 
     DATA NIDQS/0,7,4,7*0,5,9*0,8,0,4,0,4,2*0,4,17*0,1,2*3,8*0,1/ 
     DATA NIDSS/0,5*0,1,8*0/ 
     DATA KIST/'0','1','2',' '/ 
     DATA NOQ/59,25,83,23,56,12,12,28,28,7,10,39,40,40,40,40,36, 
    >41,36,25,51,29,34,34,13,25,25,13,5,0,24,25,25,56,35,42,31, 
    >6,8,25,6,6,75,72,77,0,0,0,6,24,24,24,25,38,20,33,42/ 
     DATA NOS/22,28,39,18,18,17,20,14,16,42,13,10,13,9,17/ 
     DATA NOQS/0,34,21,7*0,26,11*0,37,0,29,0,0,20,17*0, 
    >16,26,26,8*0,16/ 
     DATA NOSS/0,5*0,20,8*0/ 
     DATA KOST/'COST' / 
     DATA ICHAR/'CHAR'/ 
     DATA IBLK/'    '/ 
     DATA LISTC/'LIST'  ,'ANAL'  ,'PRIN'  ,  'GO  ','OUTP','SUMM', 
    > 'PRES','PROJ','CONS','OPER','ENER'/ 
     DATA LISTS/'LIQU'  ,'SECO'  ,'PRIM'  ,'BLOC'  ,'WAST'  / 
     DATA LISQ/'EQUA'  ,'FLOT'  ,'FILT'  ,'MICR'  , 
    > 'CARB','COUN','CROS','CATI','ANIO','NEUT', 
    > 'CHLO','TRIC','COMP','STEP','PLUG','HIGH', 
    > 'PURE','EXTE','CONT','LAGO','AERA','CLAR','OXID', 
    > 'NITR','COAG','PRIM','GRIT','SCRE','COMM','XXXX', 
    > 'A SE','N SE','T SE','DENI','DUMM','POST','RBC ', 
    > 'RECA','FLOC','L PR','FIRS','SECO', 
    >'OVER','RAPI','SLOW','SEPT','ACTI','INTE','PUMP','P SE','O SE', 
    >'R SE','D SE','ATTA','N RB','N TR','RAW '/ 
     DATA LISS/'AIR ','AERO','ANAE','GRAV','VACU','CENT','DRYI', 
    > 'HAUL','MULT','FLUI','FLTR','BELT','WET ','USER','SLUD'/ 
     DATA LISTPL/'EQUA','FLOT','FILT','MICR','CARB','COUN','CROS', 
    > 'CATI','ANIO','NEUT','CHLO','TRIC','COMP','STEP','PLUG','HIGH', 
    > 'PURE','EXTE','CONT','LAGO','AERA','RAW ','OXID', 
    > 'NITR','COAG','PRIM','PREL','DENI','NULL','DUMM', 
    > 'POST','RBC ','ATTA','RECA','TWO ', 
    >'OVER','RAPI','SLOW','SEPT','ACTI','INTE', 
    >'PUMP','N RB','N TR','CLAR'/ 
     DATA LISTPS/'AIR ','AERO','ANAE','GRAV','VACU','CENT', 
    > 'DRYI','A MI','B MI','C MI','NULL', 
    > 'HAUL','MULT','FLUI','FLTR','BELT','WET ','USER','SLUD'/ 
     DATA KTLE/'TITL'/ 
     DATA ILSID,ISSID/'L SI','S SI'/ 
     DATA ISMAL/'SMAL'/ 
     WRITE(6,1234) 
1234 FORMAT('1',32('*')/' * MISSISSIPPI STATE UNIVERSITY *'/ 
    > ' *    VERSION DATED 02/02/81    *'/' ',32('*')) 
      LITTLE=0 
     NOLIQ=57 
     NOSLU=15 
     NOPRS=19 
     NOPRL=45 
     LQADD(1,1)=1 
     IDAQ(1)=1 
     DO 5012 I=1,10 
     KNATSS(I)=0 
     KNATSL(I)=0 
     KNATL(I)=0 
5012 KNATS(I)=0 
     DO 7100 I=2,NOLIQ 
     IDAQ(I)=IDAQ(I-1)+NIDQ(I-1) 
7100 LQADD(I,1)=LQADD(I-1,1)+NOQ(I-1) 
     LSADD(1,1)=LQADD(NOLIQ,1)+NOQ(NOLIQ) 
     IDAS(1)=IDAQ(NOLIQ)+NIDQ(NOLIQ) 
     DO 7101 I=2,NOSLU 
     IDAS(I)=IDAS(I-1)+NIDS(I-1) 
7101 LSADD(I,1)=LSADD(I-1,1)+NOS(I-1) 
     LQADS(1,1)=LSADD(NOSLU,1)+NOS(NOSLU) 
     IDAQS(1)=IDAS(NOSLU)+NIDS(NOSLU) 
     DO 7102 I=2,NOLIQ 
     IDAQS(I)=IDAQS(I-1)+NIDQS(I-1) 
7102 LQADS(I,1)=LQADS(I-1,1)+NOQS(I-1) 
     LSADS(1,1)=LQADS(NOLIQ,1)+NOQS(NOLIQ) 
     IDASS(1)=IDAQS(NOLIQ) 
     DO 7103 I=2,NOSLU 
     IDASS(I)=IDASS(I-1)+NIDSS(I-1) 
7103 LSADS(I,1)=LSADS(I-1,1)+NOSS(I-1) 
     DO 7104 I=1,14 
     M=ITRN(I) 
     IDAQS(M)=IDAQ(M) 
7104 LQADS(M,1)=LQADD(M,1) 
     LSADS(14,1)=LSADD(14,1) 
     LSADS(15,1)=LSADD(15,1) 
     IDASS(15)=IDAS(15) 
     NEXTAD=0 
     DO 7108 I=1,NOLIQ 
7108 NEXTAD=NEXTAD+NOQ(I)+NOQS(I) 
     DO 7109 I=1,NOSLU 
7109 NEXTAD=NEXTAD+NOS(I)+NOSS(I) 
     M=NEXTAD 
     NEXTAD=NEXTAD+1 
     M2=2*M 
     DO 7105 I=NEXTAD,M2 
     IMM=I-M 
     BANKDA(I)=BANKDA(IMM) 
     MPI=M+I 
7105 BANKDA(MPI)=BANKDA(I) 
     DO 7106 I=1,NOLIQ 
     LQADD(I,2)=LQADD(I,1)+M 
     LQADD(I,3)=LQADD(I,1)+M2 
     LQADS(I,2)=LQADS(I,1)+M 
7106 LQADS(I,3)=LQADS(I,1)+M2 
     DO 7107 I=1,NOSLU 
     LSADD(I,2)=LSADD(I,1)+M 
     LSADD(I,3)=LSADD(I,1)+M2 
     LSADS(I,2)=LSADS(I,1)+M 
7107 LSADS(I,3)=LSADS(I,1)+M2 
     NEXTAD=3*M+1 
     WRITE(6,8800)NEXTAD 
8800 FORMAT(' ',I5,3X,3I5,2X,I5,4X,3I5,2X,I5) 
     DO 8801 I=1,NOLIQ 
8801 WRITE(6,8800)I,(LQADD(I,J),J=1,3),NOQ(I),(LQADS(I,J),J=1,3), 
    >NOQS(I) 
     DO 8802 I=1,NOSLU 
8802 WRITE(6,8800)I,(LSADD(I,J),J=1,3),NOS(I),(LSADS(I,J),J=1,3), 
    >NOSS(I) 
      KFIRST=0 
     KCTL=0 
     DIVSOR=132.0 
     EPACI=XEPACI 
     DO 8002I=1,44 
8002 ITLE(I)=IBLK 
     IPRT=0 
     DO 8021 I = 1,30 
     DO 8021 J=1,9 
8021 USERDA(I,J)=-1.0 
     NOUSER=0 
     LANA=0 
 
 100 READ(5,101)IPROC,IXXX,LTLE 
     WRITE(6,951)IPROC,IXXX,LTLE 
 951 FORMAT(' ',A4,A2,66A1) 
     IF(IPROC.NE.ISMAL)GO TO 7701 
     IF(KFIRST.EQ.0)GO TO 7702 
7705 FORMAT('0SMALL FACILITY REQUEST MUST BE FIRST INPUT CARD', 
    >' - RUN ABORTED') 
     WRITE(6,7705) 
     STOP 
7702 LITTLE=1 
     KFIRST=1 
     GO TO 100 
7701 KFIRST=1 
     IF(IPROC.EQ.LISTS(1))GO TO 42 
     IF(IPROC.EQ.KTLE) GO TO 8000 
     IF (IPROC.EQ.KOST)GO TO 8020 
     IF(IPROC.EQ.ICHAR)GO TO 7020 
 101 FORMAT(A4,A2,66A1) 
9999 CALL SCAN(NN,VALUE,66,LTLE) 
     MODT=VALUE(1)+1.01 
     IF(IPROC.EQ.ILSID)GO TO 5001 
     IF(IPROC.EQ.ISSID)GO TO 5002 
     DO 1020 I=1,NOLIQ 
     IF(IPROC.EQ.LISQ(I))GO TO 1021 
1020 CONTINUE 
     DO 1022 I=1,NOSLU 
     IF(IPROC.EQ.LISS(I))GO TO 1023 
1022 CONTINUE 
     WRITE(6,103)IPROC 
 103 FORMAT(' ',A4,2X,' IS NOT A VALID PROCESS CARD') 
     GO TO 100 
8000 DO 8001 I =1,44 
8001 ITLE(I)=LTLE(I) 
     GO TO 100 
8020 CALL USERIN 
     GO TO 100 
7020 CALL CHARIN 
     GO TO 100 
1021 IF(LITTLE.EQ.0)GO TO 7021 
     IF(I.EQ.35)GO TO 7021 
     CALL SMALIN(LQADS,LSADS,MODT,BANKDA,ID,I,1,IDAQS,IDASS) 
     GO TO 100 
7021 KADD = LQADD(I,MODT) 
     IADD=IDAQ(I) 
     GO TO (8,9,10,11,12,13,14,15,16,17,18,19,20,21,22, 
    &23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,801, 
    &802,803,806,807,808,809,810,811,812,813,820,820,820,849,814,815, 
    > 852,853,854,855,856,857),I 
 820 WRITE(6,821)IPROC 
 821 FORMAT(' ',A4,' NOT ALLOWED LARGE FACILITY CAPDET') 
     GO TO 100 
 802 CALL POSTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 803 CALL RBCIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 801 CALL DUMMIN(BANKDA(KADD)) 
     GO TO 100 
 806 CALL RECAIN(BANKDA(KADD)) 
     GO TO 100 
 807 CALL FLOCIN(BANKDA(KADD)) 
     GO TO 100 
 808 CALL LRIMIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 809 CALL FRECIN(BANKDA(KADD)) 
     GO TO 100 
 811 CALL OVERIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 812 CALL RAPIIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 813 CALL SLOWIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 814 CALL PECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 815 CALL OECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
1023 IF(LITTLE.EQ.0)GO TO 7023 
     IF(I.EQ.14)GO TO 7023 
     CALL SMALIN(LQADS,LSADS,MODT,BANKDA,ID,I,2,IDAQS,IDASS) 
     GO TO 100 
7023 KADD=LSADD(I,MODT) 
     IADD=IDAS(I) 
     GO TO (1,2,3,4,5,6,7,508,509,510,511,512,513,514,515),I 
 810 CALL SRECIN(BANKDA(KADD)) 
     GO TO 100 
   1 CALL SLFLIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   2 CALL AEROIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   3 CALL ANAEIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   4 CALL THICIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   5 CALL VACUIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   6 CALL CENTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   7 CALL DRYIIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   8 CALL EQULIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   9 CALL FLOTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  10 CALL FILTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  11 CALL MICRIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  12 CALL CARBIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  13 CALL COUNIN(BANKDA(KADD)) 
     GO TO 100 
  14 CALL CROSIN(BANKDA(KADD)) 
     GO TO 100 
  15 CALL CIONIN(BANKDA(KADD)) 
     GO TO 100 
  16 CALL AIONIN(BANKDA(KADD)) 
     GO TO 100 
  17 CALL NEUTIN(BANKDA(KADD)) 
     GO TO 100 
  18 CALL DISIIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  19 CALL TRICIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  20 CALL CMASIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  21 CALL STEPIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  22 CALL PLUGIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  23 CALL HIGHIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  24 CALL PUREIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  25 CALL EXTEIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  26 CALL CONTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  27 CALL ZLAGOI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  28 CALL ZAERAI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  29 CALL GECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  30 CALL OXIDIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  31 CALL NITRIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  32 CALL COAGIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  33 CALL PRIMIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  34 CALL GRITIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  35 CALL SCRNIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  36 CALL COMMIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  37 GO TO 100 
  38 CALL SECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  39 CALL CLARIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  40 CALL XECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  41 CALL DENIIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 508 CALL HAULIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 509 CALL MHININ(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 510 CALL FBININ(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 511 CALL PRESIN(BANKDA(KADD)) 
     GO TO 100 
 512 CALL PFILIN(BANKDA(KADD)) 
     GO TO 100 
 513 CALL WETOIN(BANKDA(KADD)) 
     GO TO 100 
 514 CALL SLUMIN(BANKDA(KADD)) 
     GO TO 100 
 515 CALL ZSLUDI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 849 CALL PUMPIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 852 CALL RECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 853 CALL DLARIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 854 CALL DATTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 855 CALL NRBCIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 856 CALL NTRFIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 857 CALL RAWSIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
5001 IF(KNATL(MODT).NE.0)GO TO 5003 
     KNATSL(MODT)=NEXTAD 
     NEXTAD=NEXTAD+22 
     KNATL(MODT)=NEXTAD 
     NEXTAD=NEXTAD+22 
5003 KADD=KNATSL(MODT) 
     CALL LSIDIN(BANKDA(KADD)) 
     GO TO 100 
5002 IF(KNATS(MODT).NE.0)GO TO 5004 
     KNATSS(MODT)=NEXTAD 
     NEXTAD=NEXTAD+3 
     KNATS(MODT)=NEXTAD 
     NEXTAD=NEXTAD+3 
5004 KADD=KNATSS(MODT) 
     CALL SSIDIN(BANKDA(KADD)) 
     GO TO 100 
 INITIALIZE TREATEMENT SCHEMES 
  42 DO 45 N=1,4 
     DO 43 L=1,3 
     KSTRT(N,L)=0 
  43 KEND(N,L)=0 
     DO 45 J=1,60 
     NO(N,J)=0 
     DO 45 I=1,10 
  45 MASTER(N,I,J)=0 
     DO 800 J=1,5 
     NLMT(J)=0 
     DO 800 I=1,100 
     ISCH(I,J)=0 
 800 FARE(I,J)=0.0 
 BEGIN SCHEME INPUT 
     N=0 
     L=1 
  46 N=N+1 
     J=0 
     KSTRT(N,L)=1 
 200 READ(5,201)KTYPE,KXXX,(LIST(I),IZZZ(I),NIST(I),I=1,10) 
 201 FORMAT(A4,6A1,10(A4,A2,A1)) 
     WRITE(6,952)KTYPE,KXXX, 
    >(LIST(I),IZZZ(I),NIST(I),I=1,10) 
 952 FORMAT(' ',A4,6A1,10(A4,A2,A1)) 
     DO 5005 I=1,18 
     IF(KTYPE.EQ.ISPEC(I))GO TO 5006 
5005 CONTINUE 
     DO 2010 I=1,10 
     DO 2011 II=1,4 
     IF(NIST(I).EQ.KIST(II))GO TO 2012 
2011 CONTINUE 
     II=1 
2012 IF(II.EQ.4)II=1 
2010 MIST(I)=II-1 
     DO 202 LL=1,5 
     IF(KTYPE.EQ.LISTS(LL))GO TO 203 
 202 CONTINUE 
     WRITE(6,204)KTYPE 
 204 FORMAT(' ',A4,2X,' IS NOT A VALID SCHEME CARD') 
     GO TO 200 
 203 GO TO (49,50,51,52,70),LL 
  49 KEND(N,L)=J 
     L=1 
     GO TO 46 
  50 KEND(N,L)=J 
     L=2 
     KSTRT(N,L)=J+1 
     GO TO 200 
  51 KEND(N,L)=J 
     L=3 
     KSTRT(N,L)=J+1 
     GO TO 200 
5006 NOSPC=NOSPC+1 
     CALL SCAN(NN,VALUE,6,KXXX) 
     ISPTYP(NOSPC)=I 
     NN=I-((I-1)/6*6) 
     IF(NN.EQ.1.OR.NN.EQ.4)GO TO 5007 
     PER(NOSPC)=100.0 
     ISPTNK(NOSPC)=VALUE(1)+1.01 
     GO TO 5008 
5007 PER(NOSPC)=VALUE(1) 
     ISPTNK(NOSPC)=VALUE(2)+1.01 
5008 I=1 
     J=J+1 
     MASTER(N,I,J)=NOSPC*1000 
     GO TO 54 
 BLOCK CARD 
  52 I=0 
     K1=1 
     DO 53 II=1,10 
     IPROC=LIST(II) 
     MPROC=MIST(II) 
     IF(IPROC.EQ.IBLK)GO TO 54 
     ICHCK=1 
     DO 56 KK=1,NOPRL 
     IF(IPROC.EQ.LISTPL(29).AND.L.NE.1)GO TO 56 
     IF(IPROC.EQ.LISTPL(KK))GO TO 57 
  56 CONTINUE 
     ICHCK=2 
     DO 66 KK=1,NOPRS 
     IF(IPROC.EQ.LISTPS(KK))GO TO 57 
  66 CONTINUE 
     WRITE(6,58)IPROC 
  58 FORMAT(' ',A4,2X,' IS NOT A VALID PROCESS CARD  -  ON BLOCK CARD') 
     GO TO 53 
  57 IF(ICHCK.EQ.1.AND.L.NE.1)GO TO 60 
     IF(ICHCK.GT.1.AND.L.EQ.1)GO TO 60 
     IF(ICHCK.EQ.2)KK=KK+80 
  72 I=I+1 
     J=J+K1 
     K1=0 
     KK=KK+MPROC*100 
     MASTER(N,I,J)=KK 
     GO TO 53 
  60 WRITE(6,61)IPROC,LISTS(L) 
  61 FORMAT(' ',A4,2X,' IS AN IMPROPER PROCESS FOR ',A4,2X,' LINE') 
  53 CONTINUE 
  54 NO(N,J)=I 
     GO TO 200 
  70 NOSCH=N 
     KEND(N,L)=J 
     DO 95 I=1,20 
  95 DESIDA(I)=-1.0 
     CALL WASTIN(LITTLE) 
     CALL DESIIN 
     IDM=IDASS(NOSLU)+NIDSS(NOSLU) 
     CALL UNITIN(COSTSB,ID(1,IDM)) 
     READ(5,101)IPROC,IXXX,LTLE 
     WRITE(6,951)IPROC,IXXX,LTLE 
     IF(IPROC.NE.LISTPL(19))GO TO 8436 
     NOTRA=0 
     NOPRO=0 
     LANA=0 
     IPRT=0 
     ISSO=0 
  80 READ(5,81)KTYPE,IXXX,KLM 
     WRITE(6,956)KTYPE,IXXX,KLM 
 956 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NN,VALUE,74,KLM) 
  81 FORMAT(A4,A2,74A1) 
     DO 82 I=1,11 
     IF(LISTC(I).EQ.KTYPE)GO TO 83 
  82 CONTINUE 
     WRITE(6,84)KTYPE 
  84 FORMAT(' ',A4,2X,' IS AN INVALID OUTPUT CONTROL CARD') 
     GO TO 80 
8436 WRITE(6,8437) 
8437 FORMAT('0 CONTROL CARD ERROR - TERMINATED') 
     STOP 
  83 IF(I.GT.6)GO TO 7901 
     GO TO (91,92,93,94,995,9951),I 
9951 ISSO=1 
     GO TO 80 
  91 NOTRA=VALUE(1) 
     GO TO 80 
  92 LANA=1 
     IPRT=1 
     GO TO 80 
  93 NC=1 
     GO TO 8010 
7901 NC=I-6 
8010 NLMT(NC)=1 
     KPRTA(1,NC)=1 
     IF(NN.EQ.0)GO TO 80 
     KPRTA(1,NC)=ABS(VALUE(1)) 
     IF(NN.EQ.1)GO TO 80 
     DO 7903 I=2,NN 
     IF(VALUE(I).LT.0.0)GO TO 7904 
     NLMT(NC)=NLMT(NC)+1 
     K=NLMT(NC) 
     KPRTA(K,NC)=VALUE(I) 
     GO TO 7903 
7904 K=NLMT(NC) 
     MS=KPRTA(K,NC) 
     ME=ABS(VALUE(I)) 
7905 IF(MS.GE.ME)GO TO 7903 
     MS=MS+1 
     K=K+1 
     IF(K.GT.100)GO TO 80 
     NLMT(NC)=K 
     KPRTA(K,NC)=MS 
     GO TO 7905 
7903 CONTINUE 
     GO TO 80 
 995 KCTL=1 
     GO TO 80 
  94 RATE=VALUE(1) 
     IF(ISSO.NE.0)IPRT=2 
     NOPER=VALUE(2) 
     CP=VALUE(3) 
     WAGE=SALOP 
     WRITE(6,7000)RATE,NOPER 
7000 FORMAT('1',15X,' COST ANALYSIS INPUT PARAMETERS'/ 
    > 20X,' INTEREST RATE',17X,F6.3,' PERCENT'/ 
    > 20X,' PLANNING PERIOD',19X,I2,' YEARS') 
     X=ALOG(LIQUDA(2)) 
     XL=2.31048+.18560*X+.04397*X**2+.0019969*X**3 
     XL=EXP(XL) 
     WRITE(6,8550) 
8550 FORMAT(//,'0  UNIT PRICES AND COSTS INDICES') 
8551 FORMAT('0',A1,' BUILDING',T40,F8.2,' $/SQFT') 
8552 FORMAT(' ',A1,' EXCAVATION',T40,F8.2,' $/CUYD') 
8553 FORMAT(' ',A1,' WALL CONCRETE',T40,F8.2,' $/CUYD') 
8554 FORMAT(' ',A1,' SLAB CONCRETE',T40,F8.2,' $/CUYD') 
8555 FORMAT(' ',A1,' MARSHALL AND SWIFT INDEX',T40,F8.2) 
8556 FORMAT(' ',A1,' CRANE RENTAL',T40,F8.2,' $/HR') 
8557 FORMAT(' ',A1,' EPA CONSTRUCTION COST INDEX',T40,F8.2) 
8558 FORMAT(' ',A1,' CANOPY ROOF',T40,F8.2,' $/SQFT') 
8559 FORMAT(' ',A1,' LABOR RATE',T40,F8.2,' $/HR') 
8560 FORMAT(' ',A1,' OPERATOR CLASS II',T40,F8.2,' $/HR') 
8561 FORMAT(' ',A1,' ELECTRICITY',T40,F8.2,' $/KWHR') 
8562 FORMAT(' ',A1,' CHEMICAL COSTS'/'    LIME',T40,F8.2,' $/LB'/ 
    > '    ALUM',T40,F8.2,' $/LB'/'    IRON SALTS',T40,F8.2, 
    > ' $/LB'/'    POLYMER',T40,F8.2,' $/LB') 
8563 FORMAT(' ',A1,' ENGINEERING NEWS RECORD COST INDEX',T40,F8.2) 
8564 FORMAT(' ',A1,' HANDRAIL',T40,F8.2,' $/FT') 
8565 FORMAT(' ',A1,' PIPE COST INDEX',T40,F8.2) 
8566 FORMAT(' ',A1,' PIPE INSTALLATION LABOR RATE',T40,F8.2,' $/HR') 
8568 FORMAT(' ',A1,' EIGHT INCH PIPE',T40,F8.2,' $/FT') 
8569 FORMAT(' ',A1,' EIGHT INCH PIPE BEND',T40,F8.2,' $/UNIT') 
8570 FORMAT(' ',A1,' EIGHT INCH PIPE VALVE',T40,F8.2,' $/UNIT') 
8571 FORMAT(' ',A1,' EIGHT INCH PIPE TEE',T40,F8.2,' $/UNIT') 
     WRITE(6,8551)ID(1,IDM),UPIBC 
     WRITE(6,8552)ID(1,IDM+1),UPIEX 
     WRITE(6,8553)ID(1,IDM+2),UPICW 
     WRITE(6,8554)ID(1,IDM+3),UPICS 
     WRITE(6,8555)ID(1,IDM+4),FMSECI 
     WRITE(6,8556)ID(1,IDM+5),UPICR 
     WRITE(6,8557)ID(1,IDM+6),EPACI 
     WRITE(6,8558)ID(1,IDM+7),UPIR 
     WRITE(6,8559)ID(1,IDM+8),FLABRI 
     WRITE(6,8560)ID(1,IDM+9),SALOP 
     WRITE(6,8561)ID(1,IDM+10),UPIPC 
     WRITE(6,8562)ID(1,IDM+11),CHEM 
     WRITE(6,8563)ID(1,IDM+12),ENRCCI 
     WRITE(6,8564)ID(1,IDM+13),UPIHR 
     WRITE(6,8565)ID(1,IDM+14),CEPCIP 
     WRITE(6,8566)ID(1,IDM+15),FLABII 
     WRITE(6,8568)ID(1,IDM+16),CCIPS 
     WRITE(6,8569)ID(1,IDM+17),CCRS 
     WRITE(6,8571)ID(1,IDM+18),COTS 
     WRITE(6,8570)ID(1,IDM+19),CCPUS 
 ESTABLISH FEASIBLE TRAINS 
     NNT=0 
     NOSAV=0 
     N=1 
 400 NOC=KEND(N,1) 
     IF(NOC.LE.0)GO TO 413 
     DO 9875 NIX=1,60 
9875 LMT(NIX)=NO(N,NIX) 
     IF(KEND(N,2).GT.NOC)NOC=KEND(N,2) 
     IF(KEND(N,3).GT.NOC)NOC=KEND(N,3) 
     IPTR=1 
 416 DO 411 I=IPTR,NOC 
 411 KNT(I)=1 
     IPTR=NOC 
 INITIALIZE LINES FOR NEW TRAIN 
 412 DO 401 I=1,22 
 401 USE(I)=LIQUDA(I) 
     DO 402 I=1,3 
     SSLUDA(I)=0.0 
 402 PSLUDA(I)=0.0 
     DO 9873 NIX=1,60 
9873 MAST(NIX)=0 
     DO 9874 NIX=1,NOC 
     LIX=KNT(NIX) 
9874 MAST(NIX)=MASTER(N,LIX,NIX) 
     NNT=NNT+1 
     KKKK=6 
     LLLL=NNT 
     CALL PROCES(N,KSTRT,KEND,MAST,NOSAV,LANA,COSTSB, 
    > LISTRA,LISTPS,LISTPL,MISTRA,ID,LITTLE,ISPEC,MASTER,NO,NOSCH) 
     KNT(IPTR)=KNT(IPTR)+1 
     IF(KNT(IPTR).LE.LMT(IPTR))GO TO 412 
 414 IPTR=IPTR-1 
 CHECK FOR FINISHED WITH SCHEME 
     IF(IPTR.EQ.0)GO TO 413 
     KNT(IPTR)=KNT(IPTR)+1 
     IF(KNT(IPTR).GT.LMT(IPTR))GO TO 414 
     IPTR=IPTR+1 
     GO TO 416 
 413 N=N+1 
 CHECK FOR FINISHED WITH SCHEME PROCESSING 
     IF(N.GT.NOSCH)GO TO 500 
     GO TO 400 
 500 IF(NOSAV.EQ.0)GO TO 700 
     IF(NOTRA.EQ.0)GO TO 701 
     NN=NOTRA 
     IF(NN.GT.NOSAV)NN=NOSAV 
     CALL LISTOT(NN,ISCH,FARE,LSCH,NNN) 
     DO 702 IT=1,NNN 
     I=LSCH(IT) 
     DO 703 L=1,60 
 703 LISTRA(L)=IBLK 
     CALL IDENTY(I,N,MAST,MASTER,KSTRT,KEND,NO,NOSCH) 
     KB=KSTRT(N,1) 
     KE=KEND(N,1) 
     DO 704 L=KB,KE 
     NP=MAST(L) 
     IF(NP.EQ.0)GO TO 704 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5009 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NN)-1 
     GO TO 704 
5009 MODT=0 
 605 IF(NP.LE.100)GO TO 604 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 605 
 604 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 704 CONTINUE 
     WRITE(6,8004)I 
8004 FORMAT('0TRAIN NO',I4) 
     WRITE(6,705)(LISTRA(L),MISTRA(L) ,L=1,LN) 
 705 FORMAT(' LIQUID',4X,10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
     KB=KSTRT(N,2) 
     KE=KEND(N,2) 
     IF(KE.LT.KB.OR.KB.EQ.0)GO TO 708 
     DO 707 L=1,60 
 707 LISTRA(L)=IBLK 
     DO 709 L=KB,KE 
     NP=MAST(L) 
     IF(NP.EQ.0)GO TO 709 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5010 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NN)-1 
     GO TO 709 
5010 MODT=0 
 606 IF(NP.LE.100)GO TO 607 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 606 
 607 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 709 CONTINUE 
     WRITE(6,710)(LISTRA(L),MISTRA(L),L=1,LN) 
 710 FORMAT(' SECONDARY',1X, 10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
 708 KB=KSTRT(N,3) 
     KE=KEND(N,3) 
     IF(KE.LT.KB.OR.KB.EQ.0)GO TO 702 
     DO 1707 L=1,60 
1707 LISTRA(L)=IBLK 
     DO 713 L=KB,KE 
     NP=MAST(L) 
     IF(NP.EQ.0)GO TO 713 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5011 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NN)-1 
     GO TO 713 
5011 MODT=0 
 608 IF (NP.LE.100)GO TO 609 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 608 
 609 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 713 CONTINUE 
     WRITE(6,714)(LISTRA(L),MISTRA(L),L=1,LN) 
 714 FORMAT(' PRIMARY',3X,10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
 702 CONTINUE 
     GO TO 701 
 700 WRITE(6,716) 
 716 FORMAT('1/////**** NO FEASIBLE SOLUTIONS ****') 
     STOP 3333 
 701 DO 715 KKKK=1,5 
     NN=NLMT(KKKK) 
     IF(NN.EQ.0)GO TO 715 
     IPRT=ISSO+1 
     LANA=2 
     DO 717 LLMM=1,NN 
     L=KPRTA(LLMM,KKKK) 
     LLLL=L 
     L=ISCH(L,KKKK) 
     IF(KKKK.EQ.1)GO TO 7778 
     KKM1=KKKK-1 
     DO 7779 MM=1,KKM1 
     LL=NLMT(MM) 
     DO 7779 MMM=1,LL 
     M=KPRTA(MMM,MM) 
     M=ISCH(M,MM) 
     IF(L.EQ.M)GO TO 7780 
7779 CONTINUE 
     GO TO 7778 
7780 NNT=L 
     CALL TITLE 
     WRITE(6,7781)L,NAMT(MM,1),NAMT(MM,2) 
7781 FORMAT('0TRAIN',I4,' PRINTED WITH ',2A4,' SOLUTIONS') 
     GO TO 717 
7778 CALL IDENTY(L,N,KNT,MASTER,KSTRT,KEND,NO,NOSCH) 
     IF(L.GT.NOSAV.OR.L.LE.0)GO TO 717 
     DO 309 I=1,22 
 309 USE(I)=LIQUDA(I) 
     DO 310 I=1,3 
     SSLUDA(I)=0.0 
 310 PSLUDA(I)=0.0 
     NNT=L 
     CALL PROCES(N,KSTRT,KEND,KNT,NOSAV,LANA,COSTSB, 
    > LISTRA,LISTPS,LISTPL,MISTRA,ID,LITTLE,ISPEC,MASTER,NO,NOSCH) 
 717 CONTINUE 
 715 CONTINUE 
     STOP 
     END 
     SUBROUTINE CARBEX(RR) 
     DIMENSION RR(1) 
     DIMENSION FID(12),FOD(12),AEHA(12) 
     EQUIVALENCE (QQ(1),CD),(QQ(2),CSD),(QQ(3),VS), 
    >(QQ( 4),TR    ),(QQ( 5),HU    ),(QQ( 6),CODE  ),(QQ( 7),XOM   ), 
    >(QQ( 8),FND   ),(QQ( 9),XOSTUD),(QQ(10),XOSTCG),(QQ(11),XOSTSF), 
    >(QQ(12),XOSOIL),(QQ(13),AA    ),(QQ(14),N     ),(QQ(15),ITYP  ), 
    >(QQ(16),NA    ),(QQ(17),HB    ),(QQ(18),VBW   ),(QQ(19),QC    ), 
    >(QQ(20),TS    ),(QQ(21),R     ),(QQ(22),D     ),(QQ(23),W     ), 
    >(QQ(24),FL    ),(QQ(25),HC    ),(QQ(26),XOSTPS    ),(QQ(27),FIDS), 
    >(QQ(28),FODS  ),(QQ(29),AEHAS ),(QQ(30),VOLSC ),(QQ(31),BAA   ), 
    >(QQ(32),VC    ),(QQ(33),VE    ),(QQ(34),OMHR  ),(QQ(35),OMMPA  ), 
    >(QQ(36),FKWHR ),(QQ(37),OMMPR ),(QQ(38),STRG  ),(QQ(39),BTURG ), 
    >(QQ(40),CMRG  ),(QQ(41),VSBW),(QQ(42),TBW), 
    > (QQ(43),NFN),(QQ(44),FR),(QQ(45),NG),(QQ(46),RLW),(QQ(47),XPICC), 
    > (QQ(48),OMHA),(QQ(49),FKWHA),(QQ(50),QBW),(QQ(51),VOLRC) 
    >,(QQ(52),RSUD),(QQ(53),RSCG),(QQ(54),RSSF),(QQ(55),RSPS) 
    >,(QQ(56),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DATA FID/2.5,3.25,4.5,5.5,7.0,8.5,10.5,12.0,14.5,16.5,18.,20./ 
     DATA FOD/3.7,4.75,6.,7.75,9.25,10.75,12.75,14.25,16.75,18.75, 
    > 20.25,22.25/ 
     DATA AEHA/24.,37.,75.,125.,179.,269.,436.,548.,732.,1050.,1268., 
    > 1509./ 
     CALL INIT(QQ,RR,56) 
     HV=2.0 
     A=694.0*QMAX/VS 
     ITYP=0 
     IF(QMAX.GT.10.0)ITYP=1 
     N=2 
     IF(QMAX.GT.2.0)N=4 
     IF(QMAX.GT.4.0)N=6 
     IF(QMAX.GT.10.0)N=4 
     IF(QMAX.GT.50.0)N=8 
     IF(QMAX.GT.150.0)N=10 
     IF(QMAX.GT.200.0)N=12 
     AA=A/N 
     NA=2.0*N 
     HB=VS*TR/7.48 
     QBW=VSBW*AA 
     VBW=TBW*QBW*N 
     QC=1.10*A*HB*CD 
     TS=XOM*A*HB/2.0*CD/8.34/(COD-CODE)/QAVE 
     R=HB/2.0*A*CSD/TS 
     D=SQRT(AA*4.0/3.1415926) 
     IF(QMAX.LT.10.0)GO TO 2 
     W=SQRT(A/N/RLW) 
     FL=W*RLW 
   2 HC=HV+1.4*HB/2.0+1.0 
     IF(R.LT.400.0)GO TO 3 
     AR=1.50*R/FR 
     NFN=AR/1509.0+0.999 
     IF(NFN.LT.1)NFN=1 
     ARI=AR/NFN 
     DO 4 I=1,12 
     IF(AEHA(I).GE.ARI)GO TO 5 
   4 CONTINUE 
     I=12 
   5 FIDS=FID(I) 
     FODS=FOD(I) 
     AEHAS=AEHA(I) 
     VOLSC=FND*R/CSD 
     VOLRC=FND*R/CD 
   3 BAA=2125.0*QMAX**0.675+400.0*QMAX**0.35 
     IF(QMAX.GT.10.0)BAA=600.0*QMAX**0.35 
     VC=0.0 
     IF(QMAX.GT.10.0)VC=17.8*TR*QMAX**0.712+37.9*QMAX**0.385 
     VE=146.5*QMAX+68.7*QMAX**0.599 
     A1=232.0*QMAX 
     NG=4*N 
     OMHA=860.0*QAVE**0.473 
     FKWHA=67000.0*QAVE**1.02 
     OMMPA=0.55-0.664*ALOG10(QAVE) 
     IF(QAVE.GT.4.0)OMMPA=0.193-0.0715*ALOG10(QAVE) 
     IF(QAVE.GT.20.0)OMMPA=0.1 
     OMHR=0.0 
     FKWHR=0.0 
     STRG=0.0 
     BTURG=0.0 
     CMRG=365.0*R 
     OMMPR=0.0 
     IF(R.LE.400.0)GO TO 15 
     OMHR=90.46*AR**0.624 
     FKWHR=3110.0*R**0.313 
     STRG=365.0*0.6*R 
     BTURG=3.942*10.0**6*R**0.904 
     CMRG=25.6*R 
     OMMPR=3.0 
     RC1=0.0 
     RC2=0.0 
     RC3=0.0 
     RC4=0.0 
  15 IF(QMAX.GT.10.0)GO TO 20 
     COSTA1=133000.0*QMAX**0.587 
     COSTF1=35500.0*QMAX**0.6 
     COSTB1=30000.0*QMAX**0.38 
     COSTH1=19600.0*QMAX**0.28 
     COSTB2=BAA*UPIBC 
     UPICC=XPICC 
     IF(UPICC.EQ.0.0)UPICC=0.56*ENRCCI/2470.0 
     COSTCB=UPICC*QC 
     TBCAD=(COSTA1+COSTF1+COSTB1+COSTH1+COSTB2+COSTCB)*FMSECI/491.6 
    >*1.42 
     GO TO 30 
  20 COSTRC=VC*UPICW 
     VC=VC*27.0 
     COSTE=VE*UPIEX 
     VE=VE*27.0 
     UPICC=XPICC 
     IF(UPICC.EQ.0.0)UPICC=0.56*EPACI/DIVSOR 
     COSTCB=UPICC*QC 
     UPIUD=XOSTUD 
     IF(UPIUD.EQ.0.0)UPIUD=35.0*FMSECI/491.6 
     COSTUD=A1*UPIUD 
     UPICG=XOSTCG 
     IF(UPICG.EQ.0.0)UPICG=17300.0*FMSECI/491.6 
     COSTCG=NG*UPICG 
     COSTB1=40171.0*QMAX**0.637*FMSECI/491.6 
     COSTH2=9452.0*QMAX**0.543*FMSECI/491.6 
     COSTB2=BAA*UPIBC 
     TBCAD=1.42*(COSTRC+COSTE+COSTCB+COSTUD+COSTCG+COSTB1+COSTH2+ 
    >COSTB2) 
     PRIN=1.42*(COSTRC+COSTE+COSTCB+COSTB1+COSTH2+COSTB2) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=1.42*COSTUD 
     CALL AMORT(PRIN,RSUD,RC3) 
     PRIN=1.42*COSTCG 
     CALL AMORT(PRIN,RSCG,RC4) 
  30 TBCRG=0.0 
     TBCOIL=0.0 
     IF(R.LE.400.0)GO TO 40 
     COSOIL=XOSOIL 
     IF(COSOIL.EQ.0.0)COSOIL=0.75*ENRCCI/2470.0 
     TBCOIL=BTURG/140000.0*COSOIL 
     COSTR=0.192*ARI**0.308 
     IF(ARI.GT.400.0)COSTR=0.0272*ARI**0.602 
     COSTSF=XOSTSF 
     IF(COSTSF.EQ.0.0)COSTSF=825000.0*FMSECI/491.6 
     COSTNF=COSTR*COSTSF*NFN 
     TBCRG=1.25*COSTNF 
  40 TBCC=TBCAD+TBCRG 
     CALL AMORT(TBCRG,RSSF,RC2) 
     OMMC=OMMPA*TBCAD/100.0+OMMPR*TBCRG/100.0+TBCOIL 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMHA+OMHR 
     SUMMDA(NUM,4)=FKWHA+FKWHR 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=5.0 
     SUMMDA(NUM,18)=(FKWHA+FKWHR)*UPIPC+TBCOIL 
     CALL USEREX(12) 
     SOLIDS=0.01*SOLIDS 
     SETSO=0.0 
     BOD5=0.5*CODE 
     BOD5S=BOD5 
     COD=CODE 
     CODS=COD 
     OAG=0.0 
     CALL PUMPPR(1.0,QAVE,QMAX,1,XOSTPS,0,RSPS,RSST) 
     CALL INIT(RR,QQ,56) 
     RETURN 
     END 
     SUBROUTINE CARBIN(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DIMENSION LIST(13) 
     EQUIVALENCE (QQ(1),CD),(QQ(2),CSD),(QQ(3),VS), 
    >(QQ( 4),TR    ),(QQ( 5),HU    ),(QQ( 6),CODE  ),(QQ( 7),XOM   ), 
    >(QQ( 8),FND   ),(QQ( 9),XOSTUD),(QQ(10),XOSTCG),(QQ(11),XOSTSF), 
    >(QQ(12),XOSOIL),(QQ(13),AA    ),(QQ(14),N     ),(QQ(15),ITYP  ), 
    >(QQ(16),NA    ),(QQ(17),HB    ),(QQ(18),VBW   ),(QQ(19),QC    ), 
    >(QQ(20),TS    ),(QQ(21),R     ),(QQ(22),D     ),(QQ(23),W     ), 
    >(QQ(24),FL    ),(QQ(25),HC    ),(QQ(26),XOSTPS),(QQ(27),FIDS  ), 
    >(QQ(28),FODS  ),(QQ(29),AEHAS ),(QQ(30),VOLSC ),(QQ(31),BAA   ), 
    >(QQ(32),VC    ),(QQ(33),VE    ),(QQ(34),OMHR  ),(QQ(35),OMMPA  ), 
    >(QQ(36),FKWHR ),(QQ(37),OMMPR ),(QQ(38),STRG  ),(QQ(39),BTURG ), 
    >(QQ(40),CMRG  ),(QQ(41),VSBW),(QQ(42),TBW), 
    > (QQ(43),NFN),(QQ(44),FR),(QQ(45),NG),(QQ(46),RLW),(QQ(47),XPICC), 
    > (QQ(48),OMHA),(QQ(49),FKWHA),(QQ(50),QBW),(QQ(51),VOLRC) 
    >,(QQ(52),RSUD),(QQ(53),RSCG),(QQ(54),RSSF),(QQ(55),RSPS) 
    >,(QQ(56),RSST) 
     DATA LIST/'CARB','VELO','HEIG','EFFL','ADSO','STOR','ESTI','END ', 
    > 'EMPT','BACK','FURN','LENG','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,56) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13),I 
   1 CD=VALUE(1) 
     CSD=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 VS=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 HU=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 CODE=VALUE(1) 
     GO TO 50 
   5 XOM=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   6 FND=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   7 XOSTUD=VALUE(1) 
     XOSTCG=VALUE(2) 
     XOSTSF=VALUE(3) 
     XOSOIL=VALUE(4) 
     XPICC=VALUE(5) 
     XOSTPS=VALUE(6) 
     GO TO 50 
   8 CALL INIT(RR,QQ,56) 
     RETURN 
   9 TR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
  10 VSBW=VALUE(1) 
     TBW=VALUE(2) 
     ID(MODT,7)=IA 
     GO TO 50 
  11 FR=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
  12 RLW=VALUE(1) 
     GO TO 50 
  13 RSUD=VALUE(1) 
     RSCG=VALUE(2) 
     RSSF=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE CARBOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),CD),(QQ(2),CSD),(QQ(3),VS), 
    >(QQ( 4),TR    ),(QQ( 5),HU    ),(QQ( 6),CODE  ),(QQ( 7),XOM   ), 
    >(QQ( 8),FND   ),(QQ( 9),XOSTUD),(QQ(10),XOSTCG),(QQ(11),XOSTSF), 
    >(QQ(12),XOSOIL),(QQ(13),AA    ),(QQ(14),N     ),(QQ(15),ITYP  ), 
    >(QQ(16),NA    ),(QQ(17),HB    ),(QQ(18),VBW   ),(QQ(19),QC    ), 
    >(QQ(20),TS    ),(QQ(21),R     ),(QQ(22),D     ),(QQ(23),W     ), 
    >(QQ(24),FL    ),(QQ(25),HC    ),(QQ(26),XOSTPS),(QQ(27),FIDS  ), 
    >(QQ(28),FODS  ),(QQ(29),AEHAS ),(QQ(30),VOLSC ),(QQ(31),BAA   ), 
    >(QQ(32),VC    ),(QQ(33),VE    ),(QQ(34),OMHR  ),(QQ(35),OMMPA  ), 
    >(QQ(36),FKWHR ),(QQ(37),OMMPR ),(QQ(38),STRG  ),(QQ(39),BTURG ), 
    >(QQ(40),CMRG  ),(QQ(41),VSBW),(QQ(42),TBW), 
    > (QQ(43),NFN),(QQ(44),FR),(QQ(45),NG),(QQ(46),RLW),(QQ(47),XPICC), 
    > (QQ(48),OMHA),(QQ(49),FKWHA),(QQ(50),QBW),(QQ(51),VOLRC) 
    >,(QQ(52),RSUD),(QQ(53),RSCG),(QQ(54),RSSF),(QQ(55),RSPS) 
    >,(QQ(56),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,56) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0CARBON ADSORPTION') 
 101 FORMAT('0',A1,' DENSITY OF VIRGIN CARBON',T45,E9.3,' LBS/CUFT') 
 102 FORMAT(' ',A1,' DENSITY OF SPENT CARBON',T45,E9.3,' LBS/CUFT') 
 103 FORMAT(' ',A1,' DESIGN SUPERFICIAL VELOCITY',T45,E9.3,' GPM/SQFT') 
 104 FORMAT(' ',A1,' EMPTY BED RESIDENCE TIME',T45,E9.3,' MIN') 
 105 FORMAT(' ',A1,' ELEVATION OF ADSORBER UNDERDRAIN',T45,E9.3,' FEET' 
    >) 
 106 FORMAT(' ',A1,' CARBON LOADING RATE',T45,E9.3,' LB COD/LB CARBON') 
 107 FORMAT(' ',A1,' BACKWASH DURATION',T45,E9.3,' MIN') 
 108 FORMAT(' ',A1,' BACKWASH VELOCITY',T45,E9.3,' GPM/SQFT') 
 109 FORMAT(' ',A1,' FURNACE LOADING RATE',T45,E9.3,' LBS/DAY/SQFT') 
 110 FORMAT(' ',A1,' DAYS OF STORAGE REQUIRED',T45,E9.3,' DAYS') 
 111 FORMAT('   PRESSURED STEEL ADSORBER') 
 112 FORMAT('   GRAVITY CONCRETE ADSORBER') 
 113 FORMAT('   SURFACE AREA PER ADSORBER',T45,E9.3,' SQ FT') 
 114 FORMAT('   NUMBER OF ADSORBER TRAINS',T45,I9) 
 115 FORMAT('   DEPTH OF ADSORPTION BED',T45,E9.3,' FEET') 
 116 FORMAT('   BACKWASH FLOW RATE',T45,E9.3,' GPM') 
 117 FORMAT('   TOTAL VOLUME OF BACKWASH',T45,E9.3,' GAL/DAY') 
 118 FORMAT('   CARBON IN SYSTEM',T45,E9.3,' LBS') 
 119 FORMAT('   ADSORBER SERVICE LIFE',T45,E9.3,' DAYS') 
 121 FORMAT('   REGENERATION RATE',T45,E9.3,' LBS/DAY') 
 122 FORMAT('   ADSORBER DIAMETER',T45,E9.3,' FEET') 
 123 FORMAT('   WIDTH OF GRAVITY ADSORBER',T45,E9.3,' FEET') 
 124 FORMAT('   LENGTH OF GRAVITY ADSORBER',T45,E9.3,' FEET') 
 125 FORMAT('   HEIGHT OF ADSORBER COLUMNS',T45,E9.3,' FEET') 
 126 FORMAT('   NUMBER OF FURNACES',T45,I9) 
 127 FORMAT('   INSIDE DIAMETER OF FURNACE',T45,E9.3,' FEET') 
 128 FORMAT('   OUTSIDE DIAMETER OF FURNACE',T45,E9.3,' FEET') 
 129 FORMAT('   EFFECTIVE AREA PER HEARTH',T45,E9.3,' SQ FT') 
 130 FORMAT('   SPENT CARBON STORAGE',T45,E9.3,' CU FT') 
 131 FORMAT('   REACTIVATED CARBON STORAGE',T45,E9.3,' CU FT') 
 132 FORMAT('   ADSORBER BUILDING AREA',T45,E9.3,' SQ FT') 
 133 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 134 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 135 FORMAT('   NUMBER OF FLOW CONTROL GATES',T45,I9) 
 136 FORMAT('   OPERATION MANPOWER FOR ADSORPTION',T45,E9.3, 
    >' MAN-HRS/YEAR') 
 137 FORMAT('   ENERGY REQUIRED FOR ADSORPTION',T45,E9.3,' KWHR/YEAR') 
 138 FORMAT('   O & M MATERIAL COST FOR ADSORPTION',T45,E9.3, 
    >' PERCENT') 
 139 FORMAT('   OPERATION MANPOWER FOR REGENERATION',T45,E9.3, 
    >' MAN-HRS/YEAR') 
 140 FORMAT('   ENERGY REQUIRED FOR REGENERATION',T45,E9.3,' KWHR/YEAR' 
    >) 
 141 FORMAT('   O & M MATERIAL COST FOR REGENERATION',T45,E9.3, 
    >' PERCENT') 
 142 FORMAT('   STEAM REQUIRED FOR REGENERATION',T45,E9.3,' LBS/YEAR') 
 143 FORMAT('   FUEL REQUIREMENTS FOR REGENERATION',T45,E9.3, 
    >' BTU/YEAR') 
 144 FORMAT('   CARBON MAKE-UP REQUIREMENTS',T45,E9.3,' LBS/YEAR') 
     WRITE(6,101)ID(MODT,1),CD 
     WRITE(6,102)ID(MODT,1),CSD 
     WRITE(6,103)ID(MODT,2),VS 
     WRITE(6,104)ID(MODT,6),TR 
     WRITE(6,105)ID(MODT,3),HU 
     WRITE(6,106)ID(MODT,4),XOM 
     WRITE(6,107)ID(MODT,7),TBW 
     WRITE(6,108)ID(MODT,7),VSBW 
     WRITE(6,109)ID(MODT,8),FR 
     WRITE(6,110)ID(MODT,5),FND 
     IF(ITYP.EQ.0)WRITE(6,111) 
     IF(ITYP.EQ.1)WRITE(6,112) 
     WRITE(6,113)AA 
     WRITE(6,114)N 
     WRITE(6,115)HB 
     WRITE(6,116)QBW 
     WRITE(6,117)VBW 
     WRITE(6,118)QC 
     WRITE(6,119)TS 
     WRITE(6,121)R 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,145) 
 145 FORMAT('0QUANTITIES FOR CARBON ABSORPTION') 
     WRITE(6,122)D 
     IF(QMAX.GE.10.0)WRITE(6,123)W 
     IF(QMAX.GE.10.0)WRITE(6,124)FL 
     WRITE(6,125)HC 
     IF(R.LE.400.0)GO TO 201 
     WRITE(6,126)NFN 
     WRITE(6,127)FIDS 
     WRITE(6,128)FODS 
     WRITE(6,129)AEHAS 
     WRITE(6,130)VOLSC 
     WRITE(6,131)VOLRC 
 201 WRITE(6,132)BAA 
     IF(VC.GT.0.0)WRITE(6,134)VC 
     WRITE(6,133)VE 
     WRITE(6,135)NG 
     WRITE(6,136)OMHA 
     WRITE(6,137)FKWHA 
     WRITE(6,138)OMMPA 
     IF(R.LE.400.0)WRITE(6,146) 
 146 FORMAT('   NO ON-SITE REGENERATION REQUIRED ') 
     IF(R.LE.400.0)GO TO 601 
     WRITE(6,147) 
 147 FORMAT('   ON-SITE REGENERATION OF CARBON RECOMMENDED') 
     WRITE(6,139)OMHR 
     WRITE(6,140)FKWHR 
     WRITE(6,142)STRG 
     WRITE(6,143)BTURG 
     WRITE(6,144)CMRG 
     WRITE(6,141)OMMPR 
 601 CALL PUMPPR(1.0,QAVE,QMAX,1,XOSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE CENTEX(SVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CPR   ),(QQ(3),HPD   ), 
    &(QQ( 4),DPW   ),(QQ( 5),UNITS ),(QQ( 6),ECF   ),(QQ( 7),CD    ), 
    &(QQ( 8),THP   ),(QQ( 9),HPU   ),(QQ(10),CR    ),(QQ(11),SF    ), 
    &(QQ(12),CI    ),(QQ(13),COSTCS), 
    > (QQ(14),CRPYR),(QQ(15),CRPD),(QQ(16),XSVOLU),(QQ(17),RSSC) 
     CALL INIT(QQ,RR,17) 
     XSVOLU=SVOLU 
     SF=SVOLU*7.0/DPW/HPD/60.0 
     THP=SF*CPR*ECF 
     CI=PSOLID 
   4 HPU=THP/UNITS 
     IF(HPU.LE.200.0)GO TO 3 
     UNITS=UNITS+1.0 
     GO TO 4 
   3 CR=SF*60.0*CI*CD/100.0*1.05*8.34/100.0 
     CRPYR=CR*HPD*DPW*52.0 
     CRPD=CR*HPD 
   1 CALL CENTPR(CRPYR,CRPD,UNITS,HPU,CI,SVOLU,RSSC,RSST,COSTCS,0) 
     CALL USEREX(6) 
   2 CONTINUE 
     SVOLU=SVOLU*CI/9.0*0.90 
     PSOLID=9.0 
     CALL INIT(RR,QQ,17) 
     RETURN 
     END 
     SUBROUTINE CENTIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CPR   ),(QQ(3),HPD   ), 
    &(QQ( 4),DPW   ),(QQ( 5),UNITS ),(QQ( 6),ECF   ),(QQ( 7),CD    ), 
    &(QQ( 8),THP   ),(QQ( 9),HPU   ),(QQ(10),CR    ),(QQ(11),SF    ), 
    &(QQ(12),CI    ),(QQ(13),COSTCS), 
    > (QQ(14),CRPYR),(QQ(15),CRPD),(QQ(16),XSVOLU),(QQ(17),RSSC) 
     DIMENSION LIST(9) 
     DATA LIST/'POWE','HOUR','DAYS','NUMB','EXCE','CHEM','END ','ESTI', 
    > 'REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,17) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 CPR=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   2 HPD=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 DPW=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   4 UNITS=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   5 ECF=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 CD=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   7 CALL INIT(RR,QQ,17) 
     RETURN 
   8 COSTCS=VALUE(1) 
     GO TO 50 
   9 RSSC=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE CENTOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CPR   ),(QQ(3),HPD   ), 
    &(QQ( 4),DPW   ),(QQ( 5),UNITS ),(QQ( 6),ECF   ),(QQ( 7),CD    ), 
    &(QQ( 8),THP   ),(QQ( 9),HPU   ),(QQ(10),CR    ),(QQ(11),SF    ), 
    &(QQ(12),CI    ),(QQ(13),COSTCS), 
    > (QQ(14),CRPYR),(QQ(15),CRPD),(QQ(16),XSVOLU),(QQ(17),RSSC) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,17) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0 CENTRIFUGATION') 
     WRITE(6,221)ID(MODT,4),CPR 
     WRITE(6,201)HPU 
     WRITE(6,223)ID(MODT,5),ECF 
 201 FORMAT('   POWER REQUIRED/UNIT              ',E9.3,' HP') 
 221 FORMAT('0',A1,' POWER REQUIREMENT                ',E9.3,' HP/GPM') 
 223 FORMAT(' ',A1,' EXCESS CAPACITY FACTOR           ',E9.3) 
     WRITE(6,202)ID(MODT,3),UNITS 
 202 FORMAT(' ',A1,' NUMBER OF UNITS                  ',E9.3) 
 222 FORMAT(' ',A1,' CHEMICAL DOSE                    ',E9.3, 
    >' PERCENT DRY WEIGHT') 
     WRITE(6,222)ID(MODT,6),CD 
     WRITE(6,203)CR 
 203 FORMAT('   CHEMICAL REQUIREMENTS            ',E9.3,' LB/HR') 
     WRITE(6,204)SF 
 204 FORMAT('   SLUDGE FLOW                      ',E9.3,' GAL/MIN') 
     WRITE(6,205)CI 
 205 FORMAT('   INITIAL SOLID CONC               ',E9.3,' PERCENT') 
     WRITE(6,206)ID(MODT,1),HPD 
 206 FORMAT(' ',A1,' HOURS OPERATION PER DAY          ',E9.3,' HOURS') 
     WRITE(6,207)ID(MODT,2),DPW 
 207 FORMAT(' ',A1,' DAYS OPERATION PER WEEK          ',E9.3,' DAYS') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL CENTPR(CRPYR,CRPD,UNITS,HPU,CI,XSVOLU,RSSC,RSST 
    >,COSTCS,1) 
     RETURN 
     END 
     SUBROUTINE CENTPR(CRPYR,CRPD,FNU,HP,CI,SF,RSSC,RSST,XOSTCS,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON ICTL,KCTL 
     IF(IQU.EQ.1)GO TO 678 
     COSTCS=XOSTCS 
     AB=200.0 
     IF(FNU.GT.1.0)AB=200.0+5.30*FNU*HP**0.738 
     DSTPD=SF*8.34*CI/100.0/2000.0 
     OMH=1520.0*DSTPD**0.3293 
     IF(DSTPD.GT.1.0)OMH=1520.0*DSTPD**0.4994 
     IF(DSTPD.GT.10.0)OMH=632.0*DSTPD**0.8751 
     FMMH=264.0*DSTPD**0.3424 
     IF(DSTPD.GT.1.0)FMMH=264.0*DSTPD**0.4815 
     IF(DSTPD.GT.10.0)FMMH=112.0*DSTPD**0.8573 
     FKWH=33000.0*DSTPD**0.9248 
     OMMP=2.27*DSTPD**0.1868 
     CF=1.18 
     COSTB=AB*UPIBC 
     COSTR=12.47*HP**0.5148 
     IF(HP.GT.40.0)COSTR=4.06*HP**0.8189 
     IF(COSTCS.EQ.0.0)COSTCS=120000.0*FMSECI/491.6 
     COSTC=COSTCS*COSTR/100.0*FNU 
     OICOST=COSTC 
     CC=CF*(COSTC+COSTB+OICOST) 
     OMMC=OMMP*CC/100.0 
     PRIN=COSTB*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=(COSTC+OICOST)*CF 
     CALL AMORT(PRIN,RSSC,RC2) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=86.0 
     SUMMDA(NUM,13)=CRPD 
     SUMMDA(NUM,17)=CRPYR 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL CENTQU(FNU,HP,AB,DSTPD,OMH,FMMH,FKWH,OMMP) 
     RETURN 
     END 
     SUBROUTINE CENTQU(FNU,HP,AB,DSTPD,OMH,FMMH,FKWH,OMMP) 
     CALL TITLE 
     NU=FNU+0.001 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR CENTRIFUGATION') 
     WRITE(6,2)NU 
2    FORMAT('0NUMBER OF CENTRIFUGES',T45,I9) 
     WRITE(6,3)HP 
3    FORMAT(' POWER REQUIRED PER UNIT',T45,E9.3,' HP') 
     WRITE(6,4)AB 
4    FORMAT(' AREA OF BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,5)DSTPD 
5    FORMAT(' DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,6)OMH 
6    FORMAT(' OPERATION LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,7)FMMH 
7    FORMAT(' MAINTENANCE LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,8)FKWH 
8    FORMAT(' ELECTRICAL ENERGY FOR OPERATION',T45,E9.3,' KWHR/YR') 
     WRITE(6,9)OMMP 
9    FORMAT(' OPERATION AND MAINTENANCE MATERIAL COSTS',T45,E9.3,' PERC 
    CENT') 
     RETURN 
     END 
     SUBROUTINE CHARIN 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/CHARCO/ID(9),EPAGO,EPAGLT,EPAG,OG,AFF,RIB, 
    >RPLS,NR,GIB,GPLS,NG,OIB,OPLS,NO,EBUR,PPH,GPCD,EOMR,BU 
     DIMENSION LIST(11) 
     DATA LIST/'EPA ','STAT','ALLO','REVE','GENE','OTHE','EXIS', 
    >'PERS','GALL','END ','CURR'/ 
     DATA IA/'I'/ 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(MO,VALUE,74,KLM) 
     DO 51 I=1,11 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11),I 
   1 EPAGO=VALUE(1) 
     EPAGLT=VALUE(2) 
     ID(1)=IA 
     GO TO 50 
   2 OG=VALUE(1) 
     ID(2)=IA 
     GO TO 50 
   3 AFF=VALUE(1) 
     ID(3)=IA 
     GO TO 50 
   4 RPLS=VALUE(1) 
     RIB=VALUE(2) 
     NR=VALUE(3) 
     ID(4)=IA 
     GO TO 50 
   5 GPLS=VALUE(1) 
     GIB=VALUE(2) 
     NG=VALUE(3) 
     ID(5)=IA 
     GO TO 50 
   6 OPLS=VALUE(1) 
     OIB=VALUE(2) 
     NO=VALUE(3) 
     ID(6)=IA 
     GO TO 50 
   7 EBUR=VALUE(2) 
     BU=VALUE(1) 
     ID(7)=IA 
     GO TO 50 
   8 PPH=VALUE(1) 
     ID(8)=IA 
     GO TO 50 
   9 GPCD=VALUE(1) 
     ID(9)=IA 
     GO TO 50 
  10 RETURN 
  11 EOMR=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE CHARXO(XBU,TPC,FLC,OAM) 
     COMMON/CHARCO/ID(9),EPAGO,EPAGLT,EPAG,OG,AFF,RIB, 
    >RPLS,NR,GIB,GPLS,NG,OIB,OPLS,NO,EBUR,PPH,GPCD,EOMR,BU 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     IF(BU.EQ.0.0)BU=XBU 
     TEC=TPC 
     IF(EPAG.EQ.EPAGO)TEC=TPC-FLC 
     FLS=(1.0-(EPAG+OG)/100.0)*TEC*(1.0+AFF/100.0) 
     IF(EPAG.EQ.EPAGO)FLS=FLS+FLC 
     ADSR=RPLS*FLS/NR 
     ADSG=GPLS*FLS/NG 
     ADSO=OPLS*FLS/NO 
     IF(RIB.EQ.0.0)GO TO 300 
     ADSR=RPLS*FLS*RIB/100.*(1.+RIB/100.)**NR/((1.+RIB/100.)**NR-1.) 
 300 IF(GIB.EQ.0.0)GO TO 301 
     ADSG=GPLS*FLS*GIB/100.*(1.+GIB/100.)**NG/((1.+GIB/100.)**NG-1.) 
 301 IF(OIB.EQ.0.0)GO TO 302 
     ADSO=OPLS*FLS*OIB/100.*(1.+OIB/100.)**NO/((1.+OIB/100.)**NO-1.) 
 302 ADS=(ADSR+ADSG+ADSO)/100.0 
     PIR=ADS/7.0 
     CR=ADS/7.0 
     TAOC=OAM+ADS+PIR+CR 
     CPTN=TAOC/BU 
     CPTG=TAOC/1000.0/QAVE/365.0 
     CPTT=CPTN+EBUR 
     CPGG=(TAOC+EOMR)/1000.0/QAVE/365.0 
     CPHN=CPTN*PPH*GPCD*30.0/1000.0 
     CPHT=CPHN+EBUR*PPH*GPCD*30.0/1000.0 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 200 FORMAT('0USER CHARGE SUMMARY') 
 101 FORMAT('0',A1,' EPA GRANT',T55,E9.3,' PERCENT') 
 102 FORMAT(' ',A1,' STATE GRANT',T55,E9.3,' PERCENT') 
 103 FORMAT(' ',A1,' ALLOWANCE FOR FINANCING',T55,E9.3,' PERCENT') 
 104 FORMAT('   BONDS                PERCENT  RATE  LIFE') 
1104 FORMAT(' ',A1,'   GENERAL OBLIGATION',F7.2,F6.2,I6) 
2104 FORMAT(' ',A1,'   REVENUE           ',F7.2,F6.2,I6) 
3104 FORMAT(' ',A1,'   OTHER             ',F7.2,F6.2,I6) 
 105 FORMAT(' ',A1,' EXISTING SEWER RATE ',T55,E9.3,' $/TGAL') 
 106 FORMAT(' ',A1,' PERSONS PER HOUSEHOLD',T55,E9.3) 
 107 FORMAT(' ',A1,' GALLONS/CAPITA/DAY (WATER USE)',T55,E9.3,' GPCPD') 
 108 FORMAT('   TOTAL PROJECT COST',T55,E9.3,' $') 
 109 FORMAT('   EPA ELIGIBLE COST',T55,E9.3,' $') 
 110 FORMAT('   LOCAL SHARE',T55,E9.3,' $') 
 111 FORMAT('   ANNUAL DEBT SERVICE',T55,E9.3,' $/YEAR') 
 112 FORMAT('   PRINCIPAL AND INTEREST RESERVE',T55,E9.3,' $/YEAR') 
 113 FORMAT('   CONTINGENCY RESERVE',T55,E9.3,' $/YEAR') 
 114 FORMAT('   TOTAL ANNUAL OPERATING COST',T55,E9.3,' $/YEAR') 
 115 FORMAT('     COST PER 1000 GALLONS TREATED (NEW SYSTEM)',T55,E9.3, 
    >' $/TGAL') 
 116 FORMAT('     COST PER 1000 GALLONS TREATED (TOTAL SYSTEM)',T55, 
    > E9.3,' $/TGAL') 
 215 FORMAT('     COST PER BILLING UNIT (NEW SYSTEM)',T55,E9.3, 
    >' $/TGAL') 
 216 FORMAT('     COST PER BILLING UNIT (TOTAL SYSTEM)',T55, 
    > E9.3,' $/TGAL') 
 117 FORMAT('     COST PER HOUSEHOLD (NEW SYSTEM)',T55,E9.3,' $/MONTH') 
 118 FORMAT('     COST PER HOUSEHOLD (TOTAL SYSTEM)',T55,E9.3, 
    >' $/MONTH') 
 119 FORMAT('   TREATMENT COST') 
     WRITE(6,200) 
     WRITE(6,101)ID(1),EPAG 
     WRITE(6,102)ID(2),OG 
     WRITE(6,103)ID(3),AFF 
     WRITE(6,104) 
     WRITE(6,2104)ID(4),RPLS,RIB,NR 
     WRITE(6,1104)ID(5),GPLS,GIB,NG 
     WRITE(6,3104)ID(6),OPLS,OIB,NO 
     WRITE(6,105)ID(7),EBUR 
     WRITE(6,106)ID(8),PPH 
     WRITE(6,107)ID(9),GPCD 
     WRITE(6,108)TPC 
     WRITE(6,109)TEC 
     WRITE(6,110)FLS 
     WRITE(6,111)ADS 
     WRITE(6,112)PIR 
     WRITE(6,113)CR 
     WRITE(6,114)TAOC 
     WRITE(6,119) 
     WRITE(6,115)CPTG 
     WRITE(6,116)CPGG 
     WRITE(6,215)CPTN 
     WRITE(6,216)CPTT 
     WRITE(6,117)CPHN 
     WRITE(6,118)CPHT 
 121 FORMAT(' ',19A4) 
     WRITE(6,121)STARDA 
     RETURN 
     END 
     SUBROUTINE CIONEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC   ),(QQ(3),REC   ), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),VT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,28) 
      FIRC=(CIC-EFC)*0.0000834 
     SV=REC/FIRC 
     ST=SV/TFR 
     VR=FIRC*QAVE*1000000.0/REC*ST/60.0/24.0 
     VREG=RL/RC*VR/8.34/RSG*100.0 
     VRIN=RW*VR 
     VBW=BW*VR 
     BT=BW/RBW 
     RT=VREG/RFR/VR 
     WT=RW/RIN 
     OMT=.1*(ST+BT+RT+WT) 
     EC=ST+BT+RT+WT+OMT 
     CPD=HOD/EC*60.0 
     CAC=EFC 
     CALL PRICE(QAVE,0.0,0.0,15,RSST) 
     CALL INIT(RR,QQ,28) 
     RETURN 
     END 
     SUBROUTINE CIONIN(RR) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC),(QQ(3),REC), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),BT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     DIMENSION LIST(10) 
     DATA LIST/'EFFL','RESI','REGE','FLOW','HOUR','AMOU','COLU', 
    > 'END ','BACK','REPL'/ 
     CALL INIT(QQ,RR,28) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 EFC=VALUE(1) 
     GO TO 50 
   2 REC=VALUE(1) 
     GO TO 50 
   3 RD=VALUE(1) 
     RL=VALUE(2) 
     RC=VALUE(3) 
     RSG=VALUE(4) 
     GO TO 50 
   4 TFR=VALUE(1) 
     RFR=VALUE(2) 
     RIN=VALUE(3) 
     GO TO 50 
   5 HOD=VALUE(1) 
     GO TO 50 
   6 RW=VALUE(1) 
     GO TO 50 
   7 CD=VALUE(1) 
     GO TO 50 
   8 CALL INIT(RR,QQ,28) 
     RETURN 
   9 BW=VALUE(1) 
     RBW=VALUE(2) 
     GO TO 50 
  10 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE CIONOT(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),EFC   ),(QQ(3),REC   ), 
    &(QQ( 4),RD    ),(QQ( 5),TFR   ),(QQ( 6),RFR   ),(QQ( 7),RIN   ), 
    &(QQ( 8),HOD   ),(QQ( 9),RW    ),(QQ(10),CD    ),(QQ(11),SV    ), 
    &(QQ(12),FIRC  ),(QQ(13),ST    ),(QQ(14),VR    ),(QQ(15),VREG  ), 
    &(QQ(16),VRIN  ),(QQ(17),EC    ),(QQ(18),BT    ),(QQ(19),RT    ), 
    &(QQ(20),WT    ),(QQ(21),OMT   ),(QQ(22),CPD   ),(QQ(23),VBW   ), 
    &(QQ(24),RL    ),(QQ(25),RC    ),(QQ(26),RSG   ),(QQ(27),BW    ), 
    &(QQ(28),RBW   ) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,28) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0CATION EXCHANGE') 
     WRITE(6,201)QAVE 
 201 FORMAT('0AVERAGE WASTE FLOW                  ',E9.3,' MGD') 
     WRITE(6,202)EFC 
 202 FORMAT(' EFFLUENT CONCENTRATION              ',E9.3,' MG/L') 
     WRITE(6,203)REC 
 203 FORMAT(' RESIN EXCHANGE CAPACITY             ',E9.3,' LB/CUFT') 
     WRITE(6,204)RL 
 204 FORMAT(' REGENERANT LEVEL                    ',E9.3,' LB/CUFT') 
     WRITE(6,205)TFR 
 205 FORMAT(' TREATMENT FLOW RATE                 ',E9.3,' GPM/CUFT') 
     WRITE(6,206)RFR 
 206 FORMAT(' REGENERANT FLOW RATE                ',E9.3,' GPM/CUFT') 
     WRITE(6,207)RIN 
 207 FORMAT(' RINSE FLOW RATE                     ',E9.3,' GPM/CUFT') 
     WRITE(6,208)RBW 
 208 FORMAT(' BACKWASH FLOW RATE                  ',E9.3,' GPM/CUFT') 
     WRITE(6,209)VREG 
 209 FORMAT(' VOLUME OF REGENERANT                ',E9.3,' GAL') 
     WRITE(6,210)VRIN 
 210 FORMAT(' VOLUME OF RINSE WATER               ',E9.3,' GAL') 
     WRITE(6,211)VBW 
 211 FORMAT(' VOLUME OF BACKWASH WATER            ',E9.3,' GAL') 
     WRITE(6,212)VR 
 212 FORMAT(' VOLUME OF RESIN                     ',E9.3,' CU FT') 
     WRITE(6,213)ST 
 213 FORMAT(' SERVICE TIME                        ',E9.3,' MIN') 
     WRITE(6,214)EC 
 214 FORMAT(' EXCHANGE CYCLE                      ',E9.3,' MIN') 
     WRITE(6,215)CPD 
 215 FORMAT(' CYCLES PER DAY                      ',E9.3) 
     WRITE(6,216)SV 
 216 FORMAT(' SERVICE VOLUME                      ',E9.3,' GAL/CUFT') 
 505 FORMAT(' BACKWASH WATER                      ',E9.3,' GAL/CUFT') 
 506 FORMAT(' RINSE WATER                         ',E9.3,' GAL/CUFT') 
     WRITE(6,505)BW 
     WRITE(6,506)RW 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE CIRCPR(KPRIM,FNUM,QAVG,SWD,SA,XOSTES,RSMS,RSST,IQU) 
    NOTE  KPRIM = 1 IS A PRIMARY CLARIFIER 
   NOTE  KPRIM = 0 IS A SECONDARY CLARIFIER 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.EQ.1)GO TO 678 
     COSTES=XOSTES 
     ECF=1.0 
     ASA=SA*ECF 
     NB=QAVG/100.0+1.0 
     QPB=QAVG/NB 
     N=2 
     IF(QPB.GT.10.0)N=4 
     IF(QPB.GT.24.0)N=8 
     IF(QPB.GT.50.0)N=12 
     IF(QPB.GT.70.0)N=16 
   2 SAU=ASA/N/NB 
     IDIA=SQRT(4.0*SAU/3.1416)+0.99 
     DIA=IDIA 
     IF(DIA.LE.200.0)GO TO 1 
     N=N+1 
     GO TO 2 
   1 VEW=1.15*N*NB*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     TS=7.90+0.25*SWD 
     VCSN=0.825*(DIA+4.0)**2*TS/12.0 
     TW=7.00+0.50*SWD 
     VCWN=3.14*(SWD+1.5)*DIA*TW/12.0 
     FN=N 
     VCB=100.0*FN**1.13 
     VCW=(N*VCWN+VCB)*NB 
     VCS=N*VCSN*NB 
     FMMH=200.0 
     IF(ASA.GT.1000.0)FMMH=30.3*ASA**0.2733 
     IF(ASA.GT.3000.0)FMMH=2.05*ASA**0.6098 
     OMH=350.0 
     IF(ASA.GT.1000.0)OMH=37.1*ASA**0.3247 
     IF(ASA.GT.3000.0)OMH=4.0*ASA**0.6020 
     FKWH=7500.0 
     IF(ASA.GT.1670.0)FKWH=2183.3*ASA**0.1663 
     IF(ASA.GT.16700.0)FKWH=38.4*ASA**0.5818 
     OMMP=1.0 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     IF(COSTES.EQ.0.0)COSTES=75000.0*FMSECI/491.6 
     COSTRO=2.16*DIA**0.8515 
     COSTCM=COSTES*COSTRO/100.0 
     FIMH=2.04*DIA 
     CH=0.1*FIMH 
     PMINC=15.0 
     FIEC=(COSTCM*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR)*N*NB 
     CC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSMS,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL CIRCQU(KPRIM,ECF,SA,ASA,QAVG,N,NB,SAU, 
    > DIA,VEW,SWD,TS,TW,VCW,VCS,FMMH,OMH,FKWH) 
      RETURN 
     END 
     SUBROUTINE CIRCQU(KPRIM,ECF,SA,ASA,QAVG,N,NB,SAU,DIA,VEW,SWD,TS, 
    >TW,VCW,VCS,FMMH,OMH,FKWH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR SEDIMENTATION') 
     WRITE(6,2) 
2    FORMAT('0CIRCULAR CLARIFIER') 
     IF(KPRIM.EQ.0)WRITE(6,3) 
   3 FORMAT('0SECONDARY CLARIFIER') 
     IF(KPRIM.EQ.1)WRITE(6,31) 
  31 FORMAT('0PRIMARY CLARIFIER') 
     WRITE(6,4)ECF 
4    FORMAT(' EXCESS CAPACITY FACTOR',T45,E9.3) 
     WRITE(6,5)SA 
5    FORMAT(' CALCULATED SURFACE AREA',T45,E9.3,' SQ FT') 
     WRITE(6,6)ASA 
6    FORMAT(' ADJUSTED SURFACE AREA',T45,E9.3,' SQ FT') 
     WRITE(6,7)QAVG 
7    FORMAT(' AVERAGE DAILY WASTEWATER FLOW',T45,E9.3,' MGD') 
     WRITE(6,8)N 
8    FORMAT(' NUMBER OF CIRCULAR CLARIFIERS',T45,I9) 
     WRITE(6,9)NB 
9    FORMAT(' NUMBER OF BATTERIES',T45,I9) 
     WRITE(6,10)SAU 
10   FORMAT(' SURFACE AREA PER UNIT',T45,E9.3,' SQ FT') 
     WRITE(6,11)DIA 
11   FORMAT(' DIAMETER OF UNIT',T45,E9.3,' FEET') 
     WRITE(6,12)VEW 
12   FORMAT(' EARTHWORK REQUIRED ',T45,E9.3,' CU FT') 
     WRITE(6,13)SWD 
13   FORMAT(' SIDEWATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,14)TS 
14   FORMAT(' THICKNESS OF THE SLAB',T45,E9.3,' INCHES') 
     WRITE(6,15)TW 
15   FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,16)VCW 
16   FORMAT(' TOTAL  WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,17)VCS 
17   FORMAT(' TOTAL SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,18)FMMH 
18   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,19)OMH 
19   FORMAT(' OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,20)FKWH 
20   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE CLAREX(FMLVS,QQMAX,XSP,XWS,XEBOD,XESS,VVOLAT,EBODS, 
    <QC,QQAVE,RR) 
     COMMON/XXCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,25) 
     SP=XSP 
     XESS=ESS 
     FMLSS=FMLVS/0.8 
     SA=QAVE*1000000.0/SFR 
     ASLR=QAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,32.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(39) 
     GO TO 2 
   3 CALL RECTPR(0,32.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(39) 
   2 WL=QMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     EBOD=EBODS+0.84*FP*ESS*VOLAT/100.0 
     XEBOD=EBOD 
     XWS=WS 
     SETSO=0.0 
     QC=UC 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE CLARIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(13),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','CONS', 
    > 'END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,11,12,13,14,15),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 FP=VALUE(1) 
     GO TO 50 
  11 CALL INIT(RR,QQ,25) 
     RETURN 
  12 COSTES=VALUE(1) 
     GO TO 50 
  13 RECT=1.0 
     GO TO 50 
  14 RECT=0.0 
     GO TO 50 
  15 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE CLAROT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR NITRIFICATION') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
 110 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,110)SA 
     WRITE(6,120)STARDA 
     IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,32.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,32.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE CMASEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FKI    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     FK=FKI 
     QQQ=QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(20) 
   2 FK=FK*THETA**(TEMP-20.0) 
     NUM=NUM-2 
     AT=24.0*BOD5/FMLVS/FOM 
     AT2=(BOD5-EBODS)/(FK*FMLVS*EBODS) 
     IF(AT2.GT.AT)AT=AT2 
     VOL=QAVE*AT/24.0 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     IF(OBOD.LT.1.25)OREQ=1.25*BOD5*QAVE*8.34 
     IF(OBOD.GT.1.5)OREQ=1.5*BOD5*QAVE*8.34 
     SVOLAT=SOLIDS*VOLAT/100.0 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <+FNDF/100.0*QAVE*SVOLAT*8.34+QAVE*(SOLIDS-SVOLAT)*8.34 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.6)SP=0.6*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     COD=1.5*EBOD 
     SETSO=0.0 
     OAG=0.0 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,13.0,0,RSSA,RSST) 
     CALL USEREX(20) 
     GO TO 300 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,13.0,0,RSPD,RSPH, 
    >RSST) 
     CALL USEREX(20) 
 300 CALL INIT(RR,QQ,40) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE CMASIN(RR,ID,MODT) 
     DIMENSION LIST(10) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     DATA IA/'I'/ 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ','MECH','DIFF', 
    >'ESTI','REPL'/ 
     CALL INIT(QQ,RR,40) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     FNDF=VALUE(6) 
     FP=VALUE(7) 
     DO 20 I=1,7 
  20 ID(MODT,I)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,9)=IA 
     ID(MODT,10)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,40) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(1) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE CMASOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0COMPLETE MIX ACTIVATED SLUDGE') 
     WRITE(6,201)ID(MODT,1),FK 
 201 FORMAT('0',A1,' REACTION RATE CONSTANT            ',E9.3, 
    >' L/MG-H') 
     WRITE(6,202)ID(MODT,2),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,5),BP 
     WRITE(6,204)ID(MODT,3),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,4),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,6),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,9),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,10),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCFT') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,13.0,1,RSSA,RSST) 
     GO TO 300 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,13.0,1,RSPD,RSPH, 
    >RSST) 
 300 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE COAGEX(RR,MODT) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CD    ),(QQ(3),SSR  ), 
    &(QQ( 4),BODR  ),(QQ( 5),OPH   ),(QQ( 6),CR    ),(QQ( 7),CODR   ), 
    &(QQ( 8),TKNR   ),(QQ(9),COSTES),(QQ(10),NC) 
    >,(QQ(11),PO4R),(QQ(12),UC),(QQ(13),RSCL) 
     COMMON/PSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,13) 
     SSI=SOLIDS 
     PO4I=PO4 
     PO4E=PO4*(1.0-PO4R/100.0) 
     SSE=SSI*(1.0-SSR/100.0) 
     CR=CD*QAVE*8.34 
     PH=OPH 
   1 CALL COAGPR(NC,CD,PSP,QAVE,SSI,SSE,PO4I,PO4E,COSTES,RSCL,RSST,0) 
     CALL USEREX(68) 
     VPSP=PSP/1.05/(UC/100.0)/8.34 
     BODE=BOD5*(1.0-BODR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     CODE=COD*(1.0-CODR/100.0) 
     IF(CODE.LT.CODS)CODE=CODS 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     COD=CODE 
     TKN=TKNE 
     PO4=PO4E 
     BOD5=BODE 
     SOLIDS=SSE 
     TOTAL=SVOLU+VPSP 
     TSS=(VPSP*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(VPSP*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(VPSP*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SETSO=0.0 
     OAG=0.0 
   2 CALL INIT(RR,QQ,13) 
     RETURN 
     END 
     SUBROUTINE COAGIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(9) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CD    ),(QQ(3),SSR  ), 
    &(QQ( 4),BODR  ),(QQ( 5),OPH   ),(QQ( 6),CR    ),(QQ( 7),CODR   ), 
    &(QQ( 8),TKNR   ),(QQ(9),COSTES),(QQ(10),NC) 
    >,(QQ(11),PO4R),(QQ(12),UC),(QQ(13),RSCL) 
     DATA LIST/'REMO','UNDE','OPTI','END ','ESTI','LIME','ALUM','IRON', 
    > 'REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,13) 
     NC=1 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(5) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 OPH=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   4 CALL INIT(RR,QQ,13) 
     RETURN 
   5 COSTES=VALUE(1) 
     GO TO 50 
   6 NC=1 
     CD=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 NC=2 
     CD=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   8 NC=3 
     CD=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   9 RSCL=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE COAGOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CD    ),(QQ(3),SSR  ), 
    &(QQ( 4),BODR  ),(QQ( 5),OPH   ),(QQ( 6),CR    ),(QQ( 7),CODR   ), 
    &(QQ( 8),TKNR   ),(QQ(9),COSTES),(QQ(10),NC) 
    >,(QQ(11),PO4R),(QQ(12),UC),(QQ(13),RSCL) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,13) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0','COAGULATION') 
     IF(NC.EQ.1)WRITE(6,101)ID(MODT,3),CD 
     IF(NC.EQ.2)WRITE(6,201)ID(MODT,3),CD 
     IF(NC.EQ.3)WRITE(6,303)ID(MODT,3),CD 
 101 FORMAT('0',A1,' LIME DOSAGE                     ',E9.3,' MG/L') 
 201 FORMAT('0',A1,' ALUM DOSAGE                     ',E9.3,' MG/L') 
 303 FORMAT('0',A1,' IRON SALT DOSAGE                ',E9.3,' MG/L') 
     WRITE(6,102)ID(MODT,4),OPH 
 102 FORMAT(' ',A1,' OPTIMUM PH                      ',E9.3) 
     WRITE(6,105)CR 
 105 FORMAT('   COAGULANT REQUIREMENT           ',E9.3,' LB/DAY') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,13) 
     CALL COAGPR(NC,CD,PSP,QAVE,0.0,0.0,0.0,0.0, 
    >COSTES,RSCL,RSST,1) 
     RETURN 
     END 
     SUBROUTINE COAGPR(NC,CD,PSP,QAVG,SSI,SSE,PI,PE,XOSTES,RSCL,RSST, 
    >IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.NE.0)GO TO 678 
     WRITE(6,998)NC,CD,QAVG,SSI,SSE,PI,PE 
 998 FORMAT(' COAGPR',I5,6E11.5) 
     COSTES=XOSTES 
     FLIME=0.0 
     FIRON=0.0 
     ALUM=0.0 
     FNUM=60.0 
     CR=CD*QAVG*8.34 
     IF(NC.GT.1)GO TO 1 
   LIME 
     XS=QAVG*(SSI-SSE)*8.34 
     XCA=QAVG*8.34*CD*1.5 
     PSP=XS+XCA 
     QAF=630.0 
     FLIME=CR*365.0 
     GO TO 3 
   1 IF(NC.GT.2)GO TO 2 
   ALUM 
     XS=QAVG*(SSI-SSE)*8.34 
     XP=QAVG*(PI-PE)*8.34*4.0 
     AP=(PI-PE)*9.60 
     AOH=CD-AP 
     XOH=QAVG*AOH*8.34*0.263 
     PSP=XS+XP+XOH 
     QAF=360.0 
     ALUM=CR*365.0 
     GO TO 3 
    IRON SALTS 
   2 XS=QAVG*(SSI-SSE)*8.34 
     XP=QAVG*(PI-PE)*8.34*4.90 
     FP=(PI-PE)*5.23 
     FOH=CD-FP 
     XOH=FP*QAVG*8.34*0.65 
     PSP=XS+XP+XOH 
     QAF=500.0 
     FIRON=CR*365.0 
   3 ECF=1.0 
     IF(QAVG.GT.100.0)ECF=1.0 
     QD=ECF*QAVG 
     NB=QD/100.0+1.0 
     QPB=QAVG/NB 
     N=2 
     IF(QPB.GT.10.0)N=4 
     IF(QPB.GT.24.0)N=8 
     IF(QPB.GT.50.0)N=12 
     IF(QPB.GT.70.0)N=16.0 
   6 QU=QD/N/NB 
     AS=QU*1000000.0/QAF 
     DIA=SQRT(4.0*AS/3.1416) 
     SWD=10.67+0.067*DIA 
     IF(DIA.LE.200.0)GO TO 5 
     N=N+1 
     GO TO 6 
   5 VEW=1.15*N*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350) 
     TS=7.9+0.25*SWD 
     TW=7.0+0.5*SWD 
     VCSN=0.825*(DIA+4.0)**2*TS/12.0 
     VCWN=3.14*(SWD+1.5)*DIA*TW/12.0 
     FN=N 
     VCB=100.0*FN**1.13 
     VCW=(N*VCWN+VCB)*NB 
     VCS=N*VCSN*NB 
     QHU=QAF*AS/1000000.0 
     FMHP=QHU*14.0/11.0 
     IF(QHU.GT.11.0)FMHP=14.0+0.06*(QHU-11.0) 
     FKWH=6701.0*N*FMHP*NB 
     OMH=(3285.0+142.0*FN**1.365)*NB 
     FMMH=(1151.0+64.0*FN**1.365)*NB 
     OMMP=1.0 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTRO=0.0164*DIA 
     IF(COSTES.EQ.0.0)COSTES=110000.0*FMSECI/491.6 
     COSTCM=COSTES*COSTRO 
     FIMH=200.0+25.0*DIA 
     CH=0.1*FIMH 
     PMINC=5.0 
     FIEC=((1.0+PMINC/100.0)*COSTCM+FIMH*FLABRI+CH*UPICR)*N 
     CC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSCL,RC1) 
     PRIN=(COSTE+COSTCW+COSTCS)*CF 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     GO TO (10,11,12),NC 
  10 SUMMDA(NUM,10)=CR 
     SUMMDA(NUM,14)=FLIME 
     GO TO 13 
  11 SUMMDA(NUM,11)=CR 
     SUMMDA(NUM,15)=ALUM 
     GO TO 13 
  12 SUMMDA(NUM,12)=CR 
     SUMMDA(NUM,16)=FIRON 
  13 RETURN 
 678 IF(KCTL.NE.0)CALL COAGQU(QAVG,N,NB,QU,QAF,AS,DIA,SWD,VEW, 
    >TS,TW,VCW,VCS,FMHP,FKWH,OMH,FMMH) 
     RETURN 
     END 
     SUBROUTINE COAGQU(QAVG,N,NB,QU,QOF,AS,DIA,SWD,VEW,TS,TW,VCW,VCS, 
    >FMHP,FKWH,OMH,FMMH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0 QUANTITIES FOR CHEMICAL COAGULATION') 
     WRITE(6,2)QAVG 
2    FORMAT('0AVERAGE DAILY WASTEWATER FLOW',T45,E9.3,' MGD') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER OF UPFLOW CLARIFIERS PER BATTERY',T45,I9) 
     WRITE(6,4)NB 
4    FORMAT(' NUMBER OF BATTERIES',T45,I9) 
     WRITE(6,5)QU 
5    FORMAT(' WASTEWATER TO BE HANDLED BY ONE UNIT',T45,E9.3,' MGD') 
     WRITE(6,6)QOF 
6    FORMAT(' DESIGN OVERFLOW RATE DEPENDENT ON COAGULANT TYPE',T45, 
    >E9.3,' GPD/SQFT') 
     WRITE(6,7)AS 
7    FORMAT(' SURFACE AREA OF EACH INDIVIDUAL UNIT',T45,E9.3,' SQFT') 
     WRITE(6,8)DIA 
8    FORMAT(' DIAMETER OF UNIT',T45,E9.3,' FEET') 
     WRITE(6,9)SWD 
9    FORMAT(' SIDE WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,10)VEW 
10   FORMAT(' EARTHWORK REQUIRED ',T45,E9.3,' CU FT') 
     WRITE(6,11)TS 
11   FORMAT(' THICKNESS OF SLAB',T45,E9.3,' INCHES') 
     WRITE(6,12)TW 
12   FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,13)VCW 
13   FORMAT(' TOTAL  WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,14)VCS 
14   FORMAT(' TOTAL  SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE (6,15)FMHP 
15   FORMAT(' MECHANISM HORSEPOWER  INSTALLED',T45,E9.3,' HP') 
     WRITE(6,16)FKWH 
16   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,17)OMH 
17   FORMAT(' OPERATIONAL MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,18)FMMH 
18   FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE COMMEX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),UNITS ),(QQ(3),FLAG  ), 
    &(QQ( 4),FUNITS),(QQ( 5),MARK  ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,5) 
     FLOW=QAVE/UNITS 
     FLAG=0.0 
     IF(FLOW.LE.20.0)GO TO 100 
     IUNITS=QAVE/20.0+0.9 
     IF(IUNITS.EQ.0)IUNITS=1 
     FUNITS=IUNITS 
     FLOW=QAVE/FUNITS 
     FLAG=1.0 
 100 IF(FLOW.LE.0.035)MARK=1 
     IF(FLOW.GT.0.035.AND.FLOW.LE.0.113)MARK=2 
     IF(FLOW.GT.0.113.AND.FLOW.LE.0.2)MARK=3 
     IF(FLOW.GT.0.2.AND.FLOW.LE.0.72)MARK=4 
     IF(FLOW.GT.0.72.AND.FLOW.LE.1.82)MARK=5 
     IF(FLOW.GT.1.82.AND.FLOW.LE.5.10)MARK=6 
     IF(FLOW.GT.5.10.AND.FLOW.LE.9.4)MARK=7 
     IF(FLOW.GT.9.4.AND.FLOW.LE.21.0)MARK=8 
     CALL INIT(RR,QQ,5) 
     RETURN 
     END 
     SUBROUTINE COMMIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(2),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),UNITS ),(QQ(3),FLAG  ), 
    &(QQ( 4),FUNITS),(QQ( 5),MARK  ) 
     DATA IA/'I'/ 
     DATA LIST/'NUMB','END'/ 
     CALL INIT(QQ,RR,5) 
     ENABLE=1.0 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 53 I=1,2 
     IF(KTYPE.EQ.LIST(I))GO TO 54 
  53 CONTINUE 
     WRITE(6,52)KTYPE 
  52 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  54 GO TO (1,2),I 
   1 UNITS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 CALL INIT(RR,QQ,5) 
     RETURN 
     END 
     SUBROUTINE COMMOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     DIMENSION ARAY(8,6) 
     COMMON/QQCO/QQ(100) 
     COMMON/STARCO/STARDA(19) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),UNITS ),(QQ(3),FLAG  ), 
    &(QQ( 4),FUNITS),(QQ( 5),MARK  ) 
     DATA ARAY/4.0,7.0,7.0,10.0,15.0,25.0,25.0,36.0, 
    <56.0,56.0,56.0,45.0,37.0,25.0,25.0,15.0, 
    <4*0.25,0.25,3*0.38,3*0.25,0.50,0.75,2*1.5,2.0, 
    <2.27,4.25,4.25,4.42,4.96,5.79,6.96,9.375, 
    <175.0,450.0,450.0,650.0,1100.0,2100.0,3500.0,8500.0/ 
     CALL INIT(QQ,RR,5) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     XUNITS=UNITS 
     IF(FLAG.NE.0.0)XUNITS=FUNITS 
     WRITE(6,1) 
     WRITE(6,407) ID(MODT,1),XUNITS 
     WRITE(6,401)ARAY(MARK,1) 
     WRITE(6,402)ARAY(MARK,2) 
     WRITE(6,403)ARAY(MARK,3) 
     WRITE(6,404)ARAY(MARK,4) 
     WRITE(6,405)ARAY(MARK,5) 
     WRITE(6,406)ARAY(MARK,6) 
   1 FORMAT('0COMMINUTION') 
 401 FORMAT('   DRUM DIAMETER                     ',E9.3,' INCHES') 
 402 FORMAT('   DRUM RPM                          ',E9.3,' REV/MIN') 
 403 FORMAT('   AVERAGE SLOT WIDTH                ',E9.3,' INCHES') 
 404 FORMAT('   HORSEPOWER/UNIT                   ',E9.3,' HP') 
 405 FORMAT('   STANDARD HEIGHT                   ',E9.3,' FEET') 
 406 FORMAT('   STANDARD NET WEIGHT               ',E9.3,' POUNDS') 
 407 FORMAT('0',A1,' NUMBER OF UNITS                   ',E9.3,' UNITS') 
     IF(FLAG.EQ.0.0)GO TO 210 
     WRITE(6,200) 
 200 FORMAT(70X,'****NOTE-MORE UNITS NEEDED THAN SPECIFIED****') 
 210 WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE CONTEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TC    ),(QQ(3),TS    ), 
    &(QQ( 4),FMLATS),(QQ( 5),FMLSTS),(QQ( 6),PV    ),(QQ( 7),OBOD  ), 
    &(QQ( 8),SPBOD ),(QQ( 9),VOLCT ),(QQ(10),VOLST ),(QQ(11),FOM   ), 
    &(QQ(12),VL    ),(QQ(13),OR    ),(QQ(14),SP    ),(QQ(15),FNR   ), 
    &(QQ(16),FPO4  ),(QQ(17),SRR   ),(QQ(18),EBODS ),(QQ(19),FP    ), 
    &(QQ(20),ALPHA ),(QQ(21),BETA  ),(QQ(22),TYPE  ),(QQ(23),STE   ), 
    &(QQ(24),OTE   ),(QQ(25),HP    ),(QQ(26),AF    ),(QQ(27),HPR   ), 
    >(QQ(28),AFR),(QQ(29),SSXSA),(QQ(30),COSTPD),(QQ(31),COSTPH), 
    >(QQ(32),COSTPS) 
    >,(QQ(33),RSSA),(QQ(34),RSPD),(QQ(35),RSPH),(QQ(36),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,36) 
     QQQ=QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(26) 
   2 VOLCT=QAVE*TC/24.0 
     NUM=NUM-2 
     VOLST=QAVE*TS/24.0 
     FOM=QAVE*BOD5/((VOLCT*FMLATS)+(VOLST*FMLSTS)) 
     VL=QAVE*BOD5*62.4/(VOLCT+VOLST)/10.0**3 
     SP=SPBOD*QAVE*(BOD5-EBODS)*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     FPO4=0.01*(BOD5-EBODS) 
     IF(PO4-FPO4.LE.0.0)FPO4=0.0 
     SRR=FMLATS/(FMLSTS-FMLATS)*100.0 
     FMLSS=FMLATS 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     OR=OBOD*QAVE*(BOD5-EBOD)*8.34 
     SOLIDS=ESS 
     VOLAT=PV 
     BOD5=EBOD 
     BOD5S=EBODS 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     SETSO=0.0 
     OAG=0.0 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     VOL=VOLCT+VOLST 
     OREQ=OR 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(2,QAVE,VOLCT,VOLST,0.0,HP,SSXSA,19.0,0,RSSA,RSST) 
     CALL USEREX(26) 
     GO TO 4 
   5 CALL DIFFPR(2,QAVE,VOLCT,VOLST,0.0,AF,COSTPD,COSTPH,19.0,0,RSPD, 
    >RSPH,RSST) 
     CALL USEREX(26) 
   4 CALL INIT(RR,QQ,36) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE CONTIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TC    ),(QQ(3),TS    ), 
    &(QQ( 4),FMLATS),(QQ( 5),FMLSTS),(QQ( 6),PV    ),(QQ( 7),OBOD  ), 
    &(QQ( 8),SPBOD ),(QQ( 9),VOLCT ),(QQ(10),VOLST ),(QQ(11),FOM   ), 
    &(QQ(12),VL    ),(QQ(13),OR    ),(QQ(14),SP    ),(QQ(15),FNR   ), 
    &(QQ(16),FPO4  ),(QQ(17),SRR   ),(QQ(18),EBODS ),(QQ(19),FP    ), 
    &(QQ(20),ALPHA ),(QQ(21),BETA  ),(QQ(22),TYPE  ),(QQ(23),STE   ), 
    &(QQ(24),OTE   ),(QQ(25),HP    ),(QQ(26),AF    ),(QQ(27),HPR   ), 
    >(QQ(28),AFR),(QQ(29),SSXSA),(QQ(30),COSTPD),(QQ(31),COSTPH), 
    >(QQ(32),COSTPS) 
    >,(QQ(33),RSSA),(QQ(34),RSPD),(QQ(35),RSPH),(QQ(36),RSPS) 
     DATA IA/'I'/ 
     DATA LIST/'AERA','MIXE','PERC','OXYG','SLUD','END ','EFFL', 
    > 'CONS','MECH','DIFF','ESTI','REPL'/ 
     CALL INIT(QQ,RR,36) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 TC=VALUE(1) 
     TS=VALUE(2) 
     ID(MODT,1)=IA 
     ID(MODT,2)=IA 
     GO TO 50 
   2 FMLATS=VALUE(1) 
     FMLSTS=VALUE(2) 
     ID(MODT,3)=IA 
     ID(MODT,4)=IA 
     GO TO 50 
   3 PV=VALUE(1) 
     GO TO 50 
   4 OBOD=VALUE(1) 
     GO TO 50 
   5 SPBOD=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,36) 
     RETURN 
   7 EBODS=VALUE(1) 
     GO TO 50 
   8 FP=VALUE(1) 
     GO TO 50 
   9 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,5)=IA 
     GO TO 50 
  10 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,5)=IA 
     GO TO 50 
  11 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  12 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE CONTOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TC    ),(QQ(3),TS    ), 
    &(QQ( 4),FMLATS),(QQ( 5),FMLSTS),(QQ( 6),PV    ),(QQ( 7),OBOD  ), 
    &(QQ( 8),SPBOD ),(QQ( 9),VOLCT ),(QQ(10),VOLST ),(QQ(11),FOM   ), 
    &(QQ(12),VL    ),(QQ(13),OR    ),(QQ(14),SP    ),(QQ(15),FNR   ), 
    &(QQ(16),FPO4  ),(QQ(17),SRR   ),(QQ(18),EBODS ),(QQ(19),FP    ), 
    &(QQ(20),ALPHA ),(QQ(21),BETA  ),(QQ(22),TYPE  ),(QQ(23),STE   ), 
    &(QQ(24),OTE   ),(QQ(25),HP    ),(QQ(26),AF    ),(QQ(27),HPR   ), 
    >(QQ(28),AFR),(QQ(29),SSXSA),(QQ(30),COSTPD),(QQ(31),COSTPH), 
    >(QQ(32),COSTPS) 
    >,(QQ(33),RSSA),(QQ(34),RSPD),(QQ(35),RSPH),(QQ(36),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,36) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0CONTACT STABILIZATION ACTIVATED SLUDGE') 
     WRITE(6,211)FOM 
 211 FORMAT('0  LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,3),FMLATS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS CONTACT TANK      ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,4),FMLSTS 
 213 FORMAT(' ',A1,' MIXED LIQUOR SS STABILIZATION TANK',E9.3,' MG/L') 
     WRITE(6,214)ID(MODT,1),TC 
 214 FORMAT(' ',A1,' AERATION TIME CONTACT TANK        ',E9.3,' HOURS') 
     WRITE(6,314)ID(MODT,2),TS 
 314 FORMAT(' ',A1,' AERATION TIME STABILIZATION TANK  ',E9.3,' HOURS') 
     WRITE(6,215)VOLCT 
 215 FORMAT('   VOLUME OF CONTACT TANK            ',E9.3,' MG') 
     WRITE(6,315)VOLST 
 315 FORMAT('   VOLUME OF STABILIZATION TANK      ',E9.3,' MG') 
     WRITE(6,216)OR 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(FPO4.EQ.0.0)GO TO 228 
     WRITE(6,219)FPO4 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,123)VL 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/MCUFT') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,5)) 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(2,QAVE,VOLCT,VOLST,0.0,HP,SSXSA,19.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(2,QAVE,VOLCT,VOLST,0.0,AF,COSTPD,COSTPH,19.0,1,RSPD, 
    >RSPH,RSST) 
   4 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE COUNEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,12) 
     X1=FNH3 
     IF(DEQ.GT.FNH3)GO TO 10 
     CALL PRICE(QAVE,0.0,0.0,13,RSST) 
     X2=DEQ 
     SA=QMAX*8.34*1000000.0/FLR/24.0 
     TF=TEMS*1.8+32.0 
     FM=0.1117*EXP(0.02612*TF) 
     A=FM*GLR/29.0/FLR*18.0 
     Z=HTU*(1.0/(A-1.0))*ALOG(((A-1.0)*X1-GLR/FLR*Y2+X2) 
    </((A-1.0)*X2+X2-GLR/FLR*Y2)) 
     FLDT=FLD 
     IF(PH.GT.10.7) FLDT=0.0 
     CLR=QAVE*FLDT*8.34 
     PH=11.0 
     TKN=DEQ+TKN-FNH3 
     FNH3=DEQ 
  10 CALL INIT(RR,QQ,12) 
     RETURN 
     END 
     SUBROUTINE COUNIN(RR) 
     DIMENSION LIST(8),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     DATA LIST/'DESI','LIQU','GAS ','LIME','HEIG','AMMO','END','REPL'/ 
     CALL INIT(QQ,RR,12) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8),I 
   1 DEQ=VALUE(1) 
     GO TO 50 
   2 FLR=VALUE(1) 
     GO TO 50 
   3 GLR=VALUE(1) 
     GO TO 50 
   4 FLD=VALUE(1) 
     GO TO 50 
   5 HTU=VALUE(1) 
     GO TO 50 
   6 Y2=VALUE(1) 
     GO TO 50 
   7 CALL INIT(RR,QQ,12) 
     RETURN 
   8 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE COUNOT(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,12) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     IF(DEQ.GT.FNH3)GO TO 122 
     WRITE(6,200) 
 200 FORMAT('0COUNTER CURRENT AMMONIA STRIPPING') 
     WRITE(6,201)FLR 
 201 FORMAT('0LIQUID LOADING RATE                 ',E9.3,' LB/SQFT/HR') 
     WRITE(6,202)GLR 
 202 FORMAT(' GAS LOADING RATE                    ',E9.3,' LB/SQFT/HR') 
     WRITE(6,203)SA 
 203 FORMAT(' TOWER SURFACE AREA                  ',E9.3,' SQ FT') 
     WRITE(6,204)Z 
 204 FORMAT(' TOWER HEIGHT                        ',E9.3,' FEET') 
     IF(Z.GT.30)WRITE(6,209) 
 209 FORMAT(70X,'****NOTE-MAX. TOWER HEIGHT IS 30 FT. ****') 
     WRITE(6,207)X1 
     WRITE(6,205)X2 
 205 FORMAT(' EFFLUENT AMMONIA CONCENTRATION      ',E9.3,' MG/L') 
     WRITE(6,206)QMAX 
 206 FORMAT(' WASTE WATER FLOW                    ',E9.3,' MGD') 
 207 FORMAT(' INITIAL AMMONIA CONCENTRATION       ',E9.3,' MG/L') 
     IF(CLR.NE.0.0) GO TO 301 
     WRITE(6,302) 
 302 FORMAT(70X,'****NOTE-NO LIME REQUIRED, PH<10.8 ****') 
     GO TO 300 
 301 WRITE(6,208)CLR 
 208 FORMAT(' LIME REQUIREMENTS                   ',E9.3,' LB/DAY') 
     GO TO 300 
 122 WRITE(6,123) 
 123 FORMAT(70X,'****NOTE-COUNTER CURRENT UNIT NOT NEEDED'/75X, 
    > ' NH3 BELOW SPECIFIED LEVEL ****') 
 300 WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE CROSEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,12) 
     X1=FNH3 
     IF(DEQ.GE.FNH3)GO TO 10 
     CALL PRICE(QAVE,0.0,0.0,14,RSST) 
     X2=DEQ 
     SA=QMAX*8.34*1000000.0/FLR/24.0 
     TF=TEMS*1.8+32.0 
     FM=0.1117*EXP(0.02612*TF) 
     Z=-HTU*ALOG(X2/X1)*FLR/FM/GLR 
     FLDT=FLD 
     IF(PH.GT.10.7) FLDT=0.0 
     CLR=QAVE*FLDT*8.34 
     PH=11.0 
     TKN=DEQ+TKN-FNH3 
     FNH3=DEQ 
  10 CALL INIT(RR,QQ,12) 
     RETURN 
     END 
     SUBROUTINE CROSIN(RR) 
     DIMENSION LIST(8),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     DATA LIST/'DESI','LIQU','GAS ','LIME','HEIG','AMMO','END','REPL'/ 
     CALL INIT(QQ,RR,12) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8),I 
   1 DEQ=VALUE(1) 
     GO TO 50 
   2 FLR=VALUE(1) 
     GO TO 50 
   3 GLR=VALUE(1) 
     GO TO 50 
   4 FLD=VALUE(1) 
     GO TO 50 
   5 HTU=VALUE(1) 
     GO TO 50 
   6 Y2=VALUE(1) 
     GO TO 50 
   7 CALL INIT(RR,QQ,12) 
     RETURN 
   8 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE CROSOT(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DEQ   ),(QQ(3),FLR   ), 
    &(QQ( 4),GLR   ),(QQ( 5),FLD   ),(QQ( 6),HTU   ),(QQ( 7),X1    ), 
    &(QQ( 8),X2    ),(QQ( 9),Y2    ),(QQ(10),SA    ),(QQ(11),Z     ), 
    &(QQ(12),CLR   ) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,12) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     IF(DEQ.GE.FNH3)GO TO 122 
     WRITE(6,200) 
 200 FORMAT('0CROSS CURRENT AMMONIA STRIPPING') 
     WRITE(6,201)FLR 
 201 FORMAT('0LIQUID LOADING RATE                 ',E9.3,' LB/SQFT/HR') 
     WRITE(6,202)GLR 
 202 FORMAT(' GAS LOADING RATE                    ',E9.3,' LB/SQFT/HR') 
     WRITE(6,203)SA 
 203 FORMAT(' TOWER SURFACE AREA                  ',E9.3,' SQ FT') 
     WRITE(6,204)Z 
 204 FORMAT(' TOWER HEIGHT                        ',E9.3,' FEET') 
     IF(Z.GT.30)WRITE(6,209) 
 209 FORMAT(70X,'****NOTE-MAX. TOWER HEIGHT IS 30 FT. ****') 
     WRITE(6,207)X1 
     WRITE(6,205)X2 
 205 FORMAT(' EFFLUENT AMMONIA CONCENTRATION      ',E9.3,' MG/L') 
     WRITE(6,206)QMAX 
 206 FORMAT(' WASTE WATER FLOW                    ',E9.3,' MGD') 
 207 FORMAT(' INITIAL AMMONIA CONCENTRATION       ',E9.3,' MG/L') 
     IF(CLR.NE.0.0) GO TO 301 
     WRITE(6,302) 
 302 FORMAT(70X,'****NOTE-NO LIME REQUIRED, PH<10.8 ****') 
     GO TO 300 
 301 WRITE(6,208)CLR 
 208 FORMAT(' LIME REQUIREMENTS                   ',E9.3,' LBS/DAY') 
     GO TO 300 
 122 WRITE(6,123) 
 123 FORMAT(70X,'****NOTE-CROSS CURRENT UNIT NOT NEEDED',/75X, 
    > ' NH3 BELOW SPECIFIED LEVEL ****') 
 300 WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE DATTEX(RR) 
     DIMENSION RR(1) 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/QQCO/QQ(100) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),FMI),(QQ(2),API),(QQ(3),SS), 
    >(QQ( 4),XOSTPS),(QQ( 5),AR    ),(QQ( 6),WBR   ),(QQ( 7),DMD   ), 
    > (QQ( 8),SR    ),(QQ( 9),TSA   ),(QQ(10),VM    ),(QQ(11),CSSA  ), 
    > (QQ(12),ANO3E ),(QQ(13),VMA   ),(QQ(14),FM    ),(QQ(15),AP    ), 
    > (QQ(16),BV    ),(QQ(17),NB    ),(QQ(18),NC    ),(QQ(19),HC    ), 
    > (QQ(20),FLC   ),(QQ(21),WC    ),(QQ(22),FLU   ),(QQ(23),WU    ), 
    > (QQ(24),FM1   ),(QQ(25),VSTR  ),(QQ(26),VEW   ),(QQ(27),VCST  ), 
    > (QQ(28),VCWT  ),(QQ(29),FMMH  ),(QQ(30),OMH   ),(QQ(31),FKWH  ), 
    > (QQ(32),XMOST ),(QQ(33),XDOST ),(QQ(34),OMMP  ),(QQ(35),XOSTFM) 
    >,(QQ(36),RSCD),(QQ(37),RSPS),(QQ(38),RSST) 
     CALL INIT(QQ,RR,38) 
     SR=2.4869-0.16671*TEMP+0.0245614*TEMP**2 
     DIFFE=ANO3-ANO3E 
     TSA=QMAX*8.34*DIFFE/SR*1000.0 
     VM=TSA/SS 
     CSSA=QAVE*10.0**6/1440.0/AR 
     ARP=QMAX*10.0**6/1440.0/CSSA 
     D=VM/CSSA 
     IF(D.LT.DMD)D=DMD 
     VMA=CSSA*D 
     FM=FMI*QAVE*8.34*ANO3 
     AP=API*DIFFE 
     BV=10.0*CSSA 
     NB=QAVE/100.0+0.99 
     IF(NB.LT.1)NB=1 
     QPB=QAVE/NB 
     NC=2 
     IF(QPB.GT.5.0)NC=4 
     IF(QPB.GT.10.0)NC=6 
     IF(QPB.GT.20.0)NC=8 
     IF(QPB.GT.30.0)NC=12 
     IF(QPB.GT.40.0)NC=16 
     IF(QPB.GT.50.0)NC=24 
     IF(QPB.GT.70.0)NC=32 
     BVMGD=BV/10.0**6*1440.0/NB/NC 
     HC=D+11.0 
     FLC=SQRT(CSSA/NC) 
     WC=FLC 
     PGW=20.0+0.30*QAVE/NB 
     FLU=FLC 
     WU=WC 
     FM1=FM/5.90/1440.0 
     VSTR=FM1*1440.0*7.0*3.0 
     IF(NC.GT.2)GO TO 1 
     VEW=3.0*((2.0*WC+18.5)*(WC+17.0)+(2.0*WC+26.5)*(WC+25.0)) 
     GO TO 2 
   1 IF(NC.GT.8)GO TO 3 
     FLB=0.50*NC*FLC+16.0 
     WB=2.0*WC+PGW+16.0 
     GO TO 4 
   3 IF(NC.GT.16)GO TO 5 
     FLB=0.50*NC*FLC+PGW+16.0 
     WB=2.0*WC+PGW+16.0 
     GO TO 4 
   5 IF(NC.GT.24)GO TO 6 
     FLB=NC*FLC/3.0+PGW+16.0 
     WB=3.0*WC+2.0*PGW+16.0 
     GO TO 4 
   6 FLB=NC*FLC/4.0+PGW+16.0 
     WB=4.0*WC+3.0*PGW+16.0 
   4 VEW=3.0*((FLB+4.0)*(WB+4.0)+(FLB+12.0)*(WB+12.0)) 
   2 VCS=2.0*(2.0*WC+14.5)*(WC+13.0) 
     IF(NC.GT.4)VCS=2.0*FLB*WB 
     VCW=HC*7.0*FLC 
     IF(NC.GT.2)VCW=2.0*HC*(4.0+3.0*(NC/2-1))*FLC 
     IF(NC.GT.12)VCW=4.0*(HC*(4.0+3.0*(NC/4-1)*FLC)) 
     IF(NC.EQ.24)VCW=6.0*(HC*(6.0+3.0*(NC/6-1)*FLC)) 
     IF(NC.EQ.32)VCW=8.0*(HC*(8.0+3.0*(NC/8-1)*FLC)) 
     VCG=0.0 
     IF(NC.GE.4)VCG=1.5*PGW*(NC*WC/2.0+0.75*NC+1.5) 
     IF(NC.GE.12)VCG=1.50*PGW*((NC/2+3)*WC+0.75*NC+1.5) 
     IF(NC.EQ.24)VCG=1.50*PGW*((NC/3+5)*WC+0.75*NC+1.5) 
     IF(NC.EQ.32)VCG=1.50*PGW*((NC/4+7)*WC+0.75*NC+1.5) 
     VCST=VCS 
     VCWT=VCW+VCG 
     FMMH=1896.0*QAVE**0.278 
     IF(QAVE.GT.10.0)FMMH=675.2*QAVE**0.727 
     OMH=3351.20*QAVE**0.446 
     IF(QAVE.GT.10.0)OMH=4344.8*QAVE**0.3332 
     FKWH=170000.0*QAVE**0.92 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX*NB 
     COSTCW=VCWT/27.0*UPICW 
     COSTCS=VCST/27.0*UPICS 
     CMAFS=1290.0*FM**0.417*EPACI/DIVSOR 
     CMOST=XMOST 
     IF(XMOST.EQ.0.0)CMOST=3.00*FMSECI/491.60 
     TMC=CMOST*VMA 
     CDOST=XDOST 
     IF(XDOST.EQ.0.0)CDOST=40.0*FMSECI/491.60 
     CDEW=CSSA*CDOST 
     COSTFM=XOSTFM 
     IF(COSTFM.EQ.0.0)COSTFM=0.90*ENRCCI/2470.0 
     TBCC=(COSTE+COSTCW+COSTCS+CMAFS+TMC+CDEW)*CF 
     PRIN=(COSTE+COSTCW+COSTCS+TMC)*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=(CDEW+CMAFS)*CF 
     CALL AMORT(PRIN,RSCD,RC2) 
     OMMP=0.50 
     OMMC=OMMP/100.0*TBCC 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,8)=COSTFM*FM1*1440.0*365.0 
     SUMMDA(NUM,9)=63.0 
     SUMMDA(NUM,14)=COSTFM*FM1*1440.0*365.0/CHEM(1) 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(70) 
     SOLIDS=20.0 
     SETSO=0.0 
     BOD5=10.0 
     BOD5S=7.0 
     COD=1.5*BOD5 
     CODS=1.5*BOD5S 
     PH=7.2 
     PO4=0.7*PO4 
     ANO3=ANO3E 
     ANO2=0.0 
     OAG=0.0 
     CALL PUMPPR(1.0,QAVE,QMAX,3,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(70) 
     KASE=124 
     CALL PUMPPR(1.0,BVMGD,BVMGD,KASE,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(70) 
     CALL INIT(RR,QQ,38) 
     RETURN 
     END 
     SUBROUTINE DATTIN(RR,ID,MODT) 
     DIMENSION LIST(10),RR(1),ID(3,1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FMI),(QQ(2),API),(QQ(3),SS), 
    >(QQ( 4),XOSTPS),(QQ( 5),AR    ),(QQ( 6),WBR   ),(QQ( 7),DMD   ), 
    > (QQ( 8),SR    ),(QQ( 9),TSA   ),(QQ(10),VM    ),(QQ(11),CSSA  ), 
    > (QQ(12),ANO3E ),(QQ(13),VMA   ),(QQ(14),FM    ),(QQ(15),AP    ), 
    > (QQ(16),BV    ),(QQ(17),NB    ),(QQ(18),NC    ),(QQ(19),HC    ), 
    > (QQ(20),FLC   ),(QQ(21),WC    ),(QQ(22),FLU   ),(QQ(23),WU    ), 
    > (QQ(24),FM1   ),(QQ(25),VSTR  ),(QQ(26),VEW   ),(QQ(27),VCST  ), 
    > (QQ(28),VCWT  ),(QQ(29),FMMH  ),(QQ(30),OMH   ),(QQ(31),FKWH  ), 
    > (QQ(32),XMOST ),(QQ(33),XDOST ),(QQ(34),OMMP  ),(QQ(35),XOSTFM) 
    >,(QQ(36),RSCD),(QQ(37),RSPS),(QQ(38),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'ALLO','METH','ALKA','SPEC','REPL','APPL','BACK', 
    > 'MINI','ESTI','END '/ 
     CALL INIT(QQ,RR,38) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 ANO3E=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FMI=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 API=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 SS=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 RSCD=VALUE(1) 
     RSPS=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
   6 AR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   7 WBR=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   8 DMD=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   9 XMOST=VALUE(1) 
     XDOST=VALUE(2) 
     XOSTPS=VALUE(3) 
     XOSTFM=VALUE(4) 
     GO TO 50 
  10 CALL INIT(RR,QQ,38) 
     RETURN 
     END 
     SUBROUTINE DATTOT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     EQUIVALENCE (QQ(1),FMI),(QQ(2),API),(QQ(3),SS), 
    >(QQ( 4),XOSTPS),(QQ( 5),AR    ),(QQ( 6),WBR   ),(QQ( 7),DMD   ), 
    > (QQ( 8),SR    ),(QQ( 9),TSA   ),(QQ(10),VM    ),(QQ(11),CSSA  ), 
    > (QQ(12),ANO3E ),(QQ(13),VMA   ),(QQ(14),FM    ),(QQ(15),AP    ), 
    > (QQ(16),BV    ),(QQ(17),NB    ),(QQ(18),NC    ),(QQ(19),HC    ), 
    > (QQ(20),FLC   ),(QQ(21),WC    ),(QQ(22),FLU   ),(QQ(23),WU    ), 
    > (QQ(24),FM1   ),(QQ(25),VSTR  ),(QQ(26),VEW   ),(QQ(27),VCST  ), 
    > (QQ(28),VCWT  ),(QQ(29),FMMH  ),(QQ(30),OMH   ),(QQ(31),FKWH  ), 
    > (QQ(32),XMOST ),(QQ(33),XDOST ),(QQ(34),OMMP  ),(QQ(35),XOSTFM) 
    >,(QQ(36),RSCD),(QQ(37),RSPS),(QQ(38),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,38) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0ATTACHED GROWTH DENITRIFICATION') 
 102 FORMAT('0',A1,' METHANOL REQUIREMENT',T45,E9.3,' LB/LB NO3') 
 103 FORMAT(' ',A1,' ALKALINITY PRODUCTION',T45,E9.3,' MG/MG NO3') 
 104 FORMAT(' ',A1,' SPECIFIC SURFACE OF MEDIA',T45,E9.3,' SQFT/CUFT') 
 106 FORMAT(' ',A1,' APPLICATION RATE',T45,E9.3,' GPM/SQFT') 
 107 FORMAT(' ',A1,' BACKWASH RATE',T45,E9.3,' GPM/SQFT') 
 108 FORMAT(' ',A1,' MINIMUM MEDIA DEPTH',T45,E9.3,' FEET') 
 109 FORMAT('   SURFACE REMOVAL RATE',T45,E9.3,' LB/TSQFT/DAY') 
 110 FORMAT('   TOTAL MEDIA SURFACE AREA',T45,E9.3,' SQ FT') 
 111 FORMAT('   TOTAL VOLUME OF MEDIA NEEDED',T45,E9.3,' CU FT') 
 112 FORMAT('   TOTAL COLUMN AREA',T45,E9.3,' SQ FT') 
 113 FORMAT('   ACTUAL MEDIA VOLUME',T45,E9.3,' CU FT') 
 114 FORMAT('   DAILY METHANOL REQUIREMENT',T45,E9.3,' LBS/DAY') 
 115 FORMAT('   TOTAL BACKWASH REQUIREMENT',T45,E9.3,' GAL/MIN') 
 116 FORMAT('0QUANTITIES FOR ATTACHED GROWTH DENITRIFICATION') 
 117 FORMAT('0  NUMBER OF BATTERIES',T45,I9) 
 118 FORMAT('   NUMBER OF COLUMNS PER BATTERY',T45,I9) 
 119 FORMAT('   HEIGHT OF COLUMNS',T45,E9.3,' FEET') 
 121 FORMAT('   CROSS-SECTIONAL LENGTH OF COLUMNS',T45,E9.3,' FEET') 
 122 FORMAT('   CROSS-SECTIONAL WIDTH OF COLUMNS',T45,E9.3,' FEET') 
 123 FORMAT('   METHANOL FEED RATE',T45,E9.3,' GAL/MIN') 
 124 FORMAT('   METHANOL STORAGE VOLUME',T45,E9.3,' GALLONS') 
 125 FORMAT('   VOLUME OF EARTHWORK ',T45,E9.3,' CU FT') 
 126 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 127 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 128 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 129 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 130 FORMAT('   ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 131 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,102)ID(MODT,2),FMI 
     WRITE(6,103)ID(MODT,3),API 
     WRITE(6,104)ID(MODT,4),SS 
     WRITE(6,106)ID(MODT,6),AR 
     WRITE(6,107)ID(MODT,7),WBR 
     WRITE(6,108)ID(MODT,8),DMD 
     WRITE(6,109)SR 
     WRITE(6,110)TSA 
     WRITE(6,111)VM 
     WRITE(6,112)CSSA 
     WRITE(6,113)VMA 
     WRITE(6,114)FM 
     WRITE(6,115)BV 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,116) 
     WRITE(6,117)NB 
     WRITE(6,118)NC 
     WRITE(6,119)HC 
     WRITE(6,121)FLC 
     WRITE(6,122)WC 
     WRITE(6,123)FM1 
     WRITE(6,124)VSTR 
     WRITE(6,125)VEW 
     WRITE(6,126)VCST 
     WRITE(6,127)VCWT 
     WRITE(6,128)FMMH 
     WRITE(6,129)OMH 
     WRITE(6,130)FKWH 
     WRITE(6,131)OMMP 
     CALL PUMPPR(1.0,0.0,0.0,4,XOSTPS,1,RSPS,RSST) 
     CALL PUMPPR(1.0,QAVE,QMAX,3,XOSTPS,0,RSPS,RSST) 
     NUM=NUM-1 
     CALL PUMPPR(1.0,QAVE,QMAX,3,XOSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE DENIEX(RR,MODT) 
     DIMENSION RR(1),HPA(14),HPM(7) 
     DIMENSION TANKS(9,5) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/QQCO/QQ(100) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),ANO3E),(QQ(2),DO2),(QQ(3),PHA), 
    >(QQ( 4),FMLSS ),(QQ( 5),FMLVSS),(QQ( 6),FMR   ),(QQ( 7),YD    ), 
    >(QQ( 8),ALP   ),(QQ( 9),FKO   ),(QQ(10),FKD   ),(QQ(11),TA    ), 
    >(QQ(12),HPR   ),(QQ(13),V     ),(QQ(14),VA    ),(QQ(15),PA    ), 
    >(QQ(16),QR    ),(QQ(17),NTD   ),(QQ(18),NM    ),(QQ(19),NTA   ), 
    >(QQ(20),NA    ),(QQ(21),NB    ),(QQ(22),QPB   ),(QQ(23),HPTA  ), 
    >(QQ(24),HPTM  ),(QQ(25),XOSTPS),(QQ(26),EBODS  ),(QQ(27),VNA   ), 
    >(QQ(28),DWA   ),(QQ(29),WA    ),(QQ(30),FLA   ),(QQ(31),VND   ), 
    >(QQ(32),DWD   ),(QQ(33),VEW   ),(QQ(34),VCST  ),(QQ(35),VCW   ), 
    >(QQ(36),VCG  ),(QQ(37),VCP  ),(QQ(38),VCWT  ),(QQ(39),FLHR  ), 
    >(QQ(40),OMH   ),(QQ(41),FMMH ),(QQ(42),FKWH  ),(QQ(43),OMMP  ), 
    >(QQ(44),XSXSA ),(QQ(45),XSXM  ), 
    >(QQ(46),WD),(QQ(47),FLD),(QQ(48),VCWB), 
    >(QQ(49),P),(QQ(50),T),(QQ(51),FM),(QQ(52),XOSTFM) 
    >,(QQ(53),RSSA),(QQ(54),RSXM),(QQ(55),RSPS),(QQ(56),RSST) 
     DATA TANKS/2.0,4.0,10.0,20.0,30.0,40.0,50.0,70.0,100.0, 
    >3*2.0,3.0,4.0,4.0,6.0,8.0,10.0,1.0,1.0,2.0,3.0,3.0,5.0,4.0, 
    >4.0,5.0,1.0,3*2.0,3.0,4*4.0,7*1.0,2.0,3.0/ 
     DATA HPA/5.0,7.5,10.0,15.0,20.0,25.0,30.0,40.0,50.0,60.0, 
    >75.0,100.0,125.0,150.0/ 
     DATA HPM/0.5,0.75,1.0,1.5,2.0,3.0,5.0/ 
     CALL INIT(QQ,RR,56) 
     QD=0.057377-0.005388*TEMP+0.0006825*TEMP**2 
     QO=QD*ANO3E/(FKO+ANO3E) 
     DIFE=ANO3-ANO3E 
     IF(DIFE.LE.0.0)GO TO 10 
     EUI=ANO3/ANO3E 
     IF(EUI.LT.1.0)EUI=1.0 
     TCD=1.0/(YD*QO*DIFE/(DIFE+FKO*ALOG(EUI))-FKD) 
     T=DIFE*YD*TCD/FMLSS/(1.0+FKD*TCD) 
     V=T*QAVE 
     FI=8.34*FMLSS*V 
     S=FI/TCD 
     KADD=LQADD(53,MODT) 
     NUM=NUM+1 
     CALL DLAREX(FMLVSS,QMAX,S,W,EBOD,ESS,VOLAT,EBODS, 
    >UC,QAVE,BANKDA(KADD),FMLSS) 
     NUM=NUM-2 
     SOLIDS=ESS 
     BOD5=EBOD 
     BOD5S=EBODS 
     COD=1.5*BOD5 
     CODS=1.5*BOD5S 
     PH=7.2 
     PO4=0.7*PO4 
     ANO3=ANO3E 
     ANO2=0.0 
     OAG=0.0 
     TOTAL=W+SVOLU 
     TSS=(W*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(W*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(W*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     FM=FMR*QAVE*8.34*(DIFE+ANO3) 
     AP=ALP*DIFE 
     VA=QAVE*TA/24.0 
     UCC=0.01773-0.00052129*TEMP+0.000006719*TEMP**2 
     POV=0.00475*UCC**0.3*FMLSS**0.298 
     P=POV*V*1000.0 
     PA=HPR*VA*1000.0 
     QRR=QR*QAVE 
     ECF=1.0 
     IF(ECF.LT.1.0)ECF=1.0 
     NB=QAVE/100.0+0.95 
     IF(NB.LT.1)NB=1 
     QPB=QAVE/NB 
     DO 1 I=1,9 
     IF(QPB.LT.TANKS(I,1))GO TO 2 
   1 CONTINUE 
     I=9 
   2 NTD=TANKS(I,2) 
     NM=TANKS(I,3) 
     NTA=TANKS(I,4) 
     NA=TANKS(I,5) 
     HPNA=PA*ECF/NB/NTA/NA 
     DO 3 I=1,14 
     IF(HPNA.LE.HPA(I))GO TO 4 
   3 CONTINUE 
     I=14 
   4 HPSNA=HPA(I) 
     HPTA=NB*NTA*NA*HPSNA 
     HPNM=P*ECF/NB/NTD/NM 
     DO 5 I=1,7 
     IF(HPNM.LE.HPM(I))GO TO 6 
   5 CONTINUE 
     I=7 
   6 HPSNM=HPM(I) 
     HPTM=NB*NTD*NM*HPSNM 
     FML=FM/5.9/1440.0 
     VSTR=FML*1440.0*7.0*3.0 
     V=V*10.0**6/7.48 
     VA=VA*10.0**6/7.48 
     VNA=VA*ECF/NB/NTA 
     DWA=4.816*HPSNA**0.2467 
     IF(HPSNA.GT.100.0)DWA=15.0 
     LOW=NA 
     WA=SQRT(VNA/DWA/NA) 
     FLA=WA*LOW 
     VND=V*ECF/NB/NTD 
     DWD=1.45*HPSNM+5.0 
     LOWD=NM 
     WD=SQRT(VND/DWD/NM) 
     FLD=NM*WD 
     PGWD=0.0 
     IF(NTD.GE.4)PGWD=20.0+0.3*QPB 
     PGWA=0.0 
     IF(NTA.GE.4)PGWA=20.0+0.3*QPB 
     IF(NTD.GT.2)GO TO 7 
     VEW=3.0*((2.0*WD+18.5)*(WD+17.0)+(2.0*WD+26.5)*(WD+25.0)) 
     VCS=1.50*(2.0*WD+14.5)*(WD+13.0) 
     VCW=WD*(1.25*DWD+11.0)+(6.0*WD+9.0)*(1.25*DWD+3.75) 
     GO TO 8 
   7 IF(NTD.GT.3)GO TO 9 
     VEW=3.0*((3.0*WD+28.0)*(WD+25.0)+(3.0*WD+20.0)*(WD+17.0)) 
     VCS=1.5*(3.0*WD+16.0)*(WD+13.0) 
     VCW=(1.25*DWD+11.0)*(3.0*WD+6.0)+(1.25*DWD+3.75)*(7.0*WD+6.0) 
     GO TO 8 
   9 FLS=2.0*FLD+PGWD+16.0 
     WS=1.0/2.0*NTD*WD+14.5 
     VEW=3.0*NB*((FLS+4.0)*(WS+4.0)+(FLS+12.0)*(WS+12.0)) 
     VCS=1.5*FLS*WS 
     VCW=(NTD/2.0*(FLD+3.0)*(1.25*DWD+11.0)+((0.5*NTD+2.0)* 
    >(FLD+3.0)+2.0*NTD*WD)*(1.25*DWD+3.75))*NB 
   8 IF(NTA.GT.2)GO TO 17 
     VEW=VEW+3.0*((2.0*WA+18.5)*(WA+17.0)+(2.0*WA+26.5)*(WA+25.0)) 
     VCS=VCS+1.50*(2.0*WA+14.5)*(WA+13.0) 
     VCW=VCW+WA*(8.75*DWA+88.0) 
     GO TO 18 
  17 IF(NTA.GT.3)GO TO 19 
     VEW=VEW+3.0*((3.0*WA+28.0)*(WA+25.0)+(3.0*WA+20.0)*(WA+17.0)) 
     VCS=VCS+1.5*(3.0*WA+16.0)*(WA+13.0) 
     VCW=VCW+6.0*(WA+2.0)*(1.25*DWA+13.45)+5.0*WA*(DWA*3.0) 
     GO TO 18 
  19 FLSA=2.0*FLA+PGWA+16.0 
     WSA=1.0/2.0*NTA*WA+14.5 
     VEW=VEW+3.0*NB*((FLSA+4.0)*(WSA+4.0)+(FLSA+12.0)*(WSA+12.0)) 
     VCS=VCS+1.5*FLSA*WSA 
     VCW=VCW+NB*(4.0*FLA*(1.25*(DWA+3.0)+9.7)+(NTA-2.0)*FLA* 
    >(1.25*DWA+31.0+2.5)+NTA*WA*(DWA+3.0)) 
  18 VCGC=1.5*PGWD*(NTD*WD/2.0+0.75*NTD+1.5) 
     VCGC=VCGC+1.5*PGWA*(NTA*WA/2.0+0.75*NTA+1.5) 
     VCGW=2.0*PGWD*(DWD+3.0) 
     VCGW=VCGW+2.0*PGWA*(DWA+3.0) 
     VCG=VCGC+VCGW 
     ZA=5.0+0.078*HPSNA 
     VCP=(ZA**2+5.6*(DWA+2.0))*NTA*NA 
     ZB=5.0+0.078*HPSNM 
     VCP=VCP+(ZB**2+5.6*(DWD+2.0))*NTD*NM 
     VCWB=2.0*(WA-ZA)*NTA*NA 
     VCWB=VCWB+2.0*(WD-ZB)*NTD*NM 
     VCST=VCS 
     VCWT=VCW+VCG+VCP+VCWB 
     IF(NTA.LE.2)FLHR=4.0*WA+11.0+2.0*(3.0*ZA+WA-4.0) 
     IF(NTA.EQ.3)FLHR=6.0*WA+10.0+3.0*(3.0*ZA+WA-4.0) 
     MUL=NTA 
     IF(NTA/2*2.NE.NTA)MUL=MUL+2 
     IF(NTA.GE.4)FLHR=(PGWA+NTA*WA+(FLA+3.0-4.0*NA)*MUL 
    > +NA*NTA*(3.0*ZA+WA-4.0)) 
     IF(NTD.LE.2)FLHR=FLHR+4.0*WD+11.0+2.0*(3.0*ZB+WD-4.0) 
     IF(NTD.EQ.3)FLHR=FLHR+6.0*WD+10.0+3.0*(3.0*ZB+WD-4.0) 
     MUL=NTD 
     IF(NTD/2*2.NE.NTD)MUL=MUL+2 
     IF(NTD.GE.4)FLHR=FLHR+(PGWD+NTD*WD+(FLD+3.0-4.0*NM)*MUL 
    > +NM*NTD*(3.0*ZB+WD-4.0)) 
     TICA=NTA*NA*HPSNA+NTD*NM*HPSNM 
     TICA=TICA*NB 
     OMH=242.4*TICA**0.3731 
     IF(TICA.GT.200.0)OMH=100.0*TICA**0.5425 
     FMMH=106.3*TICA**0.4031 
     IF(TICA.GT.100.0)FMMH=42.6*TICA**0.5956 
     FKWH=0.85*0.90*24.0*365.0*TICA 
     OMMP=4.225-0.975*ALOG(TICA) 
     CF=1.11 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCWT*UPICW/27.0 
     COSTCS=VCST*UPICS/27.0 
     SSXSA=XSXSA 
     IF(SSXSA.EQ.0.0)SSXSA=16300.0*FMSECI/491.60 
     RSXSA=0.2148*HPSNA**0.513 
     CSXSA=RSXSA*SSXSA 
     FIMHA=39.0+0.55*HPSNA 
     IF(HPSNA.GT.60.0)FIMHA=61.3+0.18*HPSNA 
     CHA=0.10*FIMHA 
     PMINC=23.0 
     FIECA=(CSXSA*(1.0+PMINC/100.0)+FIMHA*FLABRI+CHA*UPICR)* 
    > NB*NTA*NA 
     SSXM=XSXM 
     IF(SSXM.EQ.0.0)SSXM=7740.0*FMSECI/491.60 
     RSXM=0.67+0.067*HPSNM 
     CSXM=RSXM*SSXM 
     FIMHM=61.3+0.18*HPSNM 
     CHM=0.1*FIMHM 
     FIECM=(CSXM*(1.0+PMINC/100.0)+FIMHM*FLABRI+CHM*UPICR)*NB*NTD*NM 
     COSTFM=XOSTFM 
     IF(COSTFM.EQ.0.0)COSTFM=0.90*ENRCCI/2470.0 
     CMAFS=EPACI/DIVSOR*1290.0*FM**0.417 
     COSTHR=FLHR*UPIHR 
     TBCC=(COSTE+COSTCW+COSTCS+FIECA+FIECM+CMAFS+COSTHR)*CF 
     PRIN=(COSTE+COSTCW+COSTCS+COSTHR)*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=FIECA*CF 
     CALL AMORT(PRIN,RSSA,RC2) 
     PRIN=(FIECM+CMAFS)*CF 
     CALL AMORT(PRIN,RSXM,RC3) 
     OMMC=FIECA*OMMP/100.0+FIECM*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,8)=COSTFM*FML*1440.0*365.0 
     SUMMDA(NUM,9)=34.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(41) 
     NUM=NUM+1 
     CALL PUMPPR(1.0,QAVE,QAVE,2,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(41) 
  11 CALL INIT(RR,QQ,56) 
     RETURN 
  10 V=0.0 
     GO TO 11 
     END 
     SUBROUTINE DENIIN(RR,ID,MODT) 
     DIMENSION LIST(15),RR(1),ID(3,1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ANO3E),(QQ(2),DO2),(QQ(3),PHA), 
    >(QQ( 4),FMLSS ),(QQ( 5),FMLVSS),(QQ( 6),FMR   ),(QQ( 7),YD    ), 
    >(QQ( 8),ALP   ),(QQ( 9),FKO   ),(QQ(10),FKD   ),(QQ(11),TA    ), 
    >(QQ(12),HPR   ),(QQ(13),V     ),(QQ(14),VA    ),(QQ(15),PA    ), 
    >(QQ(16),QR    ),(QQ(17),NTD   ),(QQ(18),NM    ),(QQ(19),NTA   ), 
    >(QQ(20),NA    ),(QQ(21),NB    ),(QQ(22),QPB   ),(QQ(23),HPTA  ), 
    >(QQ(24),HPTM  ),(QQ(25),XOSTPS),(QQ(26),EBODS ),(QQ(27),VNA   ), 
    >(QQ(28),DWA   ),(QQ(29),WA    ),(QQ(30),FLA   ),(QQ(31),VND   ), 
    >(QQ(32),DWD   ),(QQ(33),VEW   ),(QQ(34),VCST  ),(QQ(35),VCW   ), 
    >(QQ(36),VCG ),(QQ(37),VCP  ),(QQ(38),VCWT  ),(QQ(39),FLHR  ), 
    >(QQ(40),OMH   ),(QQ(41),FMMH ),(QQ(42),FKWH  ),(QQ(43),OMMP  ), 
    >(QQ(44),XSXSA ),(QQ(45),XSXM  ), 
    >(QQ(46),WD),(QQ(47),FLD),(QQ(48),VCWB), 
    >(QQ(49),P),(QQ(50),T),(QQ(51),FM),(QQ(52),XOSTFM) 
    >,(QQ(53),RSSA),(QQ(54),RSXM),(QQ(55),RSPS),(QQ(56),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'ALLO','DISS','ALKA','MIXE','METH','PROD','GROS', 
    > 'CONS','DETE','POWE','SLUD','ESTI','END ','EFFL','REPL'/ 
     CALL INIT(QQ,RR,56) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,15 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),I 
   1 ANO3E=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 DO2=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 PHA=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 FMLSS=VALUE(1) 
     FMLVSS=VALUE(2) 
     GO TO 50 
   5 FMR=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   6 ALP=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   7 YD=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   8 FKO=VALUE(1) 
     FKD=VALUE(2) 
     ID(MODT,7)=IA 
     GO TO 50 
   9 TA=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
  10 HPR=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
  11 QR=VALUE(1) 
     ID(MODT,10)=IA 
     GO TO 50 
  12 XSXSA=VALUE(1) 
     XSXM=VALUE(2) 
     XOSTPS=VALUE(3) 
     XOSTFM=VALUE(4) 
     GO TO 50 
  13 CALL INIT(RR,QQ,56) 
     RETURN 
  14 EBODS=VALUE(1) 
     GO TO 50 
  15 RSSA=VALUE(1) 
     RSXM=VALUE(2) 
     RSPS=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
     END 
     SUBROUTINE DENIOT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ANO3E),(QQ(2),DO2),(QQ(3),PHA), 
    >(QQ( 4),FMLSS ),(QQ( 5),FMLVSS),(QQ( 6),FMR   ),(QQ( 7),YD    ), 
    >(QQ( 8),ALP   ),(QQ( 9),FKO   ),(QQ(10),FKD   ),(QQ(11),TA    ), 
    >(QQ(12),HPR   ),(QQ(13),V     ),(QQ(14),VA    ),(QQ(15),PA    ), 
    >(QQ(16),QR    ),(QQ(17),NTD   ),(QQ(18),NM    ),(QQ(19),NTA   ), 
    >(QQ(20),NA    ),(QQ(21),NB    ),(QQ(22),QPB   ),(QQ(23),HPTA  ), 
    >(QQ(24),HPTM  ),(QQ(25),XOSTPS),(QQ(26),VSTR  ),(QQ(27),VNA   ), 
    >(QQ(28),DWA   ),(QQ(29),WA    ),(QQ(30),FLA   ),(QQ(31),VND   ), 
    >(QQ(32),DWD   ),(QQ(33),VEW   ),(QQ(34),VCST  ),(QQ(35),VCW   ), 
    >(QQ(36),VCG ),(QQ(37),VCP  ),(QQ(38),VCWT  ),(QQ(39),FLHR  ), 
    >(QQ(40),OMH   ),(QQ(41),FMMH ),(QQ(42),FKWH  ),(QQ(43),OMMP  ), 
    >(QQ(44),XSXSA ),(QQ(45),XSXM  ), 
    >(QQ(46),WD),(QQ(47),FLD),(QQ(48),VCWB), 
    >(QQ(49),P),(QQ(50),T),(QQ(51),FM),(QQ(52),XOSTFM) 
    >,(QQ(53),RSSA),(QQ(54),RSXM),(QQ(55),RSPS),(QQ(56),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,56) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0SUSPENDED GROWTH DENITRIFICATION') 
 101 FORMAT('0',A1,' INFLUENT DISSOLVED OXYGEN',T45,E9.3,' MG/L') 
 102 FORMAT(' ',A1,' WASTEWATER ALKALINITY',T45,E9.3,' MG/L CACO3') 
 103 FORMAT(' ',A1,' METHANOL REQUIREMENT',T45,E9.3,' LB/LB NO3') 
 104 FORMAT(' ',A1,' ALKALINITY PRODUCTION',T45,E9.3,' MG/MG NO3') 
 105 FORMAT(' ',A1,' GROSS YIELD OF DENITRIFIER',T45,E9.3,' LB/LB NO3') 
 106 FORMAT(' ',A1,' DETENTION TIME (STABILIZATION TANK)',T45,E9.3, 
    > ' HOURS') 
 107 FORMAT(' ',A1,' HORSEPOWER REQUIREMENT',T45,E9.3,' HP/TCF') 
 108 FORMAT(' ',A1,' SLUDGE RETURN RATIO',T45,E9.3) 
 109 FORMAT('   DENITRIFICATION REACTOR VOLUME',T45,E9.3,' CU FT') 
 110 FORMAT('   DAILY METHANOL REQUIREMENT',T45,E9.3,' LB/DAY') 
 111 FORMAT('   STABILIZATION TANK VOLUME',T45,E9.3,' CU FT') 
 112 FORMAT('   POWER REQUIRED FOR DENITRIFICATION MIXING',T45,E9.3, 
    > ' HP') 
 113 FORMAT('   POWER REQUIRED FOR STABILIZATION MIXING',T45,E9.3, 
    > ' HP') 
 114 FORMAT('0QUANTITIES FOR SUSPENDED GROWTH DENITRIFICATION') 
 115 FORMAT('0  NUMBER OF BATTERIES',T45,I9) 
 116 FORMAT('   NUMBER OF DENITRIFICATION TANKS',T45,I9) 
 117 FORMAT('   NUMBER OF MIXERS PER TANK',T45,I9) 
 118 FORMAT('   NUMBER OF STABILIZATION TANKS',T45,I9) 
 119 FORMAT('   NUMBER OF AERATORS PER TANK',T45,I9) 
 220 FORMAT('   TOTAL CAPACITY OF SELECTED AERATORS',T45,E9.3,' HP') 
 221 FORMAT('   TOTAL CAPACITY OF SELECTED MIXERS',T45,E9.3,' HP') 
 122 FORMAT('   VOLUME PER STABILIZATION TANK',T45,E9.3,' CU FT') 
 123 FORMAT('   WATER DEPTH IN STABILIZATION TANKS',T45,E9.3,' FEET') 
 124 FORMAT('   LENGTH OF STABILIZATION TANK',T45,E9.3,' FEET') 
 125 FORMAT('   WIDTH OF STABILIZATION TANK',T45,E9.3,' FEET') 
 126 FORMAT('   VOLUME PER DENITRIFICATION TANK',T45,E9.3,' CU FT') 
 127 FORMAT('   WATER DEPTH IN DENITRIFICATION TANKS',T45,E9.3,' FEET') 
 128 FORMAT('   LENGTH OF DENITRIFICATION TANK',T45,E9.3,' FEET') 
 129 FORMAT('   WIDTH OF DENITRIFICATION TANK',T45,E9.3,' FEET') 
 131 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 132 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 133 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 134 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 135 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 136 FORMAT('   ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 137 FORMAT('   O & M MATERIALS AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,101)ID(MODT,2),DO2 
     WRITE(6,102)ID(MODT,3),PHA 
     WRITE(6,103)ID(MODT,4),FMR 
     WRITE(6,104)ID(MODT,5),ALP 
     WRITE(6,105)ID(MODT,6),YD 
     WRITE(6,107)ID(MODT,9),HPR 
     WRITE(6,108)ID(MODT,10),QR 
     IF(V.LE.0.0)GO TO 10 
 130 FORMAT('   DETENTION TIME (DENITRIFICATION TANK)',T45,E9.3, 
    > ' DAYS') 
     WRITE(6,106)ID(MODT,8),TA 
     WRITE(6,130)T 
     WRITE(6,109)V 
     WRITE(6,110)FM 
     WRITE(6,111)VA 
     WRITE(6,112)P 
     WRITE(6,113)PA 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,114) 
     WRITE(6,115)NB 
     WRITE(6,116)NTD 
     WRITE(6,117)NM 
     WRITE(6,118)NTA 
     WRITE(6,119)NA 
     WRITE(6,220)HPTA 
     WRITE(6,221)HPTM 
     WRITE(6,122)VNA 
     WRITE(6,123)DWA 
     WRITE(6,124)FLA 
     WRITE(6,125)WA 
     WRITE(6,126)VND 
     WRITE(6,127)DWD 
     WRITE(6,128)FLD 
     WRITE(6,129)WD 
     WRITE(6,131)VEW 
     WRITE(6,132)VCST 
     WRITE(6,133)VCWT 
     WRITE(6,134)OMH 
     WRITE(6,135)FMMH 
     WRITE(6,136)FKWH 
     WRITE(6,137)OMMP 
     CALL PUMPPR(1.0,QAVE,QAVE,2,XOSTPS,1,RSPS,RSST) 
     RETURN 
  10 WRITE(6,208) 
 208 FORMAT(' ',70X,'***UNIT NOT NEEDED'/ 
    >' ',70X,'***INFLUENT NITRATE LESS THAN ALLOWABLE EFFLUENT') 
     RETURN 
     END 
     SUBROUTINE DESIIN 
     DIMENSION LISTW(22) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/DESICO/DESIDA(20) 
     DATA LISTW/'MINI','AVER','MAXI','TEMP','SUSP','VOLA','BOD5', 
    >'SBOD','COD ','SCOD','PH  ','CATI','ANIO','TKN ','PO4 ','NH3 ', 
    >'SETT','OIL ','NO2 ','NO3 ','UNIT','END'/ 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,22 
     IF(KTYPE.EQ.LISTW(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS NOT A VALID EFFLUENT SPECIFICATION CARD') 
     GO TO 50 
  51 FORMAT(A4,A2,74A1) 
  53 IF(I.GE.21)GO TO 55 
     DESIDA(I)=VALUE(1) 
     GO TO 50 
  55 RETURN 
     END 
     SUBROUTINE DIFFPR(MOD,QAVG,VC,VS,V,CFM,XOSTPD,XOSTPH,FNUM, 
    >IQU,RSPD,RSPH,RSST) 
  MOD = 1   CONTACT STABILIZATION   COMPLETE MIX 
  MOD = 2   CONTACT STABILIZATION   PLUG FLOW 
   MOD = 3   OTHERS     COMPLETE MIX 
   MOD = 4   OTHERS     PLUG FLOW 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.EQ.1)GO TO 678 
     WRITE(6,998)MOD,QAVG,VC,VS,V,CFM 
 998 FORMAT(' DIFFPR',I5,5E11.5) 
     IF(FNUM.EQ.82.0)DSTPD=VC/2000.0 
     IF(FNUM.EQ.82.0)VC=0.0 
     ESTIM=1.0 
     COSTPD=XOSTPD 
     COSTPH=XOSTPH 
     ECFT=1.0 
     IF(ECFT.LT.1.00)ECFT=1.00 
     ECFB=1.0 
     IF(MOD.GT.2)GO TO 1 
     VD=(VC+VS)*ECFT*10.0**6/7.48 
     CFMD=CFM*ECFB*(VC+VS)*133.7 
     NB=QAVG/100.0+1.00 
     QPB=QAVG/NB 
     NT=4 
     IF(QAVG.GT.10.0)NT=6 
     IF(QPB.GT.20.0)NT=8 
     IF(QPB.GT.30.00)NT=10 
     IF(QPB.GT.40.0)NT=12 
     IF(QPB.GT.50.0)NT=14 
     IF(QPB.GT.70.0)NT=16 
     GO TO 2 
   1 VD=V*ECFT*10.0**6/7.48 
     CFMD=CFM*ECFB*V*133.70 
     NB=QAVG/100.0+1.0 
     QPB=QAVG/NB 
     NT=2 
     IF(QPB.GT.2.0)NT=3 
     IF(QPB.GT.4.0)NT=4 
     IF(QPB.GT.10.0)NT=6 
     IF(QPB.GT.20.0)NT=8 
     IF(QPB.GT.30.0)NT=10 
     IF(QPB.GT.40.0)NT=12 
     IF(QPB.GT.50.0)NT=14 
     IF(QPB.GT.70.0)NT=16 
   2 NDT=CFMD/(12.0*NT*NB)+0.99 
     IF(NDT.LT.1)NDT=1 
  10 VN=VD/NB/NT 
     FL=VN/30.0/15.0 
     IF(FL.LE.400.0)GO TO 11 
     NT=NT+1 
     GO TO 10 
  11 PGW=20.0+0.4*QAVG/NB 
     NSAT=FL/25.0+0.99 
     IF(NSAT.LT.1)NSAT=1 
     VEW=6.0*NB*((31.5*NT+15.5)*(FL+17.0)+(31.5*NT+23.5)*(FL+25.0))/2.0 
     IF(NT.GE.4)VEW=6.0*NB*((15.75*NT+15.5)*(2.0*FL+PGW+20.0)+(15.75* 
    > NT+23.5)*(2.0*FL+PGW+28.0))/2.0 
     VCS=1.50*NB*((31.5*NT+15.5)*(FL+17.0)) 
     IF(NT.GE.4)VCS=1.50*NB*((15.75*NT+15.5)*(2.0*FL+PGW+200.0)) 
     IF(MOD.EQ.2.OR.MOD.EQ.4)GO TO 6 
     VCW=(30.3*FL+NT*(29.4*FL+1372.5)+22.5)*NB 
     IF(NT.GE.4)VCW=(30.3*NT*FL+57.0*FL+1417.5*NT+45.0*PGW+135.0)*NB 
     HRL=(2.0*NT*FL+2.0*FL+61.5*NT+1.5)*NB 
     IF(NT.GE.4)HRL=(2.0*NT*FL+4.0*FL+36.5*NT+2.0*PGW+13.0)*NB 
     GO TO 7 
   6 VCW=NB*(75.3*FL+(29.4*NT-58.8)*FL+1383.75*NT+33.75) 
     IF(NT.LT.4)GO TO 13 
     VCW=NB*(29.35*NT*FL+56.8*FL+1350.0*NT+45.0*PGW+185.65) 
     IF(NT/2.NE.NT/4*2)VCW=NB*(15.15*NT*FL+28.50*FL+1367.0*NT+45.0*PGW 
    > +168.75) 
  13 HRL=(NT*FL+36.5*NT+1.5)*NB 
     IF(NT.EQ.3)HRL=((NT+1)*FL+36.5*NT+6.5)*NB 
     IF(NT.GE.4)HRL=(NT+4)*FL+34.0*NT+2.0*PGW+3.0 
   7 OMH=62.36*CFMD**0.3972 
     IF(CFMD.GT.3000.0)OMH=26.56*CFMD**0.5038 
     FMMH=22.82*CFMD**0.4379 
     IF(CFMD.GT.3000.0)FMMH=6.05*CFMD**0.6037 
     PB=CFMD*0.037 
     FKWH=PB*365.0*24.0*0.85*0.877 
     OMMP=3.57*QAVG**(-0.2602) 
     IF(FNUM.EQ.82.0)FKWH=120000.0*DSTPD 
     IF(FNUM.EQ.82.0)OMMP=3.34*DSTPD**(-0.2632) 
     RS=30.0 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTHR=HRL*UPIHR 
     IF(COSTPD.EQ.0.0)COSTPD=6.50*FMSECI/491.6 
     COSTD=COSTPD*NDT*NT*NB 
     IF(COSTPH.EQ.0.0)COSTPH=5000.0*FMSECI/491.6 
     COSTH=COSTPH*NSAT*NT*NB 
     FIMH=25.0*NSAT*NT*NB 
     CH=0.1*FIMH 
     COSTAP=617.20*CFMD**0.2553*CEPCIP/241.0 
     IF(CFMD.GT.1000.0)COSTAP=1.43*CFMD**1.1337*CEPCIP/241.0 
     IF(CFMD.GT.10000.0)COSTAP=28.59*CFMD**0.8085*CEPCIP/241.0 
     PMINC=10.0 
     FIEC=(COSTD+COSTH)*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR 
     PRIN=COSTD/(COSTD+COSTH)*FIEC*CF 
     CALL AMORT(PRIN,RSPD,RC1) 
     PRIN=COSTH/(COSTD+COSTH)*FIEC*CF 
     CALL AMORT(PRIN,RSPH,RC2) 
     COSTHR=HRL*UPIHR 
     CC=(COSTE+COSTCW+COSTCS+FIEC+COSTHR)*CF 
     PRIN=(COSTE+COSTCW+COSTCS+COSTHR)*CF 
     CALL AMORT(PRIN,RSST,RC3) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,7)=CFMD 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL DIFFQU(QAVG,NT,NB,CFMD,NDT,NSAT,VD,VN,FL, 
    >PGW,VEW,VCS,VCW,HRL,OMH,FMMH,FKWH,OMMP,MOD) 
     RETURN 
     END 
     SUBROUTINE DIFFQU(QAVG,NT,NB,CFMD,NDT,NSAT,VD,VN,FL,PGW,VEW,VCS, 
    >VCW,FLHR,OMH,FMMH,FKWH,OMMP,MOD) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR DIFFUSED AERATION SYSTEM') 
     IF(MOD.EQ.1.OR.MOD.EQ.3)WRITE(6,20) 
  20 FORMAT('0COMPLETELY MIXED FLOW') 
     IF(MOD.EQ.2.OR.MOD.EQ.4)WRITE(6,21) 
  21 FORMAT('0PLUG FLOW') 
     WRITE(6,2)QAVG 
2    FORMAT(' AVERAGE DAILY WASTEWATER FLOW',T45,E9.3,' MGD') 
     WRITE(6,3)NT 
3    FORMAT(' TOTAL NUMBER OF TANKS',T45,I9) 
     WRITE(6,4)NB 
4    FORMAT(' NUMBER OF BATTERIES',T45,I9) 
  25 FORMAT(' ACTUAL VOLUME PER TANK',T45,E9.3,' CU FT') 
     WRITE(6,25)VN 
     WRITE(6,5)CFMD 
5    FORMAT(' PROCESS AIR REQUIREMENT',T45,E9.3,' SCFM') 
     WRITE(6,6)NDT 
6    FORMAT(' NUMBER OF DIFFUSERS PER TANK',T45,I9) 
     WRITE(6,7)NSAT 
7    FORMAT(' NUMBER OF SWING ARM HEADERS PER TANK',T45,I9) 
     WRITE(6,10)FL 
10   FORMAT(' LENGTH OF AERATION TANKS',T45,E9.3,' FEET') 
     WRITE(6,11)PGW 
11   FORMAT(' PIPE GALLERY WIDTH',T45,E9.3,' FEET') 
     WRITE(6,12)VEW 
12   FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,13)VCS 
13   FORMAT(' REINFORCED SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,14)VCW 
14   FORMAT(' REINFORCED WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,15)FLHR 
15   FORMAT(' HANDRAIL LENGTH',T45,E9.3,' FEET') 
     WRITE(6,16)OMH 
16   FORMAT(' OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,17)FMMH 
17   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,18)FKWH 
18   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
     WRITE(6,19)OMMP 
19   FORMAT(' O & M MATERIAL AND SUPPLY COST ',T45,E9.3,' PERCENT') 
     RETURN 
     END 
     SUBROUTINE DISIEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CT),(QQ(3),CD), 
    &(QQ(4),FNT),(QQ(5),VCT),(QQ(6),ACR),(QQ(7),PCR),(QQ(8),CHLCO), 
    > (QQ(9),COSTES),(QQ(10),RSLE) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,10) 
     VCT=QMAX*CT*1000000.0/24.0/60.0 
     ACR=QAVE*CD*8.34 
   1 CALL DISIPR(ACR,QAVE,CHLCO,COSTES,RSLE,RSST,0) 
     CALL USEREX(18) 
   2 PCR=QMAX*CD*8.34 
     CALL INIT(RR,QQ,10) 
     RETURN 
     END 
     SUBROUTINE DISIIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(5) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CT    ),(QQ(3),CD    ), 
    &(QQ( 4),FNT   ),(QQ( 5),VCT   ),(QQ( 6),ACR   ),(QQ( 7),PCR   ), 
    > (QQ(8),CHLCO),(QQ(9),COSTES),(QQ(10),RSLE) 
     DATA IA/'I'/ 
     DATA LIST/'CONT','CHLO','END ','ESTI','REPL'/ 
     CALL INIT(QQ,RR,10) 
     FNT=1.0 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,4,5,6),I 
   1 CT=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 CD=VALUE(1) 
     GO TO 50 
   4 CALL INIT(RR,QQ,10) 
     RETURN 
   5 CHLCO=VALUE(1) 
     COSTES=VALUE(2) 
     GO TO 50 
   6 RSLE=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE DISIOT (RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),CT    ),(QQ(3),CD    ), 
    &(QQ( 4),FNT   ),(QQ( 5),VCT   ),(QQ( 6),ACR   ),(QQ( 7),PCR   ), 
    > (QQ(8),CHLCO),(QQ(9),COSTES),(QQ(10),RSLE) 
     COMMON /STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,10) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0CHLORINATION') 
     WRITE(6,201)QMAX 
 201 FORMAT('0  MAXIMUM FLOW                      ',E9.3,' MGD') 
     WRITE(6,202)QAVE 
 202 FORMAT('   AVERAGE FLOW                      ',E9.3,' MGD') 
     WRITE(6,203)ID(MODT,1),CT 
 203 FORMAT(' ',A1,' CONTACT TIME                      ',E9.3,' MIN') 
     VPT=VCT/FNT 
     WRITE(6,204)VPT 
 204 FORMAT('   TOTAL VOLUME                      ',E9.3,' GAL') 
     WRITE(6,205)ACR 
 205 FORMAT('   AVERAGE CHLORINE REQUIREMENT      ',E9.3,' LB/DAY') 
     WRITE(6,206)PCR 
 206 FORMAT('   PEAK CHLORINE REQUIREMENT         ',E9.3,' LB/DAY') 
     IF(ACR.LT.2000.0)GO TO 300 
     WRITE(6,301)ACR 
 301 FORMAT(70X,'****NOTE-DUE TO AVE. CHLOR. REQ. OF',F10.2,' LB/DAY'/ 
    <70X,' IT MAY BE ADVANTAGEOUS TO PURCHASE CHLOR. IN TANK CARS' 
    <,'****',/) 
 300 CONTINUE 
     COLIFORM REDUCTION  (SHELLECK,COLLINS & WHITE) 
     ASSUME CHLORINE RESIDUAL = 0.75 MG/L 
     CR=0.75 
     COLIFR=(1.0-(1.0+0.23*CR*CT)**(-3))*100.0 
     WRITE(6,208)COLIFR 
 208 FORMAT('   COLIFORM REDUCTION                ',E9.3,' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL DISIPR(ACR,QAVE,CHLCO,COSTES,RSLE,RSST,1) 
     CALL INIT(RR,QQ,10) 
     RETURN 
     END 
     SUBROUTINE DISIPR(CR,QAVE,CHLCO,XOSTES,RSLE,RSST,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     XHLCO=CHLCO 
     IF(IQU.NE.0)GO TO 678 
     WRITE(6,998)CR,QAVE,CHLCO 
 998 FORMAT(' DISIPR',3E11.5) 
     COSTES=XOSTES 
     NC=CR*30.0/150.0+0.99 
     IF(CR.GT.50.0)NC=CR*30.0/2000.0+0.99 
     IF(NC.LT.2)NC=2 
     BAC=220.0 
     NU=CR/8000.0+0.99 
     IF(NU.LT.1)NU=1 
     IF(CR.GT.2000.0)BAC=360.0*NU 
     AS=16.0*NC 
     IF(CR.GT.50.0)AS=140.0*NC 
     VEW=3700.0*QAVE**0.3782 
     IF(QAVE.GT.3.75)VEW=1870.0*QAVE**0.8873 
     IF(QAVE.GT.100.0)VEW=2021.9*QAVE**0.8873 
     IF(QAVE.GT.200.0)VEW=2116.4*QAVE**0.8873 
     VCW=2000.0*QAVE**0.2545 
     IF(QAVE.GT.3.75)VCW=1100.0*QAVE**0.7108 
     IF(QAVE.GT.100.0)VCW=1344.1*QAVE**0.7108 
     IF(QAVE.GT.200.0)VCW=1511.4*QAVE**0.7108 
     VCS=700.0*QAVE**0.4078 
     IF(QAVE.GT.3.75)VCS=340.0*QAVE**0.9554 
     IF(QAVE.GT.100.0)VCS=350.7*QAVE**0.9554 
     IF(QAVE.GT.200.0)VCS=357.1*QAVE**0.9554 
     CF=1.18 
     CRTPY=CR*365.0/2000.0 
     OMH=100.0*CRTPY**0.5316 
     FMMH=27.0*CRTPY**0.3141 
     IF(CRTPY.GT.10.0)FMMH=18.06*CRTPY**0.4914 
     IF(CRTPY.GT.50.0)FMMH=2.80*CRTPY**0.9682 
     FKWH=118000.0 
     IF(QAVE.GT.5.0)FKWH=83000.0*QAVE**0.1991 
     OMMP=6.255*CR**(-0.0797) 
     IF(CR.GT.300.0)OMMP=15.01*CR**(-0.2332) 
     IF(COSTES.EQ.0.0)COSTES=2700.0*FMSECI/491.60 
     COSTCE=4.33*COSTES 
     IF(CR.GT.50.0)COSTCE=5.93*COSTES 
     IF(CR.GT.500.0)COSTCE=7.15*COSTES 
     IF(CR.GT.1000.0)COSTCE=7.41*COSTES 
     IF(CR.GT.1500.0)COSTCE=11.33*COSTES 
     IF(CR.GT.2000.0)COSTCE=20.26*COSTES 
     IF(CR.GT.8000.0)COSTCE=((CR/8000.0+1.0)*13.48+3.0)*COSTES 
     FICOST=0.30*COSTCE 
     FIEC=COSTCE+FICOST 
     COSTCB=BAC*UPIBC 
     COSTS=AS*UPIBC*0.50 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTCC=(COSTE+COSTCW+COSTCS)*CF 
     CC=FIEC+COSTCB+COSTS+COSTCC 
     CALL AMORT(FIEC,RSLE,RC1) 
     PRIN=COSTCB+COSTS+COSTCC 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=CC*OMMP/100.0 
     IF(XHLCO.EQ.0.0)XHLCO=100.0*ENRCCI/2470.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,8)=XHLCO*CRTPY 
     SUMMDA(NUM,9)=11.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL DISIQU(NU,BAC,NC,AS,QAVE,VEW,VCW,VCS, 
    >CRTPY,OMH,FMMH,FKWH,CR,OMMP) 
     RETURN 
     END 
     SUBROUTINE DISIQU(NU,BAC,NC,AS,QAVG,VEW,VCW,VCS,CRTPY,OMH,FMMH, 
    >FKWH,CR,OMMP) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR CHLORINATION') 
     WRITE(6,2)NU 
2    FORMAT('0NUMBER OF CHLORINATORS AND EVAPORATORS',T45,I9) 
     WRITE(6,3)BAC 
3    FORMAT(' CHLORINATION BUILDING AREA',T45,E9.3,' SQ FT') 
     WRITE(6,4)NC 
4    FORMAT(' NUMBER OF CHLORINE CYLINDERS',T45,I9) 
     WRITE(6,5)AS 
5    FORMAT(' AREA OF CHLORINE STORAGE BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,6)QAVG 
6    FORMAT(' AVERAGE DAILY WASTEWATER FLOW',' MGD',T45,E9.3,' MGD') 
     WRITE(6,7)VEW 
7    FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,8)VCW 
8    FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,9)VCS 
9    FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,10)CRTPY 
10   FORMAT(' CHLORINE REQUIREMENT PER YEAR',T45,E9.3,' TONS/YR') 
     WRITE(6,11)OMH 
11   FORMAT(' OPERATIONAL LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,12)FMMH 
12   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,13)FKWH 
13   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,14)CR 
14   FORMAT(' CHLORINE REQUIREMENT',T45,E9.3,' LBS/DAY') 
     WRITE(6,15)OMMP 
  15 FORMAT(' O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     RETURN 
     END 
     SUBROUTINE DLAREX(FMLVS,QQMAX,XSP,XWS,XEBOD,XESS,VVOLAT,EBODS, 
    <QC,QQAVE,RR,FMLSS) 
     COMMON/XXCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),XEBODS ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,25) 
     SP=XSP 
     XESS=ESS 
     SA=QAVE*1000000.0/SFR 
     ASLR=QAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,62.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(69) 
     GO TO 2 
   3 CALL RECTPR(0,62.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(69) 
   2 WL=QMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     EBOD=EBODS+0.84*FP*ESS*VOLAT/100.0 
     XEBOD=EBOD 
     XWS=WS 
     SETSO=0.0 
     QC=UC 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE DLARIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(13),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','CONS', 
    > 'END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,11,12,13,14,15),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 FP=VALUE(1) 
     GO TO 50 
  11 CALL INIT(RR,QQ,25) 
     RETURN 
  12 COSTES=VALUE(1) 
     GO TO 50 
  13 RECT=1.0 
     GO TO 50 
  14 RECT=0.0 
     GO TO 50 
  15 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE DLAROT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FP    ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR DENITRIFICATION ') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
 110 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,110)SA 
     WRITE(6,120)STARDA 
     IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,62.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,62.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE DRYIEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1),COSTCP(3) 
     EQUIVALENCE (QQ(1),DEPTH ),(QQ(2),DTIME ),(QQ(3),DSOLID), 
    &(QQ( 4),EVAP  ),(QQ( 5),RAIN  ),(QQ( 6),A     ),(QQ( 7),B     ), 
    &(QQ( 8),EN    ),(QQ( 9),FINAL ),(QQ(10),SA    ),(QQ(11),AS    ), 
    & (QQ(12),HTIME),(QQ(13),COSTCP(1)),(QQ(14),COSTCP(2)), 
    & (QQ(15),COSTCP(3)),(QQ(16),COSAND),(QQ(17),COGRVL), 
    & (QQ(18),RSST),(QQ(19),TPD),(QQ(20),RSCP) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,20) 
     EFFEC=A*EVAP-B*RAIN 
     IF(EFFEC.LE.0.0)EFFEC=0.001 
 CALCULATION OF DRYING TIME AND SURFACE AREA 
     HTIME=(30.*DEPTH*PSOLID*(1./DSOLID-1./FINAL)/EFFEC)+DTIME 
     SA=PVOLU*HTIME*12.0/DEPTH/7.48 
     TPY=PVOLU*PSOLID*8.34*365./2000./100. 
   1 TPD=TPY/365.0 
     CALL DRYIPR(SA,TPD,COSTCP,COSAND,COGRVL,RSST,RSCP,0) 
     CALL USEREX(7) 
   2 CONTINUE 
     PVOLU=PSOLID*PVOLU/FINAL 
     PSOLID=FINAL 
     CALL INIT(RR,QQ,20) 
     RETURN 
     END 
     SUBROUTINE DRYIIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(11) 
     DIMENSION RR(1),COSTCP(3) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),DEPTH ),(QQ(2),DTIME ),(QQ(3),DSOLID), 
    &(QQ( 4),EVAP  ),(QQ( 5),RAIN  ),(QQ( 6),A     ),(QQ( 7),B     ), 
    &(QQ( 8),EN    ),(QQ( 9),FINAL ),(QQ(10),SA    ),(QQ(11),AS    ), 
    & (QQ(12),HTIME),(QQ(13),COSTCP(1)),(QQ(14),COSTCP(2)), 
    & (QQ(15),COSTCP(3)),(QQ(16),COSAND),(QQ(17),COGRVL),(QQ(18), 
    & RSST),(QQ(19),TPD),(QQ(20),RSCP) 
     DATA IA/'I'/ 
     DATA LIST/'DEPT','TIME','DRAI','EVAP','RAIN','CORR','FRAC', 
    > 'REPL','FINA','END ','ESTI'/ 
     CALL INIT(QQ,RR,20) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,11 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID-CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11),I 
   1 DEPTH=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
  2  DTIME=VALUE(1) 
     GO TO 50 
  3  DSOLID=VALUE(1) 
     GO TO 50 
  4  EVAP=VALUE(1) 
     GO TO 50 
  5  RAIN=VALUE(1) 
     GO TO 50 
  6  A=VALUE(1) 
     GO TO 50 
  7  B=VALUE(1) 
     GO TO 50 
   8 RSST=VALUE(1) 
     RSCP=VALUE(2) 
     GO TO 50 
  9  FINAL=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
  10 CALL INIT(RR,QQ,20) 
     RETURN 
  11 DO 111 I=1,3 
 111 COSTCP(I)=VALUE(I) 
     COSAND=VALUE(4) 
     COGRVL=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE DRYIOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1),COSTCP(3) 
     EQUIVALENCE (QQ(1),DEPTH ),(QQ(2),DTIME ),(QQ(3),DSOLID), 
    &(QQ( 4),EVAP  ),(QQ( 5),RAIN  ),(QQ( 6),A     ),(QQ( 7),B     ), 
    &(QQ( 8),EN    ),(QQ( 9),FINAL ),(QQ(10),SA    ),(QQ(11),AS    ), 
    & (QQ(12),HTIME),(QQ(13),COSTCP(1)),(QQ(14),COSTCP(2)), 
    & (QQ(15),COSTCP(3)),(QQ(16),COSAND),(QQ(17),COGRVL),(QQ(18), 
    & RSST),(QQ(19),TPD),(QQ(20),RSCP) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     CALL TITLE 
     CALL INIT(QQ,RR,20) 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0SLUDGE DRYING BEDS') 
     WRITE(6,201)SA 
 201 FORMAT('0  TOTAL SURFACE AREA REQUIRED ',E9.3,' SQ FT') 
     WRITE(6,204)ID(MODT,1),DEPTH 
 204 FORMAT(' ',A1,' INITIAL DEPTH OF SLUDGE     ',E9.3,' INCHES') 
     WRITE(6,205)ID(MODT,2),FINAL 
 205 FORMAT(' ',A1,' FINAL PERCENT SOLIDS        ',E9.3) 
     WRITE(6,206)HTIME 
 206 FORMAT('   BED HOLDING TIME            ',E9.3,' DAYS') 
 CALCULATION OF EFFECTIVE EVAPORATION 
     EFFEC=A*EVAP-B*RAIN 
     IF(EFFEC.LE.0.0)WRITE(6,100) 
 100 FORMAT(70X,'****NOTE-EFFECTIVE EVAPORATION TOO LOW FOR DRYING ',/, 
    <79X,'BED TO FUNCTION PROPERLY. ****') 
     WRITE(6,120)STARDA 
     CALL DRYIPR(SA,TPD,COSTCP,COSAND,COGRVL,RSST,RSCP,1) 
     RETURN 
     END 
     SUBROUTINE DRYIPR(SA,TPD,XOSTCP,XOSAND,XOGRVL,RSST,RSCP,IQU) 
     DIMENSION COSTCP(3),SUBCP(3) 
     DIMENSION XOSTCP(3) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DATA SUBCP/2.15,2.75,4.25/ 
     IF(IQU.NE.0)GO TO 678 
     WRITE(6,998)SA,TPD 
 998 FORMAT(' DRYIPR',2E11.5) 
     COSTCP(1)=XOSTCP(1) 
     COSTCP(2)=XOSTCP(2) 
     COSTCP(3)=XOSTCP(3) 
     COSAND=XOSAND 
     COGRVL=XOGRVL 
     N=3.0+(SA-9000.0)/3000.0+0.999 
     IF(N.LT.3)N=3 
     SAN=SA/N 
     FLN=SAN/20.0 
     VEW=(48.0*N*FLN+224.0*N+SQRT(560.0*N**2*FLN**2+4480.0*N**2*FLN))* 
    > 1.33333 
     VCW=5.06*(40.0*N+N*FLN+FLN) 
     VCS=3.0*N*FLN 
     VDS=20.0*N*FLN*0.750 
     VDG=20.0*N*FLN 
     DICLP=4.0 
     IF(FLN.GE.100.0)DICLP=6.0 
     IF(FLN.GT.200.0)DICLP=8.0 
     CPL=2.0*N*FLN 
     OMH=360.0 
     IF(TPD.GT.0.09)OMH=964.0*TPD**0.409 
     IF(TPD.GT.0.80)OMH=1066.4*TPD 
     FMMH=160.0 
     IF(TPD.GT.0.09)FMMH=432.8*TPD**0.409 
     IF(TPD.GT.0.80)FMMH=532.8*TPD 
     OMMP=0.90 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW*0.70 
     COSTCS=VCS/27.0*UPICS*0.60 
     IPIP=DICLP/3.0+0.40 
     IF(COSTCP(IPIP).EQ.0.0)COSTCP(IPIP)=SUBCP(IPIP)*ENRCCI/2470.0 
     CDPS=COSTCP(IPIP)*CPL 
     IF(COSAND.EQ.0.0)COSAND=5.90*ENRCCI/2470.0 
     IF(COGRVL.EQ.0.0)COGRVL=4.30*ENRCCI/2470.0 
     CODBM=COSAND*VDS/27.0+COGRVL*VDG/27.0 
     CODBMU=CODBM+CDPS 
     PRIN=CDPS*CF 
     CALL AMORT(PRIN,RSCP,RC1) 
     CC=CF*(COSTE+COSTCW+COSTCS+CODBMU) 
     PRIN=CC-PRIN 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=87.0 
     RETURN 
 678 IF(KCTL.NE.0)CALL DRYIQU(SA,N,SAN,FLN,VEW,VCW,VCS,VDS,VDG, 
    > DICLP,CPL,TPD,OMH,FMMH) 
     RETURN 
     END 
     SUBROUTINE DRYIQU(SA,N,SAN,FLN,VEW,VCW,VCS,VDS,VDG,DICLP,CPL,TPD, 
    >OMH,FMMH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR DRYING BED') 
     WRITE(6,2)SA 
2    FORMAT('0TOTAL DRYING BED SURFACE AREA',T45,E9.3,' SQ FT') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER BEDS',T45,I9) 
     WRITE(6,4)SAN 
4    FORMAT(' SURFACE AREA OF EACH INDIVIDUAL BED',T45,E9.3,' SQ FT') 
     WRITE(6,5)FLN 
5    FORMAT(' LENGTH OF EACH BED',T45,E9.3,' FEET') 
     WRITE(6,6)VEW 
6    FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,7)VCW 
7    FORMAT(' VOLUME CONCRETE FOR DIVIDING WALL',T45,E9.3,' CU FT') 
     WRITE(6,8)VCS 
8    FORMAT(' VOLUME OF R.C. IN-PLACE FOR TRUCK TRACKS',T45,E9.3,' CU F 
    >T') 
     WRITE(6,9)VDS 
9    FORMAT(' VOLUME OF SAND',T45,E9.3,' CU FT') 
     WRITE(6,10)VDG 
10   FORMAT(' VOLUME OF GRAVEL',T45,E9.3,' CU FT') 
     WRITE(6,11)DICLP 
11   FORMAT(' CLAY PIPE DIAMETER',T45,E9.3,' INCHES') 
     WRITE(6,12)CPL 
12   FORMAT(' TOTAL LENGTH CLAY PIPE',T45,E9.3,' FEET') 
     WRITE(6,13)TPD 
13   FORMAT(' SLUDGE SOLIDS PER DAY',T45,E9.3,' TONS/DAY') 
     WRITE(6,14)OMH 
14   FORMAT(' OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,15)FMMH 
15   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR 
    >') 
     RETURN 
     END 
     SUBROUTINE DUMMEX(RR) 
     DIMENSION RR(1) 
     DIMENSION DUMMDA(22) 
     EQUIVALENCE (QQ(1),DUMMDA(1)),(QQ(23),PWS), 
    <(QQ(24),PUC),(QQ(25),PVOL),(QQ(26),SWS),(QQ(27),SUC), 
    <(QQ(28),SVOL),(QQ(29),CC),(QQ(30),OMH),(QQ(31),FMMH), 
    <(QQ(32),SU),(QQ(33),FKWH),(QQ(34),CHEM),(QQ(35),RSST) 
     COMMON/SSLUCO/SVOLU,SSOLID,SVOLAT 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,XHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/PSLUCO/PVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QUID(22) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,35) 
     DO 1 I=1,22 
     IF(DUMMDA(I).EQ.0.0)GO TO 1 
     IF(I.GT.4.AND.I.NE.11.AND.I.LT.21)GO TO 2 
     QUID(I)=DUMMDA(I) 
     GO TO 1 
   2 QUID(I)=(1.0-DUMMDA(I)/100.0)*QUID(I) 
   1 CONTINUE 
     IF(PWS.EQ.0.0)GO TO 3 
     TOTAL=PWS+PVOL 
     PSOLID=(PVOLU*PSOLID+PWS*PUC)/TOTAL 
     P=(PVOLU*PSOLID*PVOLAT+PWS*PUC*PVOL)/(PVOLU*PSOLID+PWS*PUC) 
     PVOLAT=P 
     PVOLU=TOTAL 
   3 IF(SWS.EQ.0.0)GO TO 4 
     TOTAL=SVOLU+SWS 
     SSOLID=(SVOLU*SSOLID+SWS*SUC)/TOTAL 
     S=(SVOLU*SSOLID*SVOLAT+SWS*SUC*SVOL)/(SVOLU*SSOLID+SWS*SUC) 
     SVOLAT=S 
     SVOLU=TOTAL 
   4 CONTINUE 
     CALL AMORT(CC,RSST,RC1) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH/UPIPC 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=SU 
     SUMMDA(NUM,8)=CHEM 
     SUMMDA(NUM,9)=35.0 
     SUMMDA(NUM,18)=FKWH 
     CALL USEREX(45) 
     CALL INIT(RR,QQ,35) 
     RETURN 
     END 
     SUBROUTINE DUMMIN(RR) 
     DIMENSION LISTW(25) 
     DIMENSION RR(1) 
     DIMENSION DUMMDA(22) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),DUMMDA(1)),(QQ(23),PWS), 
    <(QQ(24),PUC),(QQ(25),PVOL),(QQ(26),SWS),(QQ(27),SUC), 
    <(QQ(28),SVOL),(QQ(29),CC),(QQ(30),OMH),(QQ(31),FMMH), 
    <(QQ(32),SU),(QQ(33),FKWH),(QQ(34),CHEM),(QQ(35),RSST) 
     DATA LISTW/'MINI','AVER','MAXI','TEMP','SUSP','VOLA','BOD5', 
    >'SBOD','COD ','SCOD','PH  ','CATI','ANIO','TKN ','PO4 ','NH3 ', 
    >'SETT','OIL ','NO2 ','NO3 ','END ','PRIM','SECO','COST','REPL'/ 
     CALL INIT(QQ,RR,35) 
     CC=0.0 
     OMH=0.0 
     FMMH=0.0 
     SU=0.0 
     FKWH=0.0 
     CHEM=0.0 
     RSST=40.0 
     DO 1 I=1,22 
   1 DUMMDA(I)=0.0 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,25 
     IF(KTYPE.EQ.LISTW(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  51 FORMAT(A4,A2,74A1) 
  53 IF(I.EQ.21)GO TO 55 
     IF(I.EQ.22)GO TO 60 
     IF(I.EQ.23)GO TO 70 
     IF(I.EQ.24)GO TO 80 
      IF(I.EQ.25)GO TO 85 
     DUMMDA(I)=VALUE(1) 
     IF(I.EQ.2)DUMMDA(22)=VALUE(2) 
     IF(I.EQ.4)DUMMDA(4)=VALUE(2) 
     IF(I.EQ.4)DUMMDA(21)=VALUE(1) 
     GO TO 50 
  60 PWS=VALUE(1) 
     PUC=VALUE(2) 
     PVOL=VALUE(3) 
     GO TO 50 
  70 SWS=VALUE(1) 
     SUC=VALUE(2) 
     SVOL=VALUE(3) 
     GO TO 50 
  80 CC=VALUE(1) 
     OMH=VALUE(2) 
     FMMH=VALUE(3) 
     FKWH=VALUE(4) 
     SU=VALUE(5) 
     CHEM=VALUE(6) 
     GO TO 50 
  55 CALL INIT(RR,QQ,35) 
     RETURN 
  85 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE DUMMOT(RR) 
     DIMENSION DUMMDA(22) 
     COMMON/SSLUCO/SVOLU,SSOLID,SVOLAT 
     COMMON/PSLUCO/PVOLU,PSOLID,PVOLAT 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),DUMMDA(1)),(QQ(23),PWS), 
    <(QQ(24),PUC),(QQ(25),PVOL),(QQ(26),SWS),(QQ(27),SUC), 
    <(QQ(28),SVOL),(QQ(29),CC),(QQ(30),OMH),(QQ(31),FMMH), 
    <(QQ(32),SU),(QQ(33),FKWH),(QQ(34),CHEM),(QQ(35),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,35) 
     CALL TITLE 
     WRITE(6,121)STARDA 
   1 FORMAT('0I MINIMUM FLOW',28X,F10.2,' MGD') 
     WRITE(6,200) 
 200 FORMAT('0','DUMMY PROCESS') 
   2 FORMAT(' I AVERAGE FLOW (FINAL)',20X,F10.2,' MGD') 
 102 FORMAT(' I AVERAGE FLOW (INITIAL)',18X,F10.2,' MGD') 
   3 FORMAT(' I MAXIMUM FLOW',28X,F10.2,' MGD') 
 104 FORMAT(' I TEMPERATURE (SUMMER)',20X,F10.2,' DEG C') 
   4 FORMAT(' I TEMPERATURE (WINTER)',20X,F10.2,' DEG C') 
   5 FORMAT(' I SUSPENDED SOLIDS',24X,F10.2,' % REDUCTION') 
   6 FORMAT(' I VOLATILE SOLIDS',25X,F10.2,' % REDUCTION') 
   7 FORMAT(' I BOD5',36X,F10.2,' % REDUCTION') 
   8 FORMAT(' I BOD5S',35X,F10.2,' % REDUCTION') 
   9 FORMAT(' I COD',37X,F10.2,' % REDUCTION') 
  10 FORMAT(' I CODS',36X,F10.2,' % REDUCTION') 
  11 FORMAT(' I PH',38X,F10.2) 
  12 FORMAT(' I CATIONS',33X,F10.2,' % REDUCTION') 
  13 FORMAT(' I ANIONS',34X,F10.2,' % REDUCTION') 
  14 FORMAT(' I TKN',37X,F10.2,' % REDUCTION') 
  15 FORMAT(' I PO4',37X,F10.2,' % REDUCTION') 
  16 FORMAT(' I NH3',37X,F10.2,' % REDUCTION') 
  17 FORMAT(' I SETTLEABLE SOLIDS',23X,F10.2,' % REDUCTION') 
  18 FORMAT(' I OIL AND GREASE',26X,F10.2,' % REDUCTION') 
  19 FORMAT(' I NO2',37X,F10.2,' % REDUCTION') 
  20 FORMAT(' I NO3',37X,F10.2,' % REDUCTION') 
  21 FORMAT(' I PRIMARY SLUDGE',26X,F10.2,' GAL/DAY') 
  22 FORMAT(' I % SOLIDS',32X,F10.2) 
  23 FORMAT(' I % VOLATILE',30X,F10.2) 
  24 FORMAT(' I SECONDARY SLUDGE',24X,F10.2,' GAL/DAY') 
  25 FORMAT(' I % SOLIDS',32X,F10.2) 
  26 FORMAT(' I % VOLATILE',30X,F10.2) 
     IF(DUMMDA(1).NE.0.0)WRITE(6,1)DUMMDA(1) 
     IF(DUMMDA(2).NE.0.0)WRITE(6,2)DUMMDA(2) 
     IF(DUMMDA(2).NE.0.0)WRITE(6,102)DUMMDA(22) 
     IF(DUMMDA(3).NE.0.0)WRITE(6,3)DUMMDA(3) 
     IF(DUMMDA(21).NE.0.0)WRITE(6,104)DUMMDA(21) 
     IF(DUMMDA(4).NE.0.0)WRITE(6,4)DUMMDA(4) 
     IF(DUMMDA(5).NE.0.0)WRITE(6,5)DUMMDA(5) 
     IF(DUMMDA(6).NE.0.0)WRITE(6,6)DUMMDA(6) 
     IF(DUMMDA(7).NE.0.0)WRITE(6,7)DUMMDA(7) 
     IF(DUMMDA(8).NE.0.0)WRITE(6,8)DUMMDA(8) 
     IF(DUMMDA(9).NE.0.0)WRITE(6,9)DUMMDA(9) 
     IF(DUMMDA(10).NE.0.0)WRITE(6,10)DUMMDA(10) 
     IF(DUMMDA(11).NE.0.0)WRITE(6,11)DUMMDA(11) 
     IF(DUMMDA(12).NE.0.0)WRITE(6,12)DUMMDA(12) 
     IF(DUMMDA(13).NE.0.0)WRITE(6,13)DUMMDA(13) 
     IF(DUMMDA(14).NE.0.0)WRITE(6,14)DUMMDA(14) 
     IF(DUMMDA(15).NE.0.0)WRITE(6,15)DUMMDA(15) 
     IF(DUMMDA(16).NE.0.0)WRITE(6,16)DUMMDA(16) 
     IF(DUMMDA(17).NE.0.0)WRITE(6,17)DUMMDA(17) 
     IF(DUMMDA(18).NE.0.0)WRITE(6,18)DUMMDA(18) 
     IF(DUMMDA(19).NE.0.0)WRITE(6,19)DUMMDA(19) 
     IF(DUMMDA(20).NE.0.0)WRITE(6,20)DUMMDA(20) 
     IF(PWS.EQ.0.0)GO TO 75 
     WRITE(6,21)PWS 
     WRITE(6,22)PUC 
     WRITE(6,23)PVOL 
  75 IF(SWS.EQ.0.0)GO TO 77 
     WRITE(6,24)SWS 
     WRITE(6,25)SUC 
     WRITE(6,26)SVOL 
  77 CONTINUE 
 121 FORMAT('0',19A4) 
     WRITE(6,121)STARDA 
     RETURN 
     END 
     SUBROUTINE EQULEX(RR) 
     DIMENSION HPA(10),FLOWS(24) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),FLOWS(1)),(QQ(25),FMR),(QQ(26),ALPHA), 
    >(QQ(27),BETA  ),(QQ(28),STE   ),(QQ(29),OR    ),(QQ(30),V     ), 
    > (QQ(31),P     ),(QQ(32),T    ),(QQ(33),CL    ),(QQ(34),D     ), 
    > (QQ(35),XOSTSA),(QQ(36),XUPILL),(QQ(37),ITYP  ),(QQ(38),FLOWA ), 
    > (QQ(39),FL    ),(QQ(40),VT    ),(QQ(41),OTE   ),(QQ(42),HP    ), 
    > (QQ(43),DC    ),(QQ(44),DF    ),(QQ(45),VEW   ),(QQ(46),SAL   ), 
    > (QQ(47),VCW   ),(QQ(48),VCS   ),(QQ(49),K     ),(QQ(50),HPT   ), 
    > (QQ(51),HPS   ),(QQ(52),FKWH  ),(QQ(53),OMH   ),(QQ(54),FMMH  ), 
    > (QQ(55),OMMP  ),(QQ(56),NF),(QQ(57),RSSA),(QQ(58),RSST) 
    >,(QQ(59),RSLL) 
     DATA HPA/10.0,15.0,20.0,25.0,30.0,40.0,50.0,60.0,75.0,100.0/ 
     CALL INIT(QQ,RR,59) 
     IF(NF.EQ.0.AND.V.LE.0.0)V=0.20*QAVE*10.0**6 
     FLOWA=QAVE*10.0**6/24.0 
     IF(V.GT.0.0)GO TO 3 
     SUMF=0.0 
  16 DO 1 I=1,NF 
   1 SUMF=SUMF+FLOWS(I) 
     FLOWA=SUMF/NF 
     DO 2 I=1,NF 
     FLOWD=FLOWA-FLOWS(I) 
     IF(FLOWD.GT.0.0)V=V+FLOWD 
   2 CONTINUE 
     V=V*24.0/NF 
   3 IF(ITYP.EQ.1)GO TO 4 
     FL=(SQRT(4.0*V/(D-5.0)/7.48-54.0*(D-5.0)**2+18.0*(D-5.0)**2) 
    >+3.0*(D-5.0))/2.0 
     VT=D*(FL**2-6.0*D*FL+12.0*D**2)*7.48 
     GO TO 5 
   4 FL=SQRT(V/(D-5.0))/2.73 
     VT=FL**2*D*7.48 
   5 HPM=VT*FMR/1000.0 
     O2=OR*VT*8.34/10.0**6 
     CS=14.652-0.41022*T+0.00799*T**2-0.000077774*T**3 
     OTE=STE*(CS*BETA*P-CL)*ALPHA*1.02**(T-20.0)/9.17 
     HPO=O2/OTE 
     HP=HPM 
     IF(HPO.GT.HPM)HP=HPO 
     COD=COD-0.1*BOD5 
     CODS=CODS-0.1*BOD5S 
     IF(COD.LT.BOD5)COD=BOD5 
     IF(CODS.LT.BOD5S)CODS=BOD5S 
     BOD5=0.9*BOD5 
     BOD5S=0.9*BOD5S 
     QAVE=FLOWA*24.0/10.0**6 
     QMAX=QAVE 
     QMIN=QAVE 
     IF(ITYP.EQ.1)GO TO 6 
     DC=1.0 
     NOCNT=0 
   7 FLC=FL-6.0*(D-DC) 
     VC=1.3*DC*(FLC**2-6.0*DC*FLC+12.0*DC**2) 
     FLT=FL+12.0 
     DF=D+2.0-DC 
     VF=4.0*FLT*(DF*10.0+3.0*DF**2) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LE.10.0)GO TO 8 
     DC=DC+PERC/ABS(PERC)*0.1 
     NOCNT=NOCNT+1 
     IF(NOCNT.GT.100)GO TO 8 
     GO TO 7 
   8 VEW=VC 
     SAB=(FL-6.0*D)**2 
     SAE=4.0*FLT*((D+2.0)/0.3159+5.0) 
     SAL=SAB+SAE 
     VCW=0.0 
     VCS=00. 
     GO TO 9 
   6 VEW=(FL+5.5)**2*(D+2.75) 
     SAL=0.0 
     VCW=4.0*FL*(D+2.0)*0.75 
     VCS=FL**2*0.75 
   9 K=2 
  10 HBOK=HP/K 
     IF(HBOK.LE.100.0)GO TO 11 
  15 IF(K.LE.3)K=K-1 
     K=K+2 
     GO TO 10 
  11 DO 12 J=1,10 
     IF(HPA(J).GE.HBOK)GO TO 13 
  12 CONTINUE 
     J=10 
  13 IF(J.EQ.1)GO TO 14 
     IF(HPA(J)*K.LE.1.1*HP)GO TO 14 
     GO TO 15 
  14 HPT=K*HPA(J) 
     HPS=HPA(J) 
     FKWH=HPT*365.0*24.0*0.9*0.85*0.877 
     OMH=500.0*QAVE**0.5129 
     FMMH=380.0*QAVE**0.6781 
     OMMP=4.93*HPT**(-0.1827) 
     CF=1.11 
     IF(ITYP.EQ.1)CF=1.05 
     COSTE=VEW/27.0*UPIEX 
     COSTLL=SAL*XUPILL 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTR=20.7*HPS**0.2686 
     IF(HPS.GT.25.0)COSTR=4.12*HPS**0.7878 
     COSTSA=XOSTSA 
     IF(COSTSA.EQ.0.0)COSTSA=13960.0*FMSECI/491.6 
     COSTA=COSTSA*COSTR*K/100.0 
     FIMH=0.633*HPS+40.0 
     AIC=FIMH*FLABRI*K 
     EMC=0.589*HPS**(-0.1465)*COSTA 
     FIEC=COSTA+AIC+EMC 
     TBCC=(COSTE+COSTLL+FIEC+COSTCW+COSTCS)*CF 
     PRIN=(COSTE+COSTCW+COSTCS)*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=COSTLL*CF 
     CALL AMORT(PRIN,RSLL,RC2) 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSSA,RC3) 
     OMMC=OMMP*FIEC/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=1.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(8) 
     CALL INIT(RR,QQ,59) 
     RETURN 
     END 
     SUBROUTINE EQULIN(RR,ID,MODT) 
     DIMENSION LIST(13) 
     DIMENSION ID(3,1),FLOWS(24) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),FLOWS(1)),(QQ(25),FMR),(QQ(26),ALPHA), 
    >(QQ(27),BETA  ),(QQ(28),STE   ),(QQ(29),OR    ),(QQ(30),V     ), 
    > (QQ(31),P     ),(QQ(32),T    ),(QQ(33),CL    ),(QQ(34),D     ), 
    > (QQ(35),XOSTSA),(QQ(36),XUPILL),(QQ(37),ITYP  ),(QQ(38),FLOWA ), 
    > (QQ(39),FL    ),(QQ(40),VT    ),(QQ(41),OTE   ),(QQ(42),HP    ), 
    > (QQ(43),DC    ),(QQ(44),DF    ),(QQ(45),VEW   ),(QQ(46),SAL   ), 
    > (QQ(47),VCW   ),(QQ(48),VCS   ),(QQ(49),K     ),(QQ(50),HPT   ), 
    > (QQ(51),HPS   ),(QQ(52),FKWH  ),(QQ(53),OMH   ),(QQ(54),FMMH  ), 
    > (QQ(55),OMMP  ),(QQ(56),NF),(QQ(57),RSSA),(QQ(58),RSST) 
    >,(QQ(59),RSLL) 
     DATA LIST/'MECH','OXYG','VOLU','PRES','SUMM','DISS','DEPT', 
    > 'FLOW','ESTI','CONC','EART','END ','REPL'/ 
     DATA IA/'I'/ 
     DATA IBLK/' '/ 
     CALL INIT(QQ,RR,59) 
     NF=0 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
  51 FORMAT(A4,A2,74A1) 
     DO 52 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13),I 
   1 FMR=VALUE(3) 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     STE=VALUE(4) 
     GO TO 50 
   2 OR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 V=VALUE(1)*10.0**6 
     ID(MODT,2)=IA 
     GO TO 50 
   4 P=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   5 T=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   6 CL=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   7 D=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   8 V=0.0 
     ID(MODT,2)=IBLK 
  32 DO 31 J=1,NO 
     NF=NF+1 
  31 FLOWS(NF)=VALUE(J) 
     GO TO 50 
   9 XOSTSA=VALUE(1) 
     GO TO 50 
  10 ITYP=1 
     ID(MODT,7)=IA 
     GO TO 50 
  11 ITYP=0 
     XUPILL=VALUE(1) 
     RSLL=VALUE(2) 
     IF(RSLL.EQ.0.0)RSLL=15.0 
     ID(MODT,7)=IA 
     GO TO 50 
  12 CALL INIT(RR,QQ,59) 
     RETURN 
  13 RSSA=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE EQULOT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1),FLOWS(24) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),FLOWS(1)),(QQ(25),FMR),(QQ(26),ALPHA), 
    >(QQ(27),BETA  ),(QQ(28),STE   ),(QQ(29),OR    ),(QQ(30),V     ), 
    > (QQ(31),P     ),(QQ(32),T    ),(QQ(33),CL    ),(QQ(34),D     ), 
    > (QQ(35),XOSTSA),(QQ(36),XUPILL),(QQ(37),ITYP  ),(QQ(38),FLOWA ), 
    > (QQ(39),FL    ),(QQ(40),VT    ),(QQ(41),OTE   ),(QQ(42),HP    ), 
    > (QQ(43),DC    ),(QQ(44),DF    ),(QQ(45),VEW   ),(QQ(46),SAL   ), 
    > (QQ(47),VCW   ),(QQ(48),VCS   ),(QQ(49),K     ),(QQ(50),HPT   ), 
    > (QQ(51),HPS   ),(QQ(52),FKWH  ),(QQ(53),OMH   ),(QQ(54),FMMH  ), 
    > (QQ(55),OMMP  ),(QQ(56),NF),(QQ(57),RSSA),(QQ(58),RSST) 
    >,(QQ(59),RSLL) 
     COMMON/STARCO/STARDA(19) 
     CALL TITLE 
     CALL INIT(QQ,RR,59) 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
  50 FORMAT('0EQUALIZATION') 
  51 FORMAT('0',A1,' EARTHEN BASIN') 
  52 FORMAT('0',A1,' CONCRETE BASIN') 
 551 FORMAT('0','  EARTHEN EQUALIZATION BASIN') 
 552 FORMAT('0','  CONCRETE EQUALIZATION BASIN') 
 101 FORMAT(' ',A1,' OXYGEN REQUIREMENT',T45,E9.3,' MG/L/HR') 
 102 FORMAT(' ',A1,' EFFECTIVE STORAGE VOLUME',T45,E9.3,' GALS') 
 103 FORMAT(' ',A1,' CORRECTION FOR PRESSURE',T45,E9.3) 
 104 FORMAT(' ',A1,' SUMMER TEMPERATURE',T45,E9.3,' DEG C') 
 105 FORMAT(' ',A1,' MINIMUM DISSOLVED OXYGEN IN TANK',T45,E9.3, 
    > ' MG/L') 
 106 FORMAT(' ',A1,' DEPTH OF BASIN',T45,E9.3,' FEET') 
 107 FORMAT('   AVERAGE HOURLY FLOW',T45,E9.3,' GAL/HOUR') 
 108 FORMAT('   LENGTH OF BASIN',T45,E9.3,' FEET') 
 109 FORMAT('   WIDTH OF BASIN',T45,E9.3,' FEET') 
 110 FORMAT('   TOTAL VOLUME OF WATER IN BASIN',T45,E9.3,' GALLONS') 
 111 FORMAT('   OPERATING TRANSFER EFFICIENCY',T45,E9.3,' LB O2/HP/HR') 
 112 FORMAT('   HORSEPOWER REQUIRED FOR AERATORS',T45,E9.3,' HP') 
 113 FORMAT('0QUANTITIES FOR EQUALIZATION') 
 114 FORMAT('   DEPTH OF CUT',T45,E9.3,' FEET') 
 115 FORMAT('   DEPTH OF FILL',T45,E9.3,' FEET') 
 116 FORMAT('   VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
 117 FORMAT('   SURFACE AREA OF LINER REQUIRED',T45,E9.3,' SQ FT') 
 118 FORMAT('   VOLUME OF REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
 119 FORMAT('   VOLUME OF REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
 220 FORMAT('   NUMBER OF AERATORS PER BASIN',T45,I9) 
 121 FORMAT('   HORSEPOWER OF SELECTED AERATOR',T45,E9.3,' HP') 
 122 FORMAT('   TOTAL INSTALLED HORSEPOWER',T45,E9.3,' HP') 
 123 FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 124 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
 125 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
 126 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,50) 
     IF(ITYP.EQ.0)WRITE(6,51)ID(MODT,7) 
     IF(ITYP.EQ.1)WRITE(6,52)ID(MODT,7) 
     WRITE(6,101)ID(MODT,1),OR 
     WRITE(6,102)ID(MODT,2),V 
     IF(NF.GT.0)WRITE(6,203)NF 
 203 FORMAT('   VOLUME OF BASIN CALCULATED USING',I4,' FLOWS') 
     WRITE(6,103)ID(MODT,3),P 
     WRITE(6,104)ID(MODT,4),T 
     WRITE(6,105)ID(MODT,5),CL 
     WRITE(6,106)ID(MODT,6),D 
     WRITE(6,107)FLOWA 
     WRITE(6,108)FL 
     WRITE(6,109)FL 
     WRITE(6,110)VT 
     WRITE(6,111)OTE 
     WRITE(6,112)HP 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,113) 
     IF(ITYP.EQ.0)WRITE(6,551) 
     IF(ITYP.EQ.1)WRITE(6,552) 
     WRITE(6,114)DC 
     WRITE(6,115)DF 
     WRITE(6,116)VEW 
     IF(SAL.NE.0.0)WRITE(6,117)SAL 
     IF(VCS.NE.0.0)WRITE(6,118)VCS 
     IF(VCW.NE.0.0)WRITE(6,119)VCW 
     WRITE(6,220)K 
     WRITE(6,121)HPS 
     WRITE(6,122)HPT 
     WRITE(6,123)FKWH 
     WRITE(6,124)OMH 
     WRITE(6,125)FMMH 
     WRITE(6,126)OMMP 
     RETURN 
     END 
     SUBROUTINE EXTEEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),AO    ),(QQ(25),ALPHA ),(QQ(26),BETA  ),(QQ(27),TYPE  ), 
    &(QQ(28),STE   ),(QQ(29),OTE   ),(QQ(30),HP    ),(QQ(31),AF    ), 
    &(QQ(32),HPR   ),(QQ(33),AFR   ) 
    >,(QQ(34),SSXSA),(QQ(35),COSTPD),(QQ(36),COSTPH),(QQ(37),COSTPS) 
    >,(QQ(38),RSSA),(QQ(39),RSPD),(QQ(40),RSPH),(QQ(41),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,41) 
     QQQ=1.5*QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.00,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(25) 
   2 AT=24.0*BOD5/FMLVS/FOM 
     NUM=NUM-2 
     VOL=AO*(BOD5-EBODS)*QAVE/FMLVS/FP/B 
     AT2=VOL/QAVE*24.0 
     IF(AT2.GT.AT)AT=AT2 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
    <+0.6*4.57*TKN*8.34*QAVE 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     IF(OBOD.LT.1.5)OREQ=1.5*BOD5*QAVE*8.34 
     SVOLAT=VOLAT*SOLIDS/100.0 
     QNDF=FNDF/100.0 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <-QAVE*20.0*8.34+QAVE*8.34*QNDF*SVOLAT+QAVE*8.34*(SOLIDS-SVOLAT) 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.2)SP=0.2*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000000.0/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     OAG=0.0 
     SETSO=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.4*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     ANO3=TKN 
     ANO2=0.0 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,18.0,0,RSSA,RSST) 
     CALL USEREX(25) 
     GO TO 4 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,18.0,0,RSPD,RSPH, 
    >RSST) 
     CALL USEREX(25) 
   4 CALL INIT(RR,QQ,41) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE EXTEIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(10) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),AO    ),(QQ(25),ALPHA ),(QQ(26),BETA  ),(QQ(27),TYPE  ), 
    &(QQ(28),STE   ),(QQ(29),OTE   ),(QQ(30),HP    ),(QQ(31),AF    ), 
    &(QQ(32),HPR   ),(QQ(33),AFR   ) 
    >,(QQ(34),SSXSA),(QQ(35),COSTPD),(QQ(36),COSTPH),(QQ(37),COSTPS) 
    >,(QQ(38),RSSA),(QQ(39),RSPD),(QQ(40),RSPH),(QQ(41),RSPS) 
     DATA IA/'I'/ 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ','MECH','DIFF', 
    >'ESTI','REPL'/ 
     CALL INIT(QQ,RR,41) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     FNDF=VALUE(6) 
     FP=VALUE(7) 
     DO 920 I=1,7 
 920 ID(MODT,I)=IA 
     AO=VALUE(8) 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,9)=IA 
     ID(MODT,10)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,41) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE EXTEOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),AO    ),(QQ(25),ALPHA ),(QQ(26),BETA  ),(QQ(27),TYPE  ), 
    &(QQ(28),STE   ),(QQ(29),OTE   ),(QQ(30),HP    ),(QQ(31),AF    ), 
    &(QQ(32),HPR   ),(QQ(33),AFR   ) 
    >,(QQ(34),SSXSA),(QQ(35),COSTPD),(QQ(36),COSTPH),(QQ(37),COSTPS) 
    >,(QQ(38),RSSA),(QQ(39),RSPD),(QQ(40),RSPH),(QQ(41),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,41) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0EXTENDED AERATION ACTIVATED SLUDGE') 
     WRITE(6,201)ID(MODT,1),FK 
 201 FORMAT('0',A1,' REACTION RATE CONSTANT            ',E9.3,' L/MG-H' 
    >) 
     WRITE(6,202)ID(MODT,2),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,5),BP 
     WRITE(6,204)ID(MODT,3),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,4),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,6),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,9),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,10),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/MCUFT') 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,18.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,18.0,1,RSPD,RSPH, 
    >RSST) 
   4 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE FBINEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),HPD),(QQ(2),FC),(QQ(3),FH),(QQ(4),FOX), 
    >(QQ(5),FS),(QQ(6),T2),(QQ(7),T1),(QQ(8),DT),(QQ(9),RSS), 
    >(QQ(10),GAMMA),(QQ(11),SC),(QQ(12),SH),(QQ(13),SOX),(QQ(14),SS), 
    >(QQ(15),PDSPD),(QQ(16),DSLR),(QQ(17),BS),(QQ(18),SL), 
    >(QQ(19),A),(QQ(20),D),(QQ(21),BR),(QQ(22),HIR),(QQ(23),HIS), 
    >(QQ(24),AFS),(QQ(25),FO),(QQ(26),COSOIL),(QQ(27),Q2),(QQ(28),Q), 
    >(QQ(29),QT),(QQ(30),ASR),(QQ(31),APHS),(QQ(32),VOL),(QQ(33),H), 
    >(QQ(34),HR),(QQ(35),FL),(QQ(36),VJ),(QQ(37),HV) 
    >,(QQ(38),DPW),(QQ(39),EPC),(QQ(40),COSTES),(QQ(41),RSST) 
    >,(QQ(42),RSFI) 
     CALL INIT(QQ,RR,42) 
     PDSPD=PVOLU*8.34*PSOLID/100.0*1.05*7.0/DPW 
     DSLR=PDSPD/HPD 
     BS=1.45*SC+6.20*(SH-SOX/7.94)+0.45*SS 
     SLDMOS=100.0-PSOLID 
     SL=10.0**(2.7-0.0222*SLDMOS) 
     A=DSLR/SL 
     D=SQRT(4.0*A/3.1416) 
     BR=10.0**(5.947-0.0096*SLDMOS) 
     HIR=BR*A 
     HIS=BS*DSLR 
     AFS=HIR-HIS 
     FO=AFS/HV 
     Q1=0.0127*DSLR*(2.67*SC+7.94*SH+SS-SOX) 
     Q2=0.0127*FO*(2.67*FC+7.94*FH+FS-FOX) 
     Q=Q1+Q2 
     QT=Q+DSLR/(100.0-SLDMOS)*SLDMOS/3.01 
     ASR=4.50*Q/DSLR 
     APHS=0.24*ASR*(T2-T1)*DSLR 
     VOL=QT*DT/60.0 
     H=VOL/A 
     HR=HIR/VOL 
     FL=12.0*DSLR*RSS/GAMMA/A 
     VJ=160.0+160.0*ALOG10(FL) 
     COR=2.12*DSLR*PVOLAT+100000.0 
     APHC=2.9*APHS 
     EC=COR+APHC 
     CI=EC/10.0 
     CEF=(EC+CI)/10.0 
     TSC=EC+CI+CEF 
     CFO=(HIR-APHS)*HPD*DPW*52.0/10.0**6 
     PVSH=DSLR*PVOLAT/100.0 
     OHP=9.5-0.00775*PVSH+0.0001004*PVSH**2 
     CP=OHP*EPC*0.746*HPD*DPW*52.0 
     CLH=0.25*HPD*DPW*52.0 
     CLMH=HPD*DPW*52.0/8.0 
     CLMAH=HPD*DPW*52.0/150.0 
     CER=DPW*52.0 
     DOLT=CFO+CP+CER 
     HORT=CLH+CLMH+CLMAH 
     PVOLU=00.0 
     PSOLID=0.00 
     PVOLAT=0.0 
   1 CALL FBINPR(D,A,PDSPD,HPD,COSTES,RSFI,RSST,0,COSOIL,FO,DPW) 
     CALL USEREX(64) 
   2 CALL INIT(RR,QQ,42) 
     RETURN 
     END 
     SUBROUTINE FBININ(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DATA IA/'I'/ 
     DIMENSION RR(1),LIST(14) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),HPD),(QQ(2),FC),(QQ(3),FH),(QQ(4),FOX), 
    >(QQ(5),FS),(QQ(6),T2),(QQ(7),T1),(QQ(8),DT),(QQ(9),RSS), 
    >(QQ(10),GAMMA),(QQ(11),SC),(QQ(12),SH),(QQ(13),SOX),(QQ(14),SS), 
    >(QQ(15),PDSPD),(QQ(16),DSLR),(QQ(17),BS),(QQ(18),SL), 
    >(QQ(19),A),(QQ(20),D),(QQ(21),BR),(QQ(22),HIR),(QQ(23),HIS), 
    >(QQ(24),AFS),(QQ(25),FO),(QQ(26),COSOIL),(QQ(27),Q2),(QQ(28),Q), 
    >(QQ(29),QT),(QQ(30),ASR),(QQ(31),APHS),(QQ(32),VOL),(QQ(33),H), 
    >(QQ(34),HR),(QQ(35),FL),(QQ(36),VJ),(QQ(37),HV),(QQ(38),DPW), 
    >(QQ(39),EPC),(QQ(40),COSTES),(QQ(41),RSST),(QQ(42),RSFI) 
     DATA LIST/'HOUR','SLUD','FUEL','HEAT','OPER','AMBI','SAND','SPEC', 
    > 'DETE','END ','DAYS','ELEC','ESTI','REPL'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,42) 
  50 READ(5,101)IDENT,IXX,KLM 
     CALL SCAN(NO,VALUE,74,KLM) 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     DO 51 I=1,14 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14),I 
   1 HPD=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 SC=VALUE(1) 
     SH=VALUE(2) 
     SOX=VALUE(3) 
     SS=VALUE(4) 
     ID(MODT,3)=IA 
     GO TO 50 
   3 FC=VALUE(1) 
     FH=VALUE(2) 
     FOX=VALUE(3) 
     FS=VALUE(4) 
     ID(MODT,4)=IA 
     GO TO 50 
   4 HV=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   5 T2=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   6 T1=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   7 RSS=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   8 GAMMA=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   9 DT=VALUE(1) 
     ID(MODT,10)=IA 
     GO TO 50 
  10 CALL INIT(RR,QQ,42) 
     RETURN 
  11 DPW=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
  12 EPC=VALUE(1) 
     GO TO 50 
  13 COSTES=VALUE(1) 
     COSOIL=VALUE(2) 
     GO TO 50 
  14 RSFI=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE FBINOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),HPD),(QQ(2),FC),(QQ(3),FH),(QQ(4),FOX), 
    >(QQ(5),FS),(QQ(6),T2),(QQ(7),T1),(QQ(8),DT),(QQ(9),RSS), 
    >(QQ(10),GAMMA),(QQ(11),SC),(QQ(12),SH),(QQ(13),SOX),(QQ(14),SS), 
    >(QQ(15),PDSPD),(QQ(16),DSLR),(QQ(17),BS),(QQ(18),SL), 
    >(QQ(19),A),(QQ(20),D),(QQ(21),BR),(QQ(22),HIR),(QQ(23),HIS), 
    >(QQ(24),AFS),(QQ(25),FO),(QQ(26),COSOIL),(QQ(27),Q2),(QQ(28),Q), 
    >(QQ(29),QT),(QQ(30),ASR),(QQ(31),APHS),(QQ(32),VOL),(QQ(33),H), 
    >(QQ(34),HR),(QQ(35),FL),(QQ(36),VJ),(QQ(37),HV) 
    >,(QQ(38),DPW),(QQ(39),EPC),(QQ(40),COSTES),(QQ(41),RSST) 
    >,(QQ(42),RSFI) 
     CALL INIT(QQ,RR,42) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0FLUIDIZED BED INCINERATION') 
 101 FORMAT('   DRY SLUDGE LOADING RATE          ',E9.3,' LB/HR') 
 102 FORMAT('   SLUDGE HEAT VALUE                ',E9.3,' BTU/LB') 
 103 FORMAT('   SLUDGE LOADING RATE              ',E9.3,' LB/SQFT-HR') 
 104 FORMAT('   AREA OF INCINERATOR              ',E9.3,' SQ FT') 
 105 FORMAT('   DIAMETER OF INCINERATOR          ',E9.3,' FEET') 
 106 FORMAT('   BURNING RATE                     ',E9.3,' BTU/SQFT-HR') 
 107 FORMAT('   TOTAL HEAT INPUT RATE            ',E9.3,' BTU/HR') 
 108 FORMAT('   HEAT INPUT FROM SLUDGE           ',E9.3,' BTU/HR') 
 109 FORMAT('   AUXILIARY FUEL SUPPLY            ',E9.3,' BTU/HR') 
 110 FORMAT('   FUEL OIL REQUIRED                ',E9.3,' LB/HR') 
 111 FORMAT('   TOTAL DRY AIR SUPPLY             ',E9.3,' SCFM') 
 112 FORMAT('   TOTAL GAS FLOW                   'E9.3,' SCFM') 
 113 FORMAT('   AIR PREHEATER CAPACITY           ',E9.3,' BTU/HR') 
 114 FORMAT('   VOLUME OF REACTOR                ',E9.3,' CU FT') 
 115 FORMAT('   HEIGHT OF REACTOR                ',E9.3,' FEET') 
 116 FORMAT('   HEAT RELEASE RATE                ',E9.3,' BTU/CUFT-HR') 
 117 FORMAT('   DEPTH OF SAND                    ',E9.3,' INCHES') 
 118 FORMAT('   GRID JET VELOCITY                ',E9.3,' FPS') 
 201 FORMAT('0',A1,' DAYS PER WEEK OPERATION',T37,E9.3,' DAYS') 
 202 FORMAT(' ',A1,' HOURS PER DAY OPERATION',T37,E9.3,' HOURS') 
 203 FORMAT(' ',A1,' SLUDGE ANALYSIS') 
 204 FORMAT(' ',6X,'CARBON CONTENT',T37,E9.3,' PERCENT'/' ',6X, 
    > 'HYDROGEN CONTENT',T37,E9.3,' PERCENT'/' ',6X, 
    > 'OXYGEN CONTENT',T37,E9.3,' PERCENT'/' ',6X, 
    > 'SULFUR CONTENT',T37,E9.3,' PERCENT') 
 205 FORMAT(' ',A1,' FUEL ANALYSIS') 
 206 FORMAT(' ',A1,' HEAT VALUE OF FUEL',T37,E9.3,' BTU/LB') 
 207 FORMAT(' ',A1,' OPERATING TEMPERATURE',T37,E9.3,' DEG F') 
 208 FORMAT(' ',A1,' AMBIENT TEMPERATURE',T37,E9.3,' DEG F') 
 209 FORMAT(' ',A1,' SAND TO SLUDGE RATIO',T37,E9.3) 
 210 FORMAT(' ',A1,' SPECIFIC WEIGHT OF SAND',T37,E9.3,' LB/CUFT') 
 211 FORMAT(' ',A1,' DETENTION TIME',T37,E9.3,' SECONDS') 
     WRITE(6,201)ID(MODT,1),DPW 
     WRITE(6,202)ID(MODT,2),HPD 
     WRITE(6,203)ID(MODT,3) 
     WRITE(6,204)SC,SH,SOX,SS 
     WRITE(6,205)ID(MODT,4) 
     WRITE(6,204)FC,FH,FOX,FS 
     WRITE(6,206)ID(MODT,5),HV 
     WRITE(6,207)ID(MODT,6),T2 
     WRITE(6,208)ID(MODT,7),T1 
     WRITE(6,209)ID(MODT,8),RSS 
     WRITE(6,210)ID(MODT,9),GAMMA 
     WRITE(6,211)ID(MODT,10),DT 
     WRITE(6,101)DSLR 
     WRITE(6,102)BS 
     WRITE(6,103)SL 
     WRITE(6,104)A 
     WRITE(6,105)D 
     WRITE(6,115)H 
     IF(H/D.LT.4.0)WRITE(6,215) 
 215 FORMAT(70X,'****NOTE-H/D RATIO LESS THAN 4.0 -'/ 
    > 78X,' INCREASE DETENTION TIME') 
     IF(H/D.GT.6.0)WRITE(6,216) 
 216 FORMAT(70X,' ****NOTE-H/D RATIO GREATER THAN 6.0 - '/ 
    > 78X,' DECREASE DETENTION TIME') 
     WRITE(6,106)BR 
     WRITE(6,107)HIR 
     WRITE(6,108)HIS 
     WRITE(6,109)AFS 
     WRITE(6,110)FO 
     WRITE(6,111)Q 
     WRITE(6,112)QT 
     WRITE(6,113)APHS 
     WRITE(6,114)VOL 
     WRITE(6,116)HR 
     WRITE(6,117)FL 
     WRITE(6,118)VJ 
     WRITE(6,121)STARDA 
     CALL FBINPR(DIA,AREA,PDSPD,HPD,COSTES,RSFI,RSST,1, 
    >COSOIL,FO,DPW) 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE FBINPR(DIA,AREA,PDSPD,HPD,XOSTES,RSFI,RSST,IQU,XOSOIL, 
    >FO,DPW) 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.EQ.1)GO TO 678 
     N=1 
     COSTES=XOSTES 
     FNUM=90.0 
     COSOIL=XOSOIL 
     ND=DIA+0.99 
     D=ND 
     IF(D.LT.6.0)D=6.0 
     IF(D.LE.25.0)GO TO 1 
     N=AREA/490.0+0.99 
     IF(N.LT.1)N=1 
     ND=1.273*SQRT(AREA/N)+0.99 
     D=ND 
   1 AB=(2140.0+28.0*D)*N 
     IF(D.GT.13.0)AB=(1665.0+90.0*D)*N 
     IF(D.GT.16.0)AB=(2390.0+40.3*D)*N 
     VCS=AB*1.5 
     FMMH=38.34*PDSPD**0.3653 
     IF(PDSPD.GT.5400.0)FMMH=6.02*PDSPD**0.5783 
     IF(PDSPD.GT.44000.0)FMMH=0.194*PDSPD**0.9021 
     OMH=62.4*PDSPD**0.4014 
     IF(PDSPD.GT.6200.0)OMH=17.968*PDSPD**0.5483 
     IF(PDSPD.GT.46000.0)OMH=0.24*PDSPD**0.9431 
     HP=1.165*D**1.9115 
     FKWH=N*260.0*0.85*HPD*HP 
     OMMP=0.45 
     IF(COSTES.EQ.0.0)COSTES=1100000.0*FMSECI/491.6 
     COSTCE=0.122*D**0.7788*COSTES 
     IF(N.GT.1)COSTCE=COSTCE*0.9*N 
     COSTCS=VCS*UPICS/27.0 
     COSTIB=AB*UPIBC 
     CC=COSTCE+COSTCS+COSTIB 
     PRIN=COSTCS+COSTIB 
     CALL AMORT(PRIN,RSST,RC1) 
     CALL AMORT(COSTCE,RSFI,RC2) 
     IF(XOSOIL.EQ.0.0)COSOIL=0.75*ENRCCI/2470.0 
     OILC=FO*DPW*HPD*52.0*COSOIL/6.0 
     OMMC=CC*OMMP/100.0+OILC 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC+OILC 
     XAREA=AREA 
     XDIA=DIA 
     RETURN 
 678 IF(KCTL.EQ.1)CALL FBINQU(XAREA,N,XDIA,AB,VCS,PDSPD,FMMH, 
    >OMH,HP,HPD,FKWH) 
     RETURN 
     END 
     SUBROUTINE FBINQU(A,N,D,AB,VCS,PDSPD,FMMH,OMH,HP,HPD,FKWH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR FLUIDIZED BED INCINERATION ') 
     WRITE(6,2)A 
2    FORMAT('0AREA OF INCINERATION',T45,E9.3,' SQ FT') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER OF INCINERATORS',T45,I9) 
     WRITE(6,4)D 
4    FORMAT(' DIAMETER OF INCINERATOR',T45,E9.3,' FEET') 
     WRITE(6,5)AB 
5    FORMAT(' AREA OF INCINERATOR BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,6)VCS 
6    FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,7)PDSPD 
7    FORMAT(' DRY SLUDGE PRODUCED PER DAY',T45,E9.3,' LBS/DAY') 
     WRITE(6,8)FMMH 
8    FORMAT(' MAINTENANCE AND MATERIAL MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,9)OMH 
9    FORMAT(' OPERATION AND MAINTENANCE MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,10)HP 
10   FORMAT(' OPERATING HORSEPOWER REQUIRED',T45,E9.3,' HP') 
     WRITE(6,11)HPD 
11   FORMAT(' WORK SCHEDULE',T45,E9.3,' HRS/DAY') 
     WRITE(6,12)FKWH 
12   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE FIGURE(TAB) 
     DIMENSION LSTRQ(66),LSTRS(15) 
     DIMENSION KOST(7),LISS(15),LISQ(66),LISS2(15),LISQ2(66) 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     DIMENSION TAB(5) 
     COMMON/STESPE/FOUN,EFPU,EFOT,EFDI,FMOB,SITE,ELEC,FIAC,FMYRP, 
    >PUMP,FLABM,GRAV 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP, 
    > ILABM,IGRAV 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3, 
    <TEMS,QAVEIX 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4) 
     DATA LSTRQ/5*' ',5*'*',16*' ',3*' ',8*' ',2*'*',' ',2*'*',18*' ', 
    > '*',5*' '/ 
     DATA LSTRS/10*' ',3*'*',2*' '/ 
     DATA IBLK/' '/ 
     DATA LISQ/'EQUA'  ,'FLOT'  ,'FILT'  ,'MIC '  , 
    > 'CARB','COUN','CROS','CATI','ANIO','NEUT', 
    > 'CHLO','TRIC','COMP','STEP','PLUG','HIGH', 
    > 'PURE','EXTE','CONT','LAGO','AER ','SLU ','OXID', 
    > 'NITR','SECO','PRIM','XXXX','SCRE','WSH ','RCY ', 
    > 'A SE','N SE','T SE','DENI','DUMM','POST','RBC ', 
    > 'RECA','FLOC','L PR','TWO ','SEC ', 
    > 'OVER','RAPI','SLOW','SEP ','ACT ','INT ','P SE', 
    > 'O SE','MECH','DIFF','INT ','R SE','LIME','ALUM','IRON','POLY', 
    > 'BLOW','COAG','PREL','D SE','ATT ','N RB','N TR','RAW '/ 
     DATA LISS/'AIR ','AERO','ANAE','GRAV','VACU','CENT','DRY ', 
    > 'HAUL','MH I','FLUD','FIL ','BELT','WET ','SLUD','USER'/ 
     DATA LISS2/'FLOT',' DIG',' DIG',' THC',' FIL','RIFU','BEDS', 
    > ' &LF','NCIN',' BED','PRES',' FIL','OXID',' LAG',' PRO'/ 
     DATA LISQ2/'LIZA','ATIO','RATI','SCRN',' ADS',' FLO',' FLO', 
    > 'ON X','N EX','RALI','RINA',' FIL',' MIX',' AER',' FLO',' RAT', 
    > ' OXY',' AER',' STA','ONS ','LAGO','PUMP',' DIT','IFIC',' CLA', 
    > ' CLA',' REM','ENS ','PUMP','PUMP','C CL','C CL','C CL','TRIF', 
    > 'Y   ',' AER','    ','RBON','CULA','M CL','ST L','STAG', 
    > 'LAND','D IN',' INF','TANK','SLUD','FLTR','C CL','C CL', 
    > ' AIR',' AIR','PUMP','C CL',4*' F/S','ERS ',' F/C','IMIN', 
    > 'C CL','DENI','C   ',' FLT','PUMP'/ 
     COMMON/COSTS/CAPCOS,OPMCOS,AMRCOS,RATE,NOPER,WAGE 
     R=RATE/100.0 
     SN=((1.0+R)**NOPER-1.0)/R 
     CRF=1.0/SN+R 
     PWF=SN/(1.0+R)**NOPER 
     SUMMH=0.0 
     SUMAMR=0.0 
     SUMOH=0.0 
     SUMEL=0.0 
     SUMPW=0.0 
     TOMMC=0.0 
     SUMLM=0.0 
     SUMAL=0.0 
     SUMIR=0.0 
     SUMPL=0.0 
     SUMCC=0.0 
     COSTCT=0.0 
     DO 1 I=1,NUM 
     SUMCC=SUMCC+SUMMDA(I,1) 
     SUMOH=SUMOH+SUMMDA(I,2) 
     SUMMH=SUMMH+SUMMDA(I,3) 
     SUMEL=SUMEL+SUMMDA(I,4) 
     SUMPW=SUMPW+SUMMDA(I,18) 
     SUMAMR=SUMAMR+SUMMDA(I,5) 
     TOMMC=TOMMC+SUMMDA(I,6) 
     COSTCT=COSTCT+SUMMDA(I,8) 
     SUMLM=SUMLM+SUMMDA(I,14) 
     SUMAL=SUMAL+SUMMDA(I,15) 
     SUMIR=SUMIR+SUMMDA(I,16) 
     SUMPL=SUMPL+SUMMDA(I,17) 
   1 CONTINUE 
     EPC=UPIPC*SUMEL 
     TAB(5)=SUMPW 
     SALM=0.388*SUMMH**0.085*SALOP 
     SALO=0.97*SALOP 
     COSTM=SALM*SUMMH 
     COSTO=SALO*SUMOH 
     AMH=348.7*QAVE**0.7829 
     SALA=20.92/AMH**0.3210*SALOP 
     COSTA=SALA*AMH 
     FLMH=2450.0*QAVE**0.1515 
     IF(QAVE.GT.20.0)FLMH=1062.0*QAVE**0.4426 
     SALL=1.1*SALOP 
     COSTL=SALL*FLMH 
     TOMLC=COSTA+COSTL+COSTM+COSTO 
     COSTCT=SUMLM*CHEM(1)+SUMAL*CHEM(2)+SUMIR*CHEM(3)+SUMPL*CHEM(4) 
     AOMC=EPC+TOMLC+TOMMC+COSTCT 
     SUMC=SUMCC 
     SUMO=AOMC 
     SUMA=AOMC+SUMAMR 
     IF(IPRT.EQ.1)WRITE(6,5) 
   5 FORMAT('0',32X,'COST SUMMARY'/ 
    > '0',33X,'OPER',5X,'MAINT',42X,'TOTAL'/ 
    > ' ',12X,'CAPITAL    AMMORT    LABOR    LABOR      POWER', 
    > '    MATERIAL    CHEMICAL',7X,'O & M'/ 
    > '   UNIT       COST        COST',2(5X,'COST'),7X,'COST', 
    > 3(8X,'COST')/ 
    > ' ',15X,'$',8X,'$/YR',2(5X,'$/YR'),2(7X,'$/YR'),2(8X,' $/YR')) 
   6 FORMAT(' ',2A4,A1,I10,I10,2I9,I11,3I12) 
 400 FORMAT('0DIRECT COSTS') 
 401 FORMAT('  MOBILIZATION',T30,I10,' $') 
 402 FORMAT('  CLEAR & GRUB & AND SITE PREP',T30,I10,' $') 
 403 FORMAT('  SITE ELECTRICAL',T30,I10,' $') 
 404 FORMAT('  YARD PIPING',T30,I10,' $') 
 405 FORMAT('  LAB & MAINT & ADMIN BLDG',T30,I10,' $') 
 406 FORMAT('  RAW WASTE PUMPING',T30,I10,' $') 
 407 FORMAT('  SPECIAL FOUNDATIONS',T30,I10,' $') 
 408 FORMAT('  CONTROL AND INSTRUMENT',T30,I10,' $') 
 409 FORMAT('  EFFLUENT PUMPING',T30,I10,' $') 
 410 FORMAT('  EFFLUENT OUTFALL',T30,I10,' $') 
 411 FORMAT('  EFFLUENT DIFFUSION',T30,I10,' $') 
 413 FORMAT('0LAND COSTS',T30,I10,' $',5X,'(',F6.0,' ACRES)') 
 414 FORMAT('0   SUB TOTAL (INDIRECT)',T30,I10,' $') 
 415 FORMAT('   GRAVITY OUTFALL',T30,I10,' $') 
4151 FORMAT('   OCEAN OUTFALL',T30,I10,' $') 
6414 FORMAT('0   SUB TOTAL (OTHER DIRECT)',T30,I10,' $',10X, 
    >'TOTAL CONSTRUCTION COST',I10,' $') 
 500 FORMAT('0INDIRECT COSTS') 
 501 FORMAT('  MISC NON CONST COSTS',T30,I10,' $') 
 502 FORMAT('  ADMIN/LEGAL',T30,I10,' $') 
 503 FORMAT('  201 PLANNING',T30,I10,' $') 
 504 FORMAT('  A/E DESIGN FEE',T30,I10,' $') 
 505 FORMAT('  INSPECTION',T30,I10,' $') 
 506 FORMAT('  CONTINGENCIES',T30,I10,' $') 
 507 FORMAT('  PROFIT/OVERHEAD',T30,I10,' $') 
 508 FORMAT('  TECHNICAL COSTS',T30,I10,' $') 
     MAOCT=0 
     KNOTE=0 
     DO 7 I=1,NUM 
     IPROC=SUMMDA(I,9)+0.001 
     IF(IPROC.GT.80)GO TO 17 
     NAME=LISQ(IPROC) 
     MAME=LISQ2(IPROC) 
     KSTR=LSTRQ(IPROC) 
     GO TO 8 
  17 IPROC=IPROC-80 
     NAME=LISS(IPROC) 
     MAME=LISS2(IPROC) 
     KSTR=LSTRS(IPROC) 
   8 KOST(1)=SUMMDA(I,1) 
     KOST(2)=SUMMDA(I,5) 
     KOST(3)=SUMMDA(I,2)*SALO 
     KOST(4)=SUMMDA(I,3)*SALM 
     KOST(5)=SUMMDA(I,4)*UPIPC 
     KOST(6)=SUMMDA(I,6) 
     KOST(7)=SUMMDA(I,14)*CHEM(1)+SUMMDA(I,15)*CHEM(2)+SUMMDA(I,16) 
    > *CHEM(3)+SUMMDA(I,17)*CHEM(4) 
    >+SUMMDA(I,8) 
     IF(KSTR.NE.IBLK)KNOTE=1 
     MAOC=0 
     DO 741 II=3,7 
 741 MAOC=MAOC+KOST(II) 
     MAOCT=MAOCT+MAOC 
   7 IF(IPRT.EQ.1)WRITE(6,6)NAME,MAME,KSTR,KOST,MAOC 
   9 FORMAT('0SUB TOTAL',2I10,2I9,I11,3I12) 
     KOST(1)=SUMCC 
     KOST(2)=SUMAMR 
     KOST(3)=SUMOH*SALO 
     KOST(4)=SUMMH*SALM 
     KOST(5)=EPC 
     KOST(6)=TOMMC 
     KOST(7)=COSTCT 
     KELCH=KOST(5)+KOST(7) 
     IF(IPRT.EQ.1)WRITE(6,9)KOST,MAOCT 
     MFOUN=0 
     MEFDF=0 
     MEFPU=0 
     MOB=0 
     MSITE=0 
     MELEC=0 
     IAC=0 
     MYRP=0 
     INFPUM=0 
     LABM=0 
     MGRAV=0 
     IF(KNOTE.EQ.1.AND.IPRT.EQ.1)WRITE(6,50) 
     IF(IPRT.EQ.1)WRITE(6,400) 
     IF(IMOB.NE.0)MOB=(5.2967*10000.0*QAVE**0.69)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(FMOB.NE.0.0)MOB=FMOB 
     IF(ISITE.NE.0)MSITE=(0.92734*100000.0*QAVE**0.57)/(1.0+PPROF/100.) 
    > *EPACI/DIVSOR 
     IF(SITE.NE.0.0)MSITE=SITE 
     IF(IFOUN.NE.0)MFOUN=(5.5129*10000.0*QAVE**0.57)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(FOUN.NE.0.0)MFOUN=FOUN 
     IF(IELEC.NE.0)MELEC=(1.39519*100000.0*QAVE**0.73)/(1.0+PPROF/100.) 
    > *EPACI/DIVSOR 
     IF(ELEC.NE.0.0)MELEC=ELEC 
     IF(IIAC.NE.0)IAC=(64997.0*QAVE**0.78)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(FIAC.NE.0.0)IAC=FIAC 
     IF(IMYRP.NE.0)MYRP=(96076.0*QAVE**0.71)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(FMYRP.NE.0.0)MYRP=FMYRP 
     IF(ILABM.NE.0)LABM=(161240.0*QAVE**0.58)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(FLABM.NE.0.0)LABM=FLABM 
     IF(IEFDI.NE.0)MEFDI=(2.9988*10000.0*QAVE**0.56)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(EFDI.NE.0.0)MEFDI=EFDI 
     IF(IEFPU.NE.0)MEFPU=(55776.0*QAVE**0.61)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(EFPU.NE.0.0)MEFPU=EFPU 
     IF(IPUMP.NE.0)INFPUM=(109443.0*QAVE**0.63)/(1.0+PPROF/100.00) 
    > *EPACI/DIVSOR 
     IF(PUMP.NE.0.0)INFPUM=PUMP 
     IF(IGRAV.EQ.1)MGRAV=50962.0*QAVE**0.77/(1.0+PPROF/100.0) 
    > *EPACI/DIVSOR 
     IF(IGRAV.EQ.2)MGRAV=251468.0*QAVE**1.06/(1.0+PPROF/100.0) 
    > *EPACI/DIVSOR 
     IF(GRAV.NE.0.0)MGRAV=GRAV 
     DIRCOS=MOB+MSITE+MFOUN+MELEC+IAC+MYRP+LABM+MEFDF+MEFPU+INFPUM 
    >+MGRAV 
     SUMCCT=SUMCC+DIRCOS 
     MPROF=SUMCCT*PPROF/100.00 
     DIRCOS=DIRCOS+MPROF 
     SUMCCT=SUMCCT+MPROF 
     MISC=SUMCCT*PMISC/100.0 
     LEGAL=SUMCCT*PADMI/100.0 
     M201=SUMCCT*P201/100.00 
     PENG=11.63 
     CCMIL=SUMCCT/1000000.00 
     IF(CCMIL.GT.0.10)PENG=6.835-4.795*ALOG10(CCMIL) 
     IF(CCMIL.GT.0.50)PENG=7.53-2.2875*ALOG10(CCMIL)+0.66173* 
    >ALOG10(CCMIL)**2 
     IF(CCMIL.GT.100.0)PENG=5.60 
     MENG=SUMCCT*PENG/100.0 
     INSPET=SUMCCT*PINSP/100.00 
     KONTIN=SUMCCT*PCONT/100.0 
     MTECH=SUMCCT*PTECH/100.00 
     SUMIND=MISC+LEGAL+M201+MENG+INSPET+KONTIN+MTECH 
     IF(IPRT.EQ.1.AND.IMOB.NE.0)WRITE(6,401)MOB 
     IF(IPRT.EQ.1.AND.ISITE.NE.0)WRITE(6,402)MSITE 
     IF(IFOUN.NE.0.AND.IPRT.EQ.1)WRITE(6,407)MFOUN 
     IF(IPRT.EQ.1.AND.IELEC.NE.0)WRITE(6,403)MELEC 
     IF(IPRT.EQ.1.AND.IIAC.NE.0)WRITE(6,408)IAC 
     IF(IPRT.EQ.1.AND.IMYRP.NE.0)WRITE(6,404)MYRP 
     IF(IEFDI.NE.0.AND.IPRT.EQ.1)WRITE(6,411)MEFDF 
     IF(IEFPU.NE.0.AND.IPRT.EQ.1)WRITE(6,409)MEFPU 
     IF(IGRAV.EQ.1.AND.IPRT.EQ.1)WRITE(6,415)MGRAV 
     IF(IGRAV.EQ.2.AND.IPRT.EQ.1)WRITE(6,4151)MGRAV 
     IF(IPRT.EQ.1.AND.IPUMP.NE.0)WRITE(6,406)INFPUM 
     IF(IPRT.EQ.1.AND.ILABM.NE.0)WRITE(6,405)LABM 
     IF(IPRT.EQ.1)WRITE(6,507)MPROF 
     IDIRCT=DIRCOS 
     ITCOST=SUMCCT 
     IF(IPRT.EQ.1)WRITE(6,6414)IDIRCT,ITCOST 
     TAB(3)=ITCOST 
     IF(IPRT.EQ.1)WRITE(6,500) 
     IF(IPRT.EQ.1)WRITE(6,501)MISC 
     IF(IPRT.EQ.1)WRITE(6,502)LEGAL 
     IF(IPRT.EQ.1)WRITE(6,503)M201 
     IF(IPRT.EQ.1)WRITE(6,504)MENG 
     IF(IPRT.EQ.1)WRITE(6,505)INSPET 
     IF(IPRT.EQ.1)WRITE(6,506)KONTIN 
     IF(IPRT.EQ.1)WRITE(6,508)MTECH 
     INDSUM=SUMIND 
     IF(IPRT.EQ.1)WRITE(6,414)INDSUM 
     ILAND=XL*FLAND 
     IF(IPRT.EQ.1)WRITE(6,413)ILAND,XL 
     IDC=(SUMC+DIRCOS+INDSUM+ILAND)*CP*R/2.0 
  12 FORMAT(' INTEREST DURING CONSTRUCTION',I10,' $') 
     IF(IPRT.EQ.1)WRITE(6,12)IDC 
  10 FORMAT('0ADMINISTRATIVE COST',I19,' $/YR'/ 
    > ' LABORATORY COST',I23,' $/YR') 
     KOST(1)=COSTA 
     KOST(2)=COSTL 
     IF(IPRT.EQ.1)WRITE(6,10)KOST(1),KOST(2) 
     IREV=REVNUE 
  13 FORMAT(' REVENUE',I31,' $/YR') 
     IF(IPRT.EQ.1.AND.IREV.NE.0)WRITE(6,13)IREV 
  11 FORMAT('0TOTAL PROJECT COST',I10,' $   ', 
    >'  TOTAL CONSTRUCTION COST',I10,' $'/ 
    >' FINAL YEAR O & M  ',I10,' $/YR', 
    >'  TOTAL STEP III COST    ',I10,' $'/ 
    >' INITIAL YEAR O & M',I10,' $/YR', 
    >'  PRESENT WORTH (APP. A) ',I10,' $') 
  50 FORMAT('0','* WARNING - COST ESTIMATES ARE FROM ' 
    >'PARAMETRIC EQUATIONS') 
     KOST(1)=SUMC+DIRCOS+INDSUM+ILAND+IDC 
     KOST(2)=SUMO-IREV 
     KOST(3)=KOST(2)-KELCH*(QAVE-QAVEI)/QAVE 
     KOST(4)=ITCOST 
     KOST(5)=KOST(1)-M201-MENG 
     KOST(6)=PWF*SUMAMR+IDIRCT+INDSUM-M201-MENG+PWF*(COSTA+COSTL) 
     FINSF=1.0/R-NOPER/R/SN 
     KOST(6)=KOST(6)+IDC+KOST(3)*PWF+KELCH/NOPER*PWF*FINSF 
     KOST(6)=KOST(6)+ILAND*(1.-1.03**NOPER*(1./(1.+R)**NOPER)) 
     TAB(1)=KOST(6) 
     IF(IPRT.EQ.1)WRITE(6,11)KOST(1),KOST(4),KOST(2),KOST(5),KOST(3), 
    >KOST(6) 
     QAVEI=QAVEIX 
     BU=QAVEI*1000.0*365.0 
     TPC=KOST(1) 
     OAM=KOST(2) 
     FLC=ILAND 
     IF(IPRT.EQ.1)CALL CHARXO(BU,TPC,FLC,OAM) 
     TAB(2)=KOST(1) 
     SUMA=KOST(3) 
     TAB(4)=KOST(2) 
     RETURN 
     END 
     SUBROUTINE FILTEX(RR) 
     DIMENSION RR(1) 
     DIMENSION HF(5),DELP(5),DEPTH(5),FK(5),SIG(5),DIA(5), 
    &FACT(5),SG(5) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),RSST),(QQ(2),FLR),(QQ(3),VP), 
    <(QQ(4),DEPTH(1)),(QQ(9),FK(1)),(QQ(14),SIG(1)), 
    <(QQ(19),DIA(1)),(QQ(24),FACT(1)),(QQ(29),SG(1)), 
    <(QQ(34),D60),(QQ(35),WM),(QQ(36),FMU),(QQ(37),RHO), 
    <(QQ(38),POR),(QQ(39),EXPAND),(QQ(40),TRONO), 
    <(QQ(41),WIDTH),(QQ(42),UNDER),(QQ(43),HEAD), 
    <(QQ(44),OPER),(QQ(45),HEIGHT),(QQ(46),TIME) 
    <,(QQ(47),FNOLA),(QQ(48),HF(1)),(QQ(53),DELP(1)), 
    <(QQ(58),DELPT),(QQ(59),FREE),(QQ(60),SA), 
    <(QQ(61),VF),(QQ(62),RNF),(QQ(63),VS),(QQ(64),RNS), 
    <(QQ(65),FNE),(QQ(66),DTOT),(QQ(67),SIGBAR), 
    <(QQ(68),OPT),(QQ(69),HO),(QQ(70),TD),(QQ(71),TH), 
    <(QQ(72),BWW),(QQ(73),BR),(QQ(74),XMU), 
    > (QQ(75),XXXXX),(QQ(76),COSTES), 
    > (QQ(77),SAD),(QQ(78),SAU),(QQ(79),NU),(QQ(80),NB),(QQ(81),VBWS) 
    >,(QQ(82),RSSF),(QQ(83),RSPS) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,83) 
     FRHO=RHO/32.2 
     SA=QAVE*1000000.0/FLR/24.0/60.0 
     NB=QAVE/100.0+1.0 
     QPB=QAVE/NB 
     NU=1 
     IF(QPB.GT.10.0)NU=2 
     IF(QPB.GT.20.0)NU=4 
     IF(QPB.GT.40.0)NU=6 
     IF(QPB.GT.60.00)NU=8 
     IF(QPB.GT.80.0)NU=10 
     NC=4 
     SAP=QMAX*10.0**6/5.0/24.0/60.0*NU*NC/(NU*(NC-1)) 
     SAD=SA 
     IF(SAP.GT.SA)SAD=SAP 
     SAU=SAD/NB/NU 
     SAC=SAU/NC 
     NBWS=2 
     IF(NU.EQ.4)NBWS=3 
     IF(NU.EQ.6)NBWS=4 
     IF(NU.EQ.8)NBWS=5 
     IF(NU.EQ.10)NBWS=6 
     IF(FMU.EQ.0.0)FMU=XMU*2.09/100000.0/FRHO 
     NOLAY=FNOLA 
     DO 1 I=1,NOLAY 
   1 HF(I)=(FK(I)*FMU/32.2*(1.0-SIG(I))**2/SIG(I)**3*VP 
    <*(FACT(I)/DIA(I))**2)*DEPTH(I) 
     NOM1=NOLAY-1 
     DO 2 I=1,NOM1 
   2 DELP(I)=DEPTH(I)*(1.0-SIG(I))*(SG(I)-1.0) 
     DELPT=0.0 
     DO 3 I=1,NOM1 
   3 DELPT=DELPT+DELP(I) 
     VF=0.00381*D60**1.82*(62.4*(WM-62.4))**0.94/XMU**0.88 
     RNF=FRHO*VF*D60/XMU/449.74/0.000021*0.00328 
     IF(RNF.GT.10.0)VF=VF*1.775*RNF**(-0.272) 
     VS=8.45*VF 
     RNS=FRHO*VS*D60/XMU/449.74/0.000021*0.00328 
     FNE=4.45*RNS**(-0.1) 
     FKE=VF/POR**FNE 
     DTOT=0.0 
     DO 4 I=1,NOLAY 
   4 DTOT=DTOT+DEPTH(I) 
     SIGBAR=(POR-1.0)*DTOT/EXPAND+1.0 
     BR=FKE*SIGBAR**FNE 
     IF(TIME.EQ.0.0)TIME=10.0 
     IF(BR.LT.20.0)BR=20.0 
     BWW=NB*NBWS*SAC*BR*TIME 
     VBWS=BWW/7.48 
   5 CALL FILTPR(SAD,SAU,NU,NB,VBWS,QAVE,COSTES,RSSF,RSST,0) 
     CALL USEREX(10) 
   6 QPT=BR*SA/TRONO/60.0/8.34 
     HO=(QPT/(2.49*WIDTH))**0.667 
     TD=UNDER+DTOT+OPER+FREE 
     TH=HEAD+HF(NOLAY)+DELPT+HEIGHT 
     SOLIDS=0.4*SOLIDS 
     BOD5=BOD5S 
     COD=CODS 
     TKN=FNH3 
     OAG=0.0 
     SETSO=0.0 
     CALL INIT(RR,QQ,83) 
     RETURN 
     END 
     SUBROUTINE FILTIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(21) 
     DIMENSION RR(1) 
     DIMENSION DEPTH(5),FK(5),SIG(5),DIA(5),FACT(5), 
    &SG(5),HF(5),DELP(5) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FLR),(QQ(3),VP), 
    <(QQ(4),DEPTH(1)),(QQ(9),FK(1)),(QQ(14),SIG(1)), 
    <(QQ(19),DIA(1)),(QQ(24),FACT(1)),(QQ(29),SG(1)), 
    <(QQ(34),D60),(QQ(35),WM),(QQ(36),FMU),(QQ(37),RHO), 
    <(QQ(38),POR),(QQ(39),EXPAND),(QQ(40),TRONO), 
    <(QQ(41),WIDTH),(QQ(42),UNDER),(QQ(43),HEAD), 
    <(QQ(44),OPER),(QQ(45),HEIGHT),(QQ(46),TIME) 
    <,(QQ(47),FNOLA),(QQ(48),HF(1)),(QQ(53),DELP(1)), 
    <(QQ(58),DELPT),(QQ(59),FREE),(QQ(60),SA), 
    <(QQ(61),VF),(QQ(62),RNF),(QQ(63),VS),(QQ(64),RNS), 
    <(QQ(65),FNE),(QQ(66),DTOT),(QQ(67),SIGBAR), 
    <(QQ(68),OPT),(QQ(69),HO),(QQ(70),TD),(QQ(71),TH), 
    <(QQ(72),BWW),(QQ(73),BR),(QQ(74),XMU),(QQ(75),XXXXX),(QQ(76), 
    < COSTES), 
    > (QQ(77),SAD),(QQ(78),SAU),(QQ(79),NU),(QQ(80),NB),(QQ(81),VBWS) 
    >,(QQ(82),RSSF),(QQ(83),RSPS) 
     DATA LIST/'LOAD','APPR','LAYE','SIXT','SPEC','KINE','DENS', 
    > 'PORO','EXPA','NUMB','WIDT','UNDE','HEAD','OPER','HEIG', 
    > 'BACK','END ','FREE','ABSO','ESTI','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,83) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,21 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21),I 
   1 FLR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 VP=VALUE(1) 
     GO TO 50 
   3 FNOLA=VALUE(1) 
     NOLA=FNOLA 
     DO 54 I=1,NOLA 
     READ(5,55)KLM 
     CALL SCAN(NO,VALUE,74,KLM) 
     WRITE(6,952)KLM 
 952 FORMAT(' ',74A1) 
     DEPTH(I)=VALUE(1) 
     FK(I)=VALUE(2) 
     SIG(I)=VALUE(3) 
     DIA(I)=VALUE(4) 
     FACT(I)=VALUE(5) 
  54 SG(I)=VALUE(6) 
     DO 920 I=2,5 
 920 ID(MODT,I)=IA 
     GO TO 50 
  55 FORMAT(74A1) 
   4 D60=VALUE(1) 
     GO TO 50 
   5 WM=VALUE(1) 
     GO TO 50 
   6 FMU=VALUE(1) 
     GO TO 50 
   7 RHO=VALUE(1) 
     GO TO 50 
   8 POR=VALUE(1) 
     GO TO 50 
   9 EXPAND=VALUE(1) 
     GO TO 50 
  10 TRONO=VALUE(1) 
     GO TO 50 
  11 WIDTH=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
  12 UNDER=VALUE(1) 
     GO TO 50 
  13 HEAD=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
  14 OPER=VALUE(1) 
     GO TO 50 
  15 HEIGHT=VALUE(1) 
     GO TO 50 
  16 TIME=VALUE(1) 
     GO TO 50 
  17 CALL INIT(RR,QQ,83) 
     RETURN 
  18 FREE=VALUE(1) 
     GO TO 50 
  19 XMU=VALUE(1) 
     GO TO 50 
  20 COSTES=VALUE(1) 
     GO TO 50 
  21 RSSF=VALUE(1) 
     RSPS=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
     END 
     SUBROUTINE FILTOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     DIMENSION HF(5),DELP(5),DEPTH(5),FK(5),SIG(5), 
    &DIA(5),FACT(5),SG(5) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),RSST),(QQ(2),FLR),(QQ(3),VP), 
    <(QQ(4),DEPTH(1)),(QQ(9),FK(1)),(QQ(14),SIG(1)), 
    <(QQ(19),DIA(1)),(QQ(24),FACT(1)),(QQ(29),SG(1)), 
    <(QQ(34),D60),(QQ(35),WM),(QQ(36),FMU),(QQ(37),RHO), 
    <(QQ(38),POR),(QQ(39),EXPAND),(QQ(40),TRONO), 
    <(QQ(41),WIDTH),(QQ(42),UNDER),(QQ(43),HEAD), 
    <(QQ(44),OPER),(QQ(45),HEIGHT),(QQ(46),TIME) 
    <,(QQ(47),FNOLA),(QQ(48),HF(1)),(QQ(53),DELP(1)), 
    <(QQ(58),DELPT),(QQ(59),FREE),(QQ(60),SA), 
    <(QQ(61),VF),(QQ(62),RNF),(QQ(63),VS),(QQ(64),RNS), 
    <(QQ(65),FNE),(QQ(66),DTOT),(QQ(67),SIGBAR), 
    <(QQ(68),OPT),(QQ(69),HO),(QQ(70),TD),(QQ(71),TH), 
    <(QQ(72),BWW),(QQ(73),BR),(QQ(74),XMU),(QQ(75),XXXXX),(QQ(76), 
    > COSTES), 
    > (QQ(77),SAD),(QQ(78),SAU),(QQ(79),NU),(QQ(80),NB),(QQ(81),VBWS) 
    >,(QQ(82),RSSF),(QQ(83),RSPS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(RR,QQ,83) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0FILTRATION') 
 201 FORMAT('0',A1,' AVERAGE LOADING RATE               ',E9.3, 
    >' GPM/SQFT') 
     WRITE(6,202) 
 202 FORMAT('0  LAYER     DEPTH     DIAMETER  SHAPE     SPECIFIC'/ 
    <       '              (FT)      (FT)     FACTOR    GRAVITY') 
     NOLAY=FNOLA 
     DO 1 I=1,NOLAY 
   1 WRITE(6,203)ID(MODT,2),I,DEPTH(I),DIA(I),FACT(I),SG(I) 
 203 FORMAT(' ',A1,' ',I5,F10.4,F13.4,F8.2,F11.2) 
     WRITE(6,201)ID(MODT,1),FLR 
 505 FORMAT('   SURFACE AREA                       ',E9.3,' SQ FT') 
     WRITE(6,505)SA 
     WRITE(6,204)ID(MODT,7),HEAD 
 204 FORMAT(' ',A1,' UNDERDRAIN HEADLOSS                ',E9.3,' FEET') 
     WRITE(6,205)ID(MODT,6),WIDTH 
 205 FORMAT(' ',A1,' WASHWATER GUTTER WIDTH             ',E9.3,' FEET') 
     WRITE(6,206)HO 
 206 FORMAT('   WASHWATER GUTTER DEPTH             ',E9.3,' FEET') 
     SUM=0.0 
     DO 10 I=1,NOLAY 
  10 SUM=SUM+HF(I) 
     WRITE(6,207)SUM 
 207 FORMAT('   TERMINAL HEADLOSS THROUGH BED      ',E9.3,' FEET') 
     WRITE(6,208)TH 
 208 FORMAT('   MAXIMUM HEAD FOR BACKWASHING       ',E9.3,' FEET') 
     WRITE(6,209)TD 
 209 FORMAT('   TOTAL FILTER DEPTH                 ',E9.3,' FEET') 
     WRITE(6,210)BWW 
 210 FORMAT('   WASHWATER NEEDED                   ',E9.3,' GAL') 
 506 FORMAT('   BACKWASH RATE                      ',E9.3,' GPM/SQFT') 
     WRITE(6,506)BR 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL FILTPR(SAD,SAU,NU,NB,VBWS,QAVE,COSTES, 
    >RSSF,RSST,1) 
     RETURN 
     END 
     SUBROUTINE FILTPR(SAD,SAU,NU,NB,VBWS,QAVG,XOSTES,RSSF,RSST,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON ICTL,KCTL,IPRT 
     IF(IQU.EQ.1)GO TO 678 
     COSTES=XOSTES 
     SAPF=SAD 
     IF(SAD.GT.400.0)GO TO 1 
     VEWF=0.0 
     VEWM=0.0 
     VCWM=0.0 
     VCWF=0.0 
     WST=0.0 
     FLST=0.0 
     VEWST=0.0 
     VCWST=0.0 
     GO TO 2 
   1 VEWF=8.875*SAU+5300.00 
     VEWM=VEWF*(0.1667+0.8333*NU)*NB 
      VCWF=4.4*SAU+2850.0 
     VCWM=VCWF*(0.056+0.9444*NU)*NB 
   2 WST=SQRT(VBWS/14.0) 
     FLST=2.0*WST 
     A1=(FLST+10.0)*(WST+10.0) 
     A2=(FLST+20.0)*(WST+10.0) 
     VEWST=(A1+A2+SQRT(A1*A2))*10.0/3.0 
     VCWST=20.0*(FLST+WST)+(FLST+6.0)*(WST+6.0) 
     FKWH=8213.0*QAVG**0.972 
     OMH=80.4*QAVG**0.572 
     FMMH=54.0*QAVG**0.585 
     OMMP=5.0 
     CF=1.25 
     COSTEF=VEWF/27.0*UPIEX 
     IF(NU.GT.1)COSTEF=VEWM/27.0*UPIEX 
     COSEST=VEWST/27.0*UPIEX 
     COSTCF=VCWF*UPICW/27.0 
     IF(NU.GT.1)COSTCF=VEWM*UPICW/27.0 
     COSCST=VCWST*UPICW/27.0 
     IF(SAD.LT.400.0)GO TO 3 
     IF(COSTES.EQ.0.0)COSTES=165000.0*EPACI/DIVSOR 
     COSTR=8.99*SAD**0.3615 
     IF(SAD.GT.784.0)COSTR=1.04*SAD**0.6853 
     COSTFE=COSTR*COSTES/100.0 
     FEIC=0.53*(COSTCF+COSCST) 
     CC=(COSTFE+COSTEF+COSTCF+COSCST+COSEST+FEIC)*CF 
     PRIN=(COSTFE+FEIC)*CF 
     CALL AMORT(PRIN,RSSF,RC1) 
     PRIN=(COSTEF+COSTCF+COSCST+COSEST)*CF 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=(COSTFE+FEIC)*OMMP/100.0 
     GO TO 4 
   3 COSTPF=33149.9*SAPF**0.3203*EPACI/DIVSOR 
     CC=(COSTPF+COSCST+COSEST)*CF 
     PRIN=COSTPF*CF 
     CALL AMORT(PRIN,RSSF,RC1) 
     PRIN=(COSCST+COSEST)*CF 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=COSTPF*OMMP/100.0 
   4 NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=3.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL FILTQU(SAU,VEWF,NU,NB,VEWM,VCWF,VCWM,VBWS, 
    > WST,FLST,VEWST,VCWST,QAVG,FKWH,OMH,FMMH) 
     RETURN 
     END 
     SUBROUTINE FILTQU(SAU,VEWF,NU,NB,VEWM,VCWF,VCWM,VBWS,WST,FLST, 
    > VEWST,VCWST,QAVG,FKWH,OMH,FMMH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR FILTRATION') 
     WRITE(6,2)SAU 
2    FORMAT('0SURFACE AREA PER FILTER',T45,E9.3,' SQ FT') 
     SAD=SAU*NU*NB 
     IF(SAD.GT.400.0)GO TO 20 
     WRITE(6,21) 
  21 FORMAT('  *** USE PACKAGE PLANT ***') 
     GO TO 22 
  20 WRITE(6,3)VEWF 
3    FORMAT(' EARTHWORK FOR A SINGLE FILTER',T45,E9.3,' CU FT') 
     WRITE(6,4)NU 
4    FORMAT(' NUMBER OF FILTER UNITS PER BATTERY',T45,I9) 
     WRITE(6,81) 
  81 FORMAT(' NUMBER OF CELLS PER UNIT',T45,8X,'4') 
     WRITE(6,5)NB 
5    FORMAT(' NUMBER BATTERIES',T45,I9) 
     WRITE(6,6)VEWM 
6    FORMAT(' TOTAL EARTHWORK FOR MULTIPLE FILTERS',T45,E9.3,' CU FT') 
     WRITE(6,7)VCWF 
7    FORMAT(' REINFORCED CONCRETE FOR SINGLE FILTER',T45,E9.3,' CU FT') 
     WRITE(6,8)VCWM 
8    FORMAT(' REINFORCED CONCRETE FOR MULTIPLE FILTERS',T45,E9.3, 
    > ' CU FT') 
  22 WRITE(6,9)VBWS 
9    FORMAT(' VOLUME SURGE TANK',T45,E9.3,' CU FT') 
     WRITE(6,10)WST 
10   FORMAT(' WIDTH SURGE TANK',T45,E9.3,' FEET') 
     WRITE(6,11)FLST 
11   FORMAT(' LENGTH SURGE TANK',T45,E9.3,' FEET') 
     WRITE(6,12)VEWST 
12   FORMAT(' EARTHWORK SURGE TANK',T45,E9.3,' CU FT') 
     WRITE(6,13)VCWST 
13   FORMAT(' REINFORCED CONCRETE FOR SURGE TANK',T45,E9.3,' CU FT') 
     WRITE(6,14)QAVG 
14   FORMAT(' AVERAGE WASTEWATER DESIGN FLOW',T45,E9.3,' MGD') 
     WRITE(6,15)FKWH 
15   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,16)OMH 
16   FORMAT(' OPERATION MAN-HOURS',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,17)FMMH 
17   FORMAT(' MAINTENANCE MAN-HOURS',T45,E9.3,' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE FLOCEX(RR,MODT) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),CD    ),(QQ(2),DTFM  ),(QQ(3),DTFL  ), 
    &(QQ( 4),OPH   ),(QQ( 5),CR    ),(QQ( 6),VFM   ),(QQ( 7),VFL   ) 
    >,(QQ(8),RSST) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,8) 
     CR=CD*QAVE*8.34 
     VFM=QMAX*DTFM*1000000.0/60.0/24.0 
     VFL=QMAX*DTFL*1000000.0/60.0/24.0 
     PH=OPH 
     CALL PRICE(VFL,0.0,0.0,49,RSST) 
     KADD=LQADD(40,MODT) 
     CALL LRIMEX(BANKDA(KADD)) 
     CALL INIT(RR,QQ,8) 
     RETURN 
     END 
     SUBROUTINE FLOCIN(RR) 
     DIMENSION LIST(5) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),CD    ),(QQ(2),DTFM  ),(QQ(3),DTFL  ), 
    &(QQ( 4),OPH   ),(QQ( 5),CR    ),(QQ( 6),VFM   ),(QQ( 7),VFL   ) 
    >,(QQ(8),RSST) 
     DATA LIST/'LIME','DETE','OPTI','END','REPL'/ 
     CALL INIT(QQ,RR,8) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5),I 
   1 CD=VALUE(1) 
     GO TO 50 
   2 DTFM=VALUE(1) 
     DTFL=VALUE(2) 
     GO TO 50 
   3 OPH=VALUE(1) 
     GO TO 50 
   4 CALL INIT(RR,QQ,8) 
     RETURN 
   5 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE FLOCOT(RR) 
     COMMON/STARCO/STARDA(19) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),CD    ),(QQ(2),DTFM  ),(QQ(3),DTFL  ), 
    &(QQ( 4),OPH   ),(QQ( 5),CR    ),(QQ( 6),VFM   ),(QQ( 7),VFL   ) 
    >,(QQ(8),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,8) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0TWO STAGE LIME TREATMENT') 
     WRITE(6,108) 
 108 FORMAT('0RAPID MIXER AND FLOCCULATOR') 
     WRITE(6,101)CD 
 101 FORMAT('0LIME DOSE',32X,E9.3,' MG/L') 
     WRITE(6,102)OPH 
 102 FORMAT(' OPTIMUM PH',31X,E9.3) 
     WRITE(6,103)DTFM 
 103 FORMAT(' RAPID MIX DETENTION TIME',17X,E9.3,' MIN') 
     WRITE(6,104)DTFL 
 104 FORMAT(' FLOCCULATOR DETENTION TIME',15X,E9.3,' MIN') 
     WRITE(6,105)CR 
 105 FORMAT(' COAGULANT REQUIREMENT',20X,E9.3,' LB/DAY') 
     WRITE(6,106)VFM 
 106 FORMAT(' VOLUME OF MIX BASIN',22X,E9.3,' GAL') 
     WRITE(6,107)VFL 
 107 FORMAT(' VOLUME OF FLOCCULATOR BASIN',14X,E9.3,' GAL') 
     WRITE(6,120)STARDA 
     RETURN 
     END 
     SUBROUTINE FLOTEX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/PSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),SSE   ),(QQ(17),BODR  ),(QQ(18),BODE  ),(QQ(19),CODR  ), 
    &(QQ(20),CODE  ),(QQ(21),TKNE  ),(QQ(22),TKNR  ),(QQ(23),R     ) 
    > ,(QQ(24),COSTES),(QQ(25),RSFS) 
     CALL INIT(QQ,RR,25) 
     COIN=SOLIDS 
     SA=29.2-0.795*TEMP+0.0175*TEMP**2-0.0002*TEMP**3 
     IF(TIMEPR.GT.0.0)GO TO 100 
     P=AOS*COIN/1.3/SA/0.5+2.0 
     PSIG=14.7*(P-1.0) 
     SURFAC=QAVE*COIN*8.34/SOLID 
     S1=QAVE/HYDRO/60.0/24.0*1000000.0 
     IF(S1.GT.SURFAC)SURFAC=S1 
     VOFLOT=QAVE*1000000.0/7.48/24.0*DETENT 
     GO TO 200 
 100 P=(PSIG+14.7)/14.7 
     R=AOS*QAVE*COIN/1.3/SA/(0.5*P-1.0) 
     SURFAC=QAVE*COIN*8.34/SOLID 
     S1=(QAVE+R)*1000000.0/HYDRO/60.0/24.0 
     IF(S1.GT.SURFAC)SURFAC=S1 
     VOFLOT=(QAVE+R)*DETENT/7.48/24.0*1000000.0 
     VOPRES=R*TIMEPR/7.48/24.0*1000000.0/60.0 
 200 VSW=QAVE*COIN*REMOV/100.0/(FLOAT/100.0*1.05) 
     SSE=COIN*(1.0-REMOV/100.0) 
     SOLIDS=SSE 
     TOTAL=VSW+SVOLU 
     TSS=(VSW*FLOAT+SVOLU*PSOLID)/TOTAL 
     VSS=(VSW*FLOAT*VOLAT+SVOLU*PSOLID*PVOLAT)/(VSW*FLOAT+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     SETSO=0.0 
     OAG=OAG*0.05 
   1 QAVG=QAVE*10.0**6 
     CR=0.0 
     CALL FLOTPR(SURFAC,QAVG,COIN,COSTES,CR,RSFS,RSST,0) 
     CALL USEREX(9) 
   2 CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE FLOTIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),SSE   ),(QQ(17),BODR  ),(QQ(18),BODE  ),(QQ(19),CODR  ), 
    &(QQ(20),CODE  ),(QQ(21),TKNE  ),(QQ(22),TKNR  ),(QQ(23),R     ) 
    > ,(QQ(24),COSTES),(QQ(25),RSFS) 
     DIMENSION RR(1) 
     DATA LIST/'AIR/','AIR ','DETE','SOLI','HYDR','RECY','PERC', 
    > 'FLOA','END ','REMO','ESTI','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
     SOLID=10.0 
     CYCLE=0.0 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 53 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 54 
  53 CONTINUE 
     WRITE(6,52)KTYPE 
  52 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  54 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 AOS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 PSIG=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 DETENT=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 SOLID=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 HYDRO=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 CYCLE=1.0 
     TIMEPR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   7 REMOV=VALUE(1) 
     GO TO 50 
   8 FLOAT=VALUE(1) 
     GO TO 50 
   9 CALL INIT(RR,QQ,25) 
     RETURN 
  10 BODR=VALUE(1) 
     CODR=VALUE(2) 
     TKNR=VALUE(3) 
     GO TO 50 
  11 COSTES=VALUE(1) 
     GO TO 50 
  12 RSFS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE FLOTOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),SSE   ),(QQ(17),BODR  ),(QQ(18),BODE  ),(QQ(19),CODR  ), 
    &(QQ(20),CODE  ),(QQ(21),TKNE  ),(QQ(22),TKNR  ),(QQ(23),R     ) 
    > ,(QQ(24),COSTES),(QQ(25),RSFS) 
     COMMON/STARCO/STARDA(19) 
     CALL TITLE 
     CALL INIT(QQ,RR,25) 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0FLOTATION') 
 102 FORMAT('0  SUSPENDED SOLIDS CONCENTRATION   ',E9.3,' MG/L       ') 
 103 FORMAT(' ',A1,' AIR TO SOLIDS RATIO              ',E9.3) 
 104 FORMAT(' ',A1,' AIR PRESSURE                     ',E9.3,' PSIG') 
 105 FORMAT(' ',A1,' SOLIDS LOADING                   ',E9.3, 
    >' LB/SQFT/DAY') 
 106 FORMAT(' ',A1,' HYDRAULIC LOADING                ',E9.3, 
    >' GPM/SQFT') 
 107 FORMAT('   RECYCLE FLOW                     ',E9.3,' MGD') 
 108 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
 109 FORMAT('   VOLUME OF PRESSURE TANK          ',E9.3,' CU FT') 
 110 FORMAT('   VOLUME OF FLOTATION TANK         ',E9.3,' CU FT') 
 111 FORMAT(' ',A1,' PRESSURE TANK DETENTION TIME     ',E9.3,' MIN') 
 112 FORMAT(' ',A1,' FLOTATION TANK DETENTION TIME    ',E9.3,' HRS') 
     WRITE(6,102)COIN 
     WRITE(6,103)ID(MODT,1),AOS 
     WRITE(6,104)ID(MODT,2),PSIG 
     WRITE(6,105)ID(MODT,4),SOLID 
     WRITE(6,106)ID(MODT,5),HYDRO 
     IF(TIMEPR.GT.0.0)WRITE(6,107)R 
     WRITE(6,108)SURFAC 
     IF(TIMEPR.GT.0.0)WRITE(6,109)VOPRES 
     WRITE(6,110)VOFLOT 
     IF(TIMEPR.GT.0.0)WRITE(6,111)ID(MODT,6),TIMEPR 
     WRITE(6,112)ID(MODT,3),DETENT 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL FLOTPR(SURFAC,SVOLU,COIN,COSTES,CR,RSFS,RSST, 
    >1) 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE FLOTPR(SA,QS,CO,XOSTES,CR,RSFS,RSST,IQU) 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION USAS(13) 
     DATA USAS/40.0,50.0,70.0,100.0,140.0,200.0,280.0,350.0, 
    >450.0,570.0,750.0,960.0,1250.0/ 
     IF(IQU.NE.0)GO TO 678 
     COSTES=XOSTES 
     Q=QS/1000000.0 
     NU=SA/1250.0+0.99 
     IF(NU.LT.1)NU=1 
     SAS=SA/NU 
     DO 1 I=1,13 
     IF(USAS(I).GE.SAS)GO TO 2 
   1 CONTINUE 
     I=13 
   2 SAS=USAS(I) 
     DIA=SQRT(4.0*SAS/3.1416) 
     AB=(DIA+2.0)*(DIA+5.0)*NU 
     VEW=1.15*NU*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350) 
     SWD=6.72+0.0476*DIA 
     TS=7.9+0.25*SWD 
     TW=7.0+0.5*SWD 
     VCS=0.825*(DIA+4.0)**2*TS/12.0*NU 
     VCW=3.14*(SWD+1.0)*DIA*TW/12.0*NU 
     FNU=NU 
     VCB=100.0*FNU**1.13 
     VCWT=VCW+VCB 
     VCST=VCS 
     DSTPD=Q*CO*8.34/2000 
     OMH=560.0*DSTPD**0.4973 
     IF(DSTPD.GT.2.3)OMH=496.0*DSTPD**0.5092 
     FMMH=156.0*DSTPD**0.4176 
     IF(DSTPD.GT.3.0)FMMH=124.0*DSTPD**0.6429 
     FKWH=63000.0*DSTPD**0.9422 
     OMMP=1.0 
     CF=1.18 
     COSTB=AB*UPIBC*0.75 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCWT*UPICW/27.0 
     COSTCS=VCST*UPICS/27.0 
     COSTRO=0.3*SAS+25.0 
     IF(SAS.GT.240.0)COSTRO=0.092*SAS+75.0 
     IF(SAS.GT.480.0)COSTRO=0.161*SAS+43.0 
     IF(COSTES.LE.0.0)COSTES=44200.0*FMSECI/491.6 
     COSTFE=COSTES*COSTRO/100.0 
     EIC=0.75*COSTFE 
     FIEC=(COSTFE+EIC)*NU 
     CC=(COSTB+COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSFS,RC1) 
     PRIN=(COSTB+COSTE+COSTCW+COSTCS)*CF 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=CC*OMMP/100.0 
     CRPY=CR*365.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=2.0 
     SUMMDA(NUM,13)=CR 
     SUMMDA(NUM,17)=CRPY 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL FLOTQU(SAS,DIA,NU,AB,VEW,SWD,TS,TW,VCWT, 
    >VCST,DSTPD,OMH,FMMH,FKWH) 
     RETURN 
     END 
     SUBROUTINE FLOTQU(SAS,DIA,NU,AB,VEW,SWD,TS,TW,VCWT,VCST,DSTPD,OMH, 
    > FMMH,FKWH) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR FLOTATION') 
     WRITE(6,2)SAS 
2    FORMAT('0SURFACE AREA PER FLOTATION UNIT',T45,E9.3,' SQ FT') 
     WRITE(6,3)DIA 
3    FORMAT(' DIAMETER PER FLOTATION UNIT',T45,E9.3,' FEET') 
     WRITE(6,4)NU 
4    FORMAT(' NUMBER UNITS',T45,I9) 
     WRITE(6,5)AB 
5    FORMAT(' AREA OF FLOTATION BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,6)VEW 
6    FORMAT(' EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,7)SWD 
7    FORMAT(' SIDE WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,8)TS 
8    FORMAT(' SLAB THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,9)TW 
9    FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,10)VCWT 
10   FORMAT(' REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,11)VCST 
11   FORMAT(' REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,12)DSTPD 
12   FORMAT(' DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,13)OMH 
13   FORMAT(' OPERATION LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,14)FMMH 
14   FORMAT(' MAINTENANCE LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,15)FKWH 
15   FORMAT(' ELECTRICAL ENERGY',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE FRECEX(RR) 
     COMMON ICTL,KTCK,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT, 
    <BOD5,BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG, 
    <ANO2,ANO3 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     VOL=QAVE*TD/60.0/1440.0 
     CO2R=3.7*OHM*QAVE/0.116/1440.0 
     PH=9.4 
     CALL PRICE(QAVE,0.0,0.0,51,RSST) 
     CALL INIT(RR,QQ,6) 
     RETURN 
     END 
     SUBROUTINE FRECIN(RR) 
     DIMENSION LIST(4) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     DATA LIST/'DETE','ALKA','END','REPL'/ 
     CALL INIT(QQ,RR,6) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4),I 
   1 TD=VALUE(1) 
     GO TO 50 
   2 OHM=VALUE(1) 
     CO3=VALUE(2) 
     GO TO 50 
   3 CALL INIT(RR,QQ,6) 
     RETURN 
   4 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE FRECOT(RR) 
     COMMON/STARCO/STARDA(19) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL TITLE 
     CALL INIT(QQ,RR,6) 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 100 FORMAT('0FIRST STAGE RECARBONATION') 
     WRITE(6,100) 
     WRITE(6,101)TD 
     WRITE(6,102)OHM 
     WRITE(6,103)CO3 
     WRITE(6,104)CO2R 
     WRITE(6,105)VOL 
     WRITE(6,120)STARDA 
     RETURN 
 101 FORMAT('0DETENTION TIME',26X,E9.3,' MIN') 
 102 FORMAT(' HYDROXIDE ALKALINITY',20X,E9.3,' MG/L') 
 103 FORMAT(' CARBONATE ALKALINITY',20X,E9.3,' MG/L') 
 104 FORMAT(' CO2 REQUIREMENT',25X,E9.3,' CFM/MGD') 
 105 FORMAT(' VOLUME OF TANK',26X,E9.3,' MG') 
     END 
     SUBROUTINE GECOEX(RR) 
     DIMENSION RR(1) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),SSI),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),SSR   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT) 
    >,(QQ(24),BODR),(QQ(25),CODR),(QQ(26),TKNR),(QQ(27),PO4R) 
    >,(QQ(28),RSMS),(QQ(29),RSST) 
     CALL INIT(QQ,RR,29) 
     SOLIDS=SSI 
     SA=QAVE*1000000.0/SFR 
     ASLR=QAVE*SOLIDS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,25.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(29) 
     GO TO 2 
   3 CALL RECTPR(0,25.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(29) 
   2 WL=QMAX*1000000.0/WOFR 
     SP=(QAVE*SOLIDS/100.0*SSR*8.34) 
     WS=SP/(SG*UC*8.34)*100.0 
     TOTAL=SVOLU+WS 
     TSS=(WS*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(WS*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(WS*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SSE=SOLIDS*(1.0-SSR/100.0) 
     PO4=PO4*(1.0-PO4R/100.0) 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     SOLIDS=SSE 
     SETSO=0.0 
     CALL INIT(RR,QQ,29) 
     RETURN 
     END 
     SUBROUTINE GECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(13),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),SSI),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),SSR   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT) 
    >,(QQ(24),BODR),(QQ(25),CODR),(QQ(26),TKNR),(QQ(27),PO4R) 
    >,(QQ(28),RSMS),(QQ(29),RSST) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','REMO','END ', 
    >'ESTI','RECT','CIRC','INFL','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,29) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,8,11,12,13,14),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(5) 
     ID(MODT,5)=IA 
     GO TO 50 
  10 CALL INIT(RR,QQ,29) 
     RETURN 
   8 COSTES=VALUE(1) 
     GO TO 50 
  13 SSI=VALUE(1) 
     GO TO 50 
  11 RECT=1.0 
     GO TO 50 
  12 RECT=0.0 
     GO TO 50 
  14 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE GECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),SSI),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),SSR   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT) 
    >,(QQ(24),BODR),(QQ(25),CODR),(QQ(26),TKNR),(QQ(27),PO4R) 
    >,(QQ(28),RSMS),(QQ(29),RSST) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,29) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,235)SA 
 235 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,25.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,25.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE GRITEX(RR) 
     DIMENSION RR(1) 
     DIMENSION DMU(6) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TYPE  ),(QQ(3),SIZE  ), 
    &(QQ( 4),SPGR  ),(QQ( 5),UNITS ),(QQ( 6),VELMAX),(QQ( 7),VELAVE), 
    &(QQ( 8),DEPTH ),(QQ( 9),WIDTH ),(QQ(10),ALPHA ),(QQ(11),ALLOW ), 
    &(QQ(12),COEF  ),(QQ(13),FACTOR),(QQ(14),TIME  ),(QQ(15),AIR   ), 
    &(QQ(16),FMIN  ),(QQ(17),FAVE  ),(QQ(18),FMAX  ),(QQ(19),TEMPO ), 
    &(QQ(20),QPU   ),(QQ(21),SPAN  ),(QQ(22),VS    ),(QQ(23),SLOPE ), 
    &(QQ(24),VGRIT ),(QQ(25),OVRFLO) 
     DATA DMU/1.49146,1.33257,1.20056,1.08629,0.98749,0.90236/ 
  DMU IS VISCOSITY IN SQFT/SEC AT 8,12,16,20,24,&28 DEG C 
     CALL INIT(QQ,RR,25) 
  10 CALL GRITPR(QAVE,QMAX,RSST) 
     CALL USEREX(34) 
  11 FMIN=QMIN*1.54 
     FMAX=QMAX*1.54 
     FAVE=QAVE*1.54 
     TEMPO=TEMP 
  CALCULATE MAX FLOW PER UNIT 
     QPU=FMAX/UNITS 
     IF(TYPE.EQ.0.0)GO TO 80 
     VOLPU=TIME*60.0*QPU 
     IF(WIDTH.EQ.0.0)GO TO 81 
     SPAN=WIDTH 
     DEPTH=VOLPU/SPAN**2 
  83 VELMAX=FMAX/DEPTH/WIDTH/UNITS 
     VELAVE=FAVE/DEPTH/WIDTH/UNITS 
     GO TO 3 
  81 WIDTH=SQRT(VOLPU/DEPTH) 
     SPAN=WIDTH 
     GO TO 83 
  CALCULATE CROSS-SECTIONAL AREA 
  80 AREA=QPU/VELMAX 
  DETERMINE DEPTH OR WIDTH 
     IF(DEPTH.NE.0.0)GO TO 2 
   4 DEPTH=AREA/WIDTH 
     GO TO 3 
   2 WIDTH=AREA/DEPTH 
     GO TO 3 
  DETERMINE VISCOSITY AT TEMP BY INTERPOLATION 
   3 M=(TEMP-8.0)/4.0+1.0 
     IF(M.GT.5)M=5 
     IF(M.LE.0)M=1 
     TEMPI=4*M+4 
     VMU=(TEMP-TEMPI)/4.0*(DMU(M+1)-DMU(M))+DMU(M) 
     IF(VMU.LE.0.0)VMU=DMU(1) 
  CALCULATE SETTLING VELOCITY 
     VS=0.0601 
     DO 60 I=1,100 
     R=VS*SIZE/0.0032808/VMU 
     CD=24.0/R+3.0/SQRT(R)+0.34 
     VSNEW=SQRT(4.0/3.0*32.2/CD*(SPGR-1.0)*SIZE/0.0032808) 
     ERROR=ABS((VS-VSNEW)/VS) 
     IF(ERROR.LT.0.001)GO TO 61 
  60 VS=VSNEW 
     STOP 2222 
  61 VS=VSNEW 
  DETERMINE LENGTH AND DETENTION TIME 
     IF(TYPE.GT.0.0)GO TO 5 
   HORIZONTAL FLOW 
     SPAN=DEPTH*VELMAX/VS*ALLOW 
     TIME=AREA*SPAN/QPU/60.0 
     GO TO 6 
   AERATED 
   5 CONTINUE 
  CALCULATE BOTTOM SLOPE 
   6 AAVE=FAVE/UNITS/VELAVE 
     DAVE=AAVE/WIDTH 
     WETP=DAVE*2.0+WIDTH 
     R=AAVE/WETP 
     SLOPE=(VELAVE*COEF/(1.49*R**0.667))**2 
  CALCULATE AVERAGE VOLUME OF GRIT AND SURFACE OVERFLOW RATE 
     VGRIT=QAVE*FACTOR 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE GRITIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION        LIST(16) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TYPE  ),(QQ(3),SIZE  ), 
    &(QQ( 4),SPGR  ),(QQ( 5),UNITS ),(QQ( 6),VELMAX),(QQ( 7),VELAVE), 
    &(QQ( 8),DEPTH ),(QQ( 9),WIDTH ),(QQ(10),ALPHA ),(QQ(11),ALLOW ), 
    &(QQ(12),COEF  ),(QQ(13),FACTOR),(QQ(14),TIME  ),(QQ(15),AIR   ), 
    &(QQ(16),FMIN  ),(QQ(17),FAVE  ),(QQ(18),FMAX  ),(QQ(19),TEMPO ), 
    &(QQ(20),QPU   ),(QQ(21),SPAN  ),(QQ(22),VS    ),(QQ(23),SLOPE ), 
    &(QQ(24),VGRIT ),(QQ(25),OVRFLO) 
     DATA LIST/'PART','SPEC','HORI','AERA','NUMB','DEPT','WIDT', 
    > 'ALPH','CURR','MANN','VOLU','DETE','AIR ','END ','ESTI','REPL'/ 
     DATA IA/'I'/ 
     DATA IBLK/' '/ 
     CALL INIT(QQ,RR,25) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,16 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
 100 FORMAT(A4,A2,74A1) 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),I 
   1 SIZE=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 SPGR=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 TYPE=0.0 
     VELMAX=VALUE(1) 
     VELAVE=VALUE(2) 
     ID(MODT,3)=IA 
     ID(MODT,4)=IA 
     ID(MODT,10)=IBLK 
     GO TO 50 
   4 TYPE=1.0 
     ID(MODT,3)=IBLK 
     ID(MODT,4)=IBLK 
     GO TO 50 
   5 UNITS=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 DEPTH=VALUE(1) 
     ID(MODT,6)=IA 
     ID(MODT,7)=IBLK 
     GO TO 50 
   7 WIDTH=VALUE(1) 
     ID(MODT,7)=IA 
     ID(MODT,6)=IBLK 
     GO TO 50 
   8 ALPHA=VALUE(1) 
     GO TO 50 
   9 ALLOW=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
  10 COEF=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
  11 FACTOR=VALUE(1) 
     GO TO 50 
  12 TIME=VALUE(1) 
     ID(MODT,10)=IA 
     GO TO 50 
  13 AIR=VALUE(1) 
     ID(MODT,11)=IA 
     GO TO 50 
  14 CALL INIT(RR,QQ,25) 
     RETURN 
  15 GO TO 50 
  16 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE GRITOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),TYPE  ),(QQ(3),SIZE  ), 
    &(QQ( 4),SPGR  ),(QQ( 5),UNITS ),(QQ( 6),VELMAX),(QQ( 7),VELAVE), 
    &(QQ( 8),DEPTH ),(QQ( 9),WIDTH ),(QQ(10),ALPHA ),(QQ(11),ALLOW ), 
    &(QQ(12),COEF  ),(QQ(13),FACTOR),(QQ(14),TIME  ),(QQ(15),AIR   ), 
    &(QQ(16),FMIN  ),(QQ(17),FAVE  ),(QQ(18),FMAX  ),(QQ(19),TEMPO ), 
    &(QQ(20),QPU   ),(QQ(21),SPAN  ),(QQ(22),VS    ),(QQ(23),SLOPE ), 
    &(QQ(24),VGRIT ),(QQ(25),OVRFLO) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     IF(TYPE.GT.0.0)GO TO 1 
     WRITE(6,100) 
     GO TO 2 
   1 WRITE(6,101) 
   2 WRITE(6,102)FMAX,FAVE,FMIN,TEMPO 
     WRITE(6,103)ID(MODT,3),VELMAX,ID(MODT,4),VELAVE,ID(MODT,1),SIZE, 
    > ID(MODT,2),SPGR 
     WRITE(6,104)ID(MODT,5),UNITS,QPU 
     WRITE(6,105)ID(MODT,7),WIDTH,ID(MODT,6),DEPTH,SPAN,VS 
     IF(TYPE.EQ.0.0)WRITE(6,106)SLOPE,ID(MODT,8),ALLOW,ID(MODT,9), 
    >COEF 
     WRITE(6,401)ID(MODT,10),TIME 
     WRITE(6,107)VGRIT 
     IF(TYPE.GT.0.0)WRITE(6,110)ID(MODT,11),AIR 
 100 FORMAT('0HORIZONTAL FLOW GRIT CHAMBER       ') 
 101 FORMAT('0  AERATED GRIT CHAMBER               ') 
 102 FORMAT('0  MAXIMUM FLOW                     ',E9.3,' CFS       '/ 
    <       '   AVERAGE FLOW                     ',E9.3,' CFS       '/ 
    <       '   MINIMUM FLOW                     ',E9.3,' CFS       '/ 
    <       '   TEMPERATURE                      ',E9.3,' DEG C     ') 
 103 FORMAT(' ',A1,' MAXIMUM FLOW THROUGH VELOCITY    ',E9.3, 
    >' FPS',/ 
    <       ' ',A1,' AVERAGE FLOW THROUGH VELOCITY    ',E9.3,' FPS'/ 
    <       ' ',A1,' SIZE SMALL. PART. 100% REMOVED   ',E9.3,' MM'/ 
    <       ' ',A1,' SPECIFIC GRAVITY OF PARTICLE     ',E9.3) 
 104 FORMAT(' ',A1,' NUMBER OF UNITS                  ',E9.3/ 
    <       '   MAXIMUM FLOW/UNIT                ',E9.3,' CFS') 
 105 FORMAT(' ',A1,' WIDTH OF CHANNEL                 ',E9.3,' FEET'/ 
    <   ' ',A1,' DEPTH OF CHANNEL                 ',E9.3,' FEET      '/ 
    <       '   LENGTH OF CHANNEL                ',E9.3,' FEET      '/ 
    <       '   SETTLING VELOCITY OF PARTICLE    ',E9.3,' FPS       ') 
 106 FORMAT('   SLOPE OF CHANNEL BOTTOM          ',E9.3,' FT PER FT '/ 
    <   ' ',A1,' ALLOWANCE FOR CURRENTS           ',E9.3,'           '/ 
    <  ' ',A1,' MANNING COEFFICIENT              ',E9.3,'           ') 
 401 FORMAT(   ' ',A1,' DETENTION TIME                   ',E9.3,' MIN') 
 107 FORMAT('   VOLUME OF GRIT                   ',E9.3,' CUFT/DAY  ') 
 110 FORMAT(' ',A1,' AIR SUPPLY                       ',E9.3,' CFM   ') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE GRITPR(QAVG,QP,RSST) 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
      COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     FNUM=61.0 
     OMH=600.0*QAVG**0.3382 
     IF(QAVG.GT.3.0)OMH=469.3*QAVG**0.5618 
     IF(QAVG.GT.7.0)OMH=255.3*QAVG**0.8746 
     FMMH=340.0*QAVG**0.2946 
     IF(QAVG.GT.3.0)FMMH=265.5*QAVG**0.5197 
     IF(QAVG.GT.7.0)FMMH=168.5*QAVG**0.7534 
     FKWH=16000.0*QAVG**0.4631 
     OMMP=2.5 
     RS=40.0 
     CC=40000.0*QP**0.6233*EPACI/DIVSOR/(1.0+PPROF/100.0) 
     CALL AMORT(CC,RSST,RC1) 
     OMMC=OMMP*CC/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
     END 
     SUBROUTINE HAULEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE(QQ(1),HPD),(QQ(2),FLT),(QQ(3),HT), 
    >(QQ(4),CAP),(QQ(5),SV),(QQ(6),NTR),(QQ(7),TSH),(QQ(8),DIST) 
    > ,(QQ(9),COSTVS),(QQ(10),CYC),(QQ(11),CPCY),(QQ(12),CPT), 
    > (QQ(13),RSSV),(QQ(14),RSST) 
     CALL INIT(QQ,RR,14) 
     CAP=19.0 
     IF(QAVE.GT.12.5)CAP=22.0 
     IF(QAVE.GT.25.0)CAP=30.0 
     SV=PVOLU/(7.48*27.0) 
     NTR=SV*(FLT+HT)/(HPD*CAP)+0.99 
     IF(NTR.LT.1)NTR=1 
     NRTD=SV/(NTR*CAP)+0.99 
     RTD=NRTD 
     TSH=SV*27.0*62.4*1.05/2000.0 
     PVOLU=00.0 
     PSOLID=0.00 
     PVOLAT=0.0 
   1 CALL HAULPR(SV,DIST,TSH,RTD,CAP,NTR,COSTVS,CYC,CPCY,CPT, 
    >RSSV,RSST,HPD,0) 
     CALL USEREX(62) 
   2 CALL INIT(RR,QQ,14) 
     RETURN 
     END 
     SUBROUTINE HAULIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1),LIST(7) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),HPD),(QQ(2),FLT),(QQ(3),HT), 
    >(QQ(4),CAP),(QQ(5),SV),(QQ(6),NTR),(QQ(7),TSH),(QQ(8),DIST) 
    > ,(QQ(9),COSTVS),(QQ(10),CYC),(QQ(11),CPCY),(QQ(12),CPT), 
    > (QQ(13),RSSV),(QQ(14),RSST) 
     DATA LIST/'DIST','HOUR','LOAD','HAUL','ESTI', 
    >'END','REPL'/ 
     DATA IA/'I'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,14) 
  50 READ(5,101)IDENT,IXX,KLM 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,7 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7),I 
   1 DIST=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 HPD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 FLT=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 HT=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 COSTVS=VALUE(1) 
     CYC=VALUE(2) 
     CPCY=VALUE(3) 
     CPT=VALUE(4) 
     GO TO 50 
   7 RSSV=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
   6 CALL INIT(RR,QQ,14) 
     RETURN 
     END 
     SUBROUTINE HAULOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),HPD),(QQ(2),FLT),(QQ(3),HT), 
    >(QQ(4),CAP),(QQ(5),SV),(QQ(6),NTR),(QQ(7),TSH),(QQ(8),DIST) 
    > ,(QQ(9),COSTVS),(QQ(10),CYC),(QQ(11),CPCY),(QQ(12),CPT), 
    > (QQ(13),RSSV),(QQ(14),RSST) 
     CALL INIT(QQ,RR,14) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SLUDGE HAULING AND LAND FILLING') 
 101 FORMAT('0  VOLUME OF SLUDGE HAULED          ',E9.3,' CUYD/DAY') 
 102 FORMAT('   TRUCK CAPACITY                   ',E9.3,' CU YD') 
 103 FORMAT(' ',A1,' ROUND TRIP TIME TO DISPOSAL SITE ',E9.3,' HRS') 
 104 FORMAT(' ',A1,' TRUCK LOADING TIME               ',E9.3,' HRS') 
 105 FORMAT(' ',A1,' HOURS OF OPERATION PER DAY       ',E9.3,' HRS') 
 106 FORMAT('   NUMBER OF TRUCKS REQUIRED        ',I9) 
 107 FORMAT('   TONS OF SLUDGE HAULED PER DAY    ',E9.3,' TONS/DAY') 
 108 FORMAT(' ',A1,' DISTANCE TO DISPOSAL SITE        ',E9.3,' MILES') 
     CALL INIT(QQ,RR,14) 
     WRITE(6,101)SV 
     WRITE(6,102)CAP 
     WRITE(6,103)ID(MODT,4),HT 
     WRITE(6,104)ID(MODT,3),FLT 
     WRITE(6,105)ID(MODT,2),HPD 
     WRITE(6,106)NTR 
     WRITE(6,107)TSH 
     WRITE(6,108)ID(MODT,1),DIST 
     WRITE(6,121)STARDA 
     CALL HAULPR(SV,D,TSH,RTD,CAP,NTR,XOSTVS,CYC, 
    >CPCY,CPT,RSSV,RSST,H,1) 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE HAULPR(XV,D,TSH,RTD,CAP,NTR,XOSTVS,CYC,CPCY,CPT, 
    >RSSV,RSST,HPD,IQU) 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.EQ.1)GO TO 678 
     XD=D 
     XRTD=RTD 
     SV=XV 
     H=8.0 
     XH=H 
     COSTVS=XOSTVS 
     FNUM=88.0 
     T=30.0 
     SSSA=SV*T*27.0/H 
     W=SQRT(SSSA/2.0) 
     FL=2.0*W 
     VEW=(4.0*W**2+15.0*W+25.0+SQRT(4.0*W**4+30.0*W**3+50.0*W**2))* 
    > 2.5/3.0 
     VCS=W*(13.74+2.0*W) 
     SACR=SSSA 
     RTHD=2.0*D 
     OMH=260.0*TSH*0.0263*RTHD**0.2708 
     IF(RTHD.GT.16.5)OMH=0.0034*260.0*TSH*RTHD 
     DTT=RTHD*RTD*5.0*50.0 
     OMMP=0.0013*DTT 
     IF(CAP.GT.19.0)OMMP=0.00106*DTT 
     IF(CAP.GT.22.0)OMMP=0.00102*DTT 
     COSTE=VEW*UPIEX/27.0 
     COSTCS=VCS*UPICS/27.0 
     COSTCR=SACR*UPIR 
     COSTRO=82.0 
     IF(CAP.GT.19.0)COSTRO=100.0 
     IF(CAP.GT.22.0)COSTRO=104.0 
     IF(COSTVS.EQ.0.0)COSTVS=51700.0*FMSECI/491.6 
     COSTSV=NTR*COSTVS*COSTRO/100.0 
     IF(CYC.NE.0.0)COSTLF=CYC 
     IF(CPCY.NE.0.0)COSTLF=SV*CPCY*365.0 
     IF(CPT.NE.0.0)COSTLF=TSH*365.0*CPT 
     OMMC=OMMP/100.0*COSTSV+COSTLF 
     CC=COSTE+COSTCS+COSTCR+COSTSV 
     PRIN=COSTE+COSTCS+COSTCR 
     CALL AMORT(PRIN,RSST,RC1) 
     CALL AMORT(COSTSV,RSSV,RC2) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     RETURN 
 678 IF(KCTL.NE.0)CALL HAULQU(SV,T,XH,SSSA,W,FL,VEW,VCS,SACR,XD,RTHD, 
    >TSH,OMH,XRTD,DTT,OMMP) 
     RETURN 
     END 
     SUBROUTINE HAULQU(SV,T,H,SSSA,W,FL,VEW,VCS,SACR,D,RTHD,TSH,OMH, 
    >RTD, DTT,OMMP) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR SLUDGE HAULING AND LANDFILL') 
     WRITE(6,2)SV 
2    FORMAT('0TOTAL SLUDGE VOLUME HAULED',T45,E9.3,' CUYD/DAY') 
     WRITE(6,3)T 
3    FORMAT(' MAXIMUM ANTICIPATED LANDFILL DOWNTIME ',T45,E9.3,' DAYS') 
     WRITE(6,4)H 
4    FORMAT(' ANTICIPATED SLUDGE STORAGE HEIGHT ',T45,E9.3,' FEET') 
     WRITE(6,5)SSSA 
5    FORMAT(' SLUDGE STORAGE SHED AREA',T45,E9.3,' SQ FT') 
     WRITE(6,6)W 
6    FORMAT(' WIDTH OF SLUDGE STORAGE SHED SLAB',T45,E9.3,' FEET') 
     WRITE(6,7)FL 
7    FORMAT(' LENGTH OF SLUDGE STORAGE SHED SLAB',T45,E9.3,' FEET') 
     WRITE(6,8)VEW 
8    FORMAT(' VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
     WRITE(6,9)VCS 
9    FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,10)SACR 
10   FORMAT(' SURFACE AREA OF CANOPY ROOF',T45,E9.3,' SQ FT') 
     WRITE(6,11)D 
11   FORMAT(' DISTANCE TO DISPOSAL SITE',T45,E9.3,' MILES') 
     WRITE(6,12)RTHD 
12   FORMAT(' ROUND TRIP HAUL DISTANCE',T45,E9.3,' MILES') 
     WRITE(6,13)TSH 
13   FORMAT(' TONS OF SLUDGE HAULED PER DAY',T45,E9.3,' TONS/DAY') 
     WRITE(6,14)OMH 
14   FORMAT(' OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,15)RTD 
15   FORMAT(' ROUND TRIPS PER DAY PER TRUCK',T45,E9.3) 
     WRITE(6,16)DTT 
16   FORMAT(' DISTANCE TRAVELED PER YEAR PER TRUCK',T45,E9.3,' MILES/YR 
    *') 
     WRITE(6,17)OMMP 
17   FORMAT(' MAINTENANCE AND MATERIAL SUPPLY COST',T45,E9.3, 
    > ' PERCENT') 
     RETURN 
     END 
     SUBROUTINE HIGHEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS),(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH), 
    >(QQ(40),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     QQQ=0.25*QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(23) 
   2 AT=24.0*BOD5/FMLVS/FOM 
     NUM=NUM-2 
     VOL=QAVE*AT/24.0 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     IF(OBOD.LT.0.5)OREQ=0.5*BOD5*QAVE*8.34 
     SVOLAT=SOLIDS*VOLAT/100.0 
     IF(OBOD.GT.0.75)OREQ=0.75*BOD5*QAVE*8.34 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <+FNDF/100.0*QAVE*SVOLAT*8.34+QAVE*(SOLIDS-SVOLAT)*8.34 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.75)SP=0.75*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     COD=1.5*EBOD 
     OAG=0.0 
     SETSO=0.0 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,16.0,0,RSSA,RSST) 
     CALL USEREX(23) 
     GO TO 4 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,16.0,0,RSPD,RSPH, 
    > RSST) 
     CALL USEREX(23) 
   4 CALL INIT(RR,QQ,40) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE HIGHIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(10) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),P04R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS),(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH), 
    >(QQ(40),RSPS) 
     DATA IA/'I'/ 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ', 
    >'MECH','DIFF','ESTI','REPL'/ 
     CALL INIT(QQ,RR,40) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 A=VALUE(1) 
     AP=VALUE(2) 
     B=VALUE(3) 
     BP=VALUE(4) 
     FNDF=VALUE(5) 
     FP=VALUE(6) 
     DO 20 I=1,6 
  20 ID(MODT,I)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,8)=IA 
     ID(MODT,9)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,40) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,10)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,10)=IA 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE HIGHOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS),(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH), 
    >(QQ(40),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0HIGH RATE ACTIVATED SLUDGE') 
     WRITE(6,202)ID(MODT,1),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,4),BP 
     WRITE(6,204)ID(MODT,2),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,3),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,5),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,6),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,7),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,8),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3, 
    > ' MG/L') 
     WRITE(6,213)ID(MODT,9),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3, 
    > ' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,10)) 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCFT') 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(3,QAVE,0.0,0.0,VOL,HP,SSXSA,16.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(3,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,16.0,1,RSPD,PSPH, 
    > RSST) 
   4 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE IDENTY(II,N,MAST,MASTER,KSTRT,KEND,NO,NOSCH) 
     DIMENSION LMT(60),KNT(60),NO(4,60),MASTER(4,10,60),MAST(60) 
     DIMENSION KSTRT(4,3),KEND(4,3) 
     N=1 
     NNT=0 
 400 NOC=KEND(N,1) 
     IF(NOC.LE.0)GO TO 413 
     DO 9875 NIX=1,60 
9875 LMT(NIX)=NO(N,NIX) 
     IF(KEND(N,2).GT.NOC)NOC=KEND(N,2) 
     IF(KEND(N,3).GT.NOC)NOC=KEND(N,3) 
     IPTR=1 
 416 DO 411 I=IPTR,NOC 
 411 KNT(I)=1 
     IPTR=NOC 
 412 DO 9873 NIX=1,60 
9873 MAST(NIX)=0 
     DO 9874 NIX=1,NOC 
     LIX=KNT(NIX) 
9874 MAST(NIX)=MASTER(N,LIX,NIX) 
     NNT=NNT+1 
     IF(NNT.EQ.II)RETURN 
     KNT(IPTR)=KNT(IPTR)+1 
     IF(KNT(IPTR).LE.LMT(IPTR))GO TO 412 
 414 IPTR=IPTR-1 
 CHECK FOR FINISHED WITH SCHEME 
     IF(IPTR.EQ.0)GO TO 413 
     KNT(IPTR)=KNT(IPTR)+1 
     IF(KNT(IPTR).GT.LMT(IPTR))GO TO 414 
     IPTR=IPTR+1 
     GO TO 416 
 413 N=N+1 
 CHECK FOR FINISHED WITH SCHEME PROCESSING 
     IF(N.GT.NOSCH)GO TO 500 
     GO TO 400 
 500 RETURN 
     END 
     SUBROUTINE INIT (QQ,RR,N) 
     DIMENSION RR(1) 
     DIMENSION QQ(1) 
     DO 1 J = 1,N 
   1 QQ(J) = RR(J) 
     RETURN 
     END 
     SUBROUTINE IRONPR(FIRON) 
     COMMON ICTL,KCTL,IPRT 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     FE=FIRON*55.8/162.2 
     CFEFED=EPACI/DIVSOR*59000.0 
     IF(FE.GT.1000.0)CFEFED=EPACI/DIVSOR*3352.0*FE**0.4152 
     IF(FE.GT.4000.0)CFEFED=EPACI/DIVSOR*86.92*FE**0.8857 
     IF(FE.GT.10000.0)CFEFED=EPACI/DIVSOR*0.458*FE**1.425 
     FLCV=FE/4.11 
     OMMPI=600.0 
     IF(FLCV.GT.90.0)OMMPI=189.2*FLCV**0.2565 
     IF(FLCV.GT.350.0)OMMPI=33.4*FLCV**0.5527 
     IF(FLCV.GT.1050.0)OMMPI=51.8*FLCV**0.4894 
     IF(FLCV.GT.10000.0)OMMPI=12.2*FLCV**0.647 
     OMMP=OMMPI 
     OMMC=2.0*CFEFED/100.0 
     RS=40.0 
     CALL AMORT(CFEFED,RS,RC1) 
     FNUM=57.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CFEFED 
     SUMMDA(NUM,2)=OMMP 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     IF(KCTL.NE.0.AND.IPRT.EQ.1)CALL IRONQU(FIRON,FE,EPACI,FLCV,OMMPI, 
    >OMMP,OMMC) 
     RETURN 
     END 
     SUBROUTINE IRONQU(FIRON,FE,EPACI,FLCV,OMMPI,OMMP,OMMC) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR IRON SALT FEED SYSTEM') 
     WRITE(6,2)FIRON 
2    FORMAT('0FERRIC CHLORIDE DOSAGE RATE',T45,E9.3,' LB/DAY') 
     WRITE(6,3)FE 
3    FORMAT(' IRON SALT DOSAGE RATE AS EQUIVALENT IRON',T45,E9.3, 
    > ' LBS/DAY') 
     WRITE(6,4)EPACI 
4    FORMAT(' EPA COST INDEX USED',T45,E9.3) 
     WRITE(6,6)FLCV 
6    FORMAT(' LIQUID CHEMICAL SOLUTION FED PER DAY',T45,E9.3, 
    > ' GAL/DAY') 
     WRITE(6,7)OMMPI 
7    FORMAT(' OPERATION AND MAINTENANCE MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,8)OMMP 
8    FORMAT(' TOTAL OPERATION AND MAINTENANCE MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE LIMEPR(FLIME) 
     COMMON ICTL,KCTL,IPRT 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     CCLIME=EPACI/DIVSOR*26100.0 
     IF(FLIME.GT.750.0)CCLIME=EPACI/DIVSOR*326.7*FLIME**0.6614 
     FLCV=FLIME/0.5 
     OMMPI=600.0 
     IF(FLCV.GT.90.0)OMMPI=189.2*FLCV**0.2565 
     IF(FLCV.GT.350.0)OMMPI=33.4*FLCV**0.5527 
     IF(FLCV.GT.1050.0)OMMPI=51.8*FLCV**0.4894 
     IF(FLCV.GT.10000.0)OMMPI=12.2*FLCV**0.647 
     OMMPII=92.5*FLCV**0.2827 
     OMMP=OMMPI+OMMPII 
     OMMC=2.0*CCLIME/100.0 
     RS=40.0 
     CALL AMORT(CCLIME,RS,RC1) 
     FNUM=55.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CCLIME 
     SUMMDA(NUM,2)=OMMP 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     IF(KCTL.NE.0.AND.IPRT.EQ.1)CALL LIMEQU(FLIME,EPACI,FLCV,OMMPI, 
    >OMMPII,OMMP,OMMC) 
     RETURN 
     END 
     SUBROUTINE LIMEQU(FLIME,EPACI,FLCV,OMMPI,OMMPII,OMMP,OMMC) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR LIME FEED SYSTEM') 
     WRITE(6,2)FLIME 
2    FORMAT('0LIME FEED RATE OF CA(OH)2',T45,E9.3,' LBS/DAY') 
     WRITE(6,3)EPACI 
3    FORMAT(' EPA COST INDEX USED',T45,E9.3) 
     WRITE(6,5)FLCV 
5    FORMAT(' LIQUID CHEMICAL SOLUTION FED PER DAY',T45,E9.3, 
    > ' GAL/DAY') 
     WRITE(6,6)OMMPI 
6    FORMAT(' OPERATION AND MAINTENANCE MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,7)OMMPII 
7    FORMAT(' DRY MATERIAL HANDLING AND MIXING MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,8)OMMP 
8    FORMAT(' TOTAL OPERATION AND MAINTENANCE MANPOWER ',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE LISTOT(NN,ISCH,FARE,LSCH,NNN) 
     DIMENSION ISCH(100,5),FARE(100,5),LSCH(500),ITRN(5) 
     COMMON/TITLCO/ITLE(44),NNT,KKKK,LLLL,NAMT(6,2) 
     DO 1 I=1,500 
   1 LSCH(I)=0 
     NNN=0 
     WRITE(6,2)ITLE 
   2 FORMAT('1',44A1) 
     WRITE(6,3) 
   3 FORMAT('0',4X,'PRESENT TRN    PROJECT TRN  CONSTRUCT TRN', 
    > '   O&M    TRN   ENERGY TRN'/' ',5X,'WORTH   #      ', 
    > 'COST    #     COST     #    COST    #     COST   #') 
     DO 4 I=1,NN 
     DO 5 J=1,5 
   5 ITRN(J)=FARE(I,J) 
     WRITE(6,6)(ITRN(J),ISCH(I,J),J=1,5) 
   6 FORMAT(' ',I11,I4,2(I11,I4),2(I9,I4)) 
     DO 7 J=1,5 
     IF(NNN.EQ.0)GO TO 8 
     DO 9 K=1,NNN 
     IF(LSCH(K).EQ.ISCH(I,J))GO TO 7 
     IF(LSCH(K).GT.ISCH(I,J))GO TO 10 
   9 CONTINUE 
     NNN=NNN+1 
     LSCH(NNN)=ISCH(I,J) 
     GO TO 7 
   8 NNN=1 
     LSCH(1)=ISCH(I,J) 
     GO TO 7 
  10 DO 11 M=K,NNN 
     L=NNN-M+K 
  11 LSCH(L+1)=LSCH(L) 
     NNN=NNN+1 
     LSCH(K)=ISCH(I,J) 
   7 CONTINUE 
   4 CONTINUE 
     RETURN 
     END 
     SUBROUTINE LRIMEX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),OFR   ),(QQ(2),TD    ),(QQ(3),SG    ), 
    &(QQ( 4),UC    ),(QQ( 5),SSR   ),(QQ( 6),BODR  ),(QQ( 7),WLR   ), 
    &(QQ( 8),SWD   ),(QQ( 9),VPSP  ),(QQ(10),SSE   ),(QQ(11),BODE  ), 
    &(QQ(12),BODI  ),(QQ(13),SSI   ),(QQ(14),CODR  ),(QQ(15),TKNR  ), 
    &(QQ(16),CODE  ),(QQ(17),TKNE  ),(QQ(18),PO4R  ),(QQ(19),SA    ), 
    &(QQ(20),WL    ),(QQ(21),SLR   ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSST),(QQ(25),RSMS) 
     COMMON/PSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/XXCO/QQ(100) 
     CALL INIT(QQ,RR,25) 
     SSI=SOLIDS 
     BODI=BOD5 
     SA=QAVE/OFR*1000000.0 
     VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   2 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(1,40.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(50) 
     GO TO 1 
   3 CALL RECTPR(1,40.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(50) 
   1 SLR=QAVE*SOLIDS*8.34/SA 
     WL=QMAX/WLR*1000000.0 
     PSP=(QAVE*SSI/100.0*SSR*8.34)*1.5 
     VPSP=PSP/SG/(UC/100.0)/8.34 
     SSE=SSI*(1.0-SSR/100.0) 
     PO4=PO4*(1.0-PO4R/100.0) 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     SOLIDS=SSE 
     TOTAL=SVOLU+VPSP 
     TSS=(VPSP*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(VPSP*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(VPSP*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SETSO=0.0 
     OAG=0.0 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE LRIMIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),OFR   ),(QQ(2),TD    ),(QQ(3),SG    ), 
    &(QQ( 4),UC    ),(QQ( 5),SSR   ),(QQ( 6),BODR  ),(QQ( 7),WLR   ), 
    &(QQ( 8),SWD   ),(QQ( 9),VPSP  ),(QQ(10),SSE   ),(QQ(11),BODE  ), 
    &(QQ(12),BODI  ),(QQ(13),SSI   ),(QQ(14),CODR  ),(QQ(15),TKNR  ), 
    &(QQ(16),CODE  ),(QQ(17),TKNE  ),(QQ(18),PO4R  ),(QQ(19),SA    ), 
    &(QQ(20),WL    ),(QQ(21),SLR   ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSST),(QQ(25),RSMS) 
     DATA IA/'I'/ 
     DATA LIST/'SURF','DETE','SPEC','UNDE','REMO','WEIR','SIDE','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 101 I=1,12 
 100 FORMAT(A4,A2,74A1) 
     IF(KTYPE.EQ.LIST(I))GO TO 102 
 101 CONTINUE 
     WRITE(6,103)KTYPE 
 103 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
 102 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 OFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 TD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     GO TO 50 
   5 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(5) 
     DO 20 I=3,7 
  20 ID(MODT,I)=IA 
     GO TO 50 
   6 WLR=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   8 CALL INIT(RR,QQ,25) 
     RETURN 
   9 COSTES=VALUE(1) 
     GO TO 50 
  12 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  10 RECT=1.0 
     GO TO 50 
  11 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE LRIMOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),OFR   ),(QQ(2),TD    ),(QQ(3),SG    ), 
    &(QQ( 4),UC    ),(QQ( 5),SSR   ),(QQ( 6),BODR  ),(QQ( 7),WLR   ), 
    &(QQ( 8),SWD   ),(QQ( 9),VPSP  ),(QQ(10),SSE   ),(QQ(11),BODE  ), 
    &(QQ(12),BODI  ),(QQ(13),SSI   ),(QQ(14),CODR  ),(QQ(15),TKNR  ), 
    &(QQ(16),CODE  ),(QQ(17),TKNE  ),(QQ(18),PO4R  ),(QQ(19),SA    ), 
    &(QQ(20),WL    ),(QQ(21),SLR   ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSST),(QQ(25),RSMS) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0LIME TREATMENT - PRIMARY CLARIFIER') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ID(MODT,1),OFR 
 101 FORMAT('0',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/DAY/SQFT') 
     WRITE(6,102)SA 
 102 FORMAT('   SURFACE AREA                     ',E9.3,' SQFT') 
     WRITE(6,103)ID(MODT,9),SWD 
 103 FORMAT(' ',A1,' SIDE WATER DEPTH                 ',E9.3,' FEET') 
     WRITE(6,104)TD 
 104 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,105)SLR 
 105 FORMAT('   SOLID LOADING                    ',E9.3,' LG/SQFT/DAY') 
     WRITE(6,106)ID(MODT,8),WLR 
 106 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/DAY/FT') 
     WRITE(6,107)WL 
 107 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)VPSP 
 108 FORMAT('   VOLUME OF SLUDGE PRODUCED        ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,3),SSR 
 109 FORMAT(' ',A1,' SUSPENDED SOLIDS REMOVAL         ',E9.3, 
    > ' PERCENT') 
     WRITE(6,110)ID(MODT,4),BODR 
 110 FORMAT(' ',A1,' BOD REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 310 FORMAT(' ',A1,' PO4 REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 117 FORMAT(' ',A1,' COD REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 118 FORMAT(' ',A1,' TKN REMOVAL                      ',E9.3, 
    > ' PERCENT') 
     WRITE(6,117)ID(MODT,5),CODR 
     WRITE(6,118)ID(MODT,6),TKNR 
     WRITE(6,310)ID(MODT,7),PO4R 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   2 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(1,40.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 1 
   3 CALL RECTPR(1,40.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   1 RETURN 
     END 
     SUBROUTINE LSIDIN(RR) 
     REAL LIQUDA 
     DIMENSION RR(1),LISTW(21) 
     COMMON/LIQUID/LIQUDA(22) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     DATA LISTW/'MINI','AVER','MAXI','TEMP','SUSP','VOLA','BOD5', 
    >'SBOD','COD ','SCOD','PH  ','CATI','ANIO','TKN ','PO4 ', 
    >'NH3 ','SETT','OIL ','NO2 ','NO3 ','END'/ 
     DO 3 I=1,22 
   3 RR(I)=LIQUDA(I) 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,21 
     IF(KTYPE.EQ.LISTW(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS NOT A VALID LIQUID SIDE STREAM CARD') 
     GO TO 50 
  51 FORMAT(A4,A2,74A1) 
  53 IF(I.GE.21)GO TO 55 
     RR(I)=VALUE(1) 
     IF(I.EQ.2)RR(22)=VALUE(2) 
     IF(I.EQ.4)RR(21)=VALUE(1) 
     IF(I.EQ.4)RR(4)=VALUE(2) 
     GO TO 50 
  55 IF(RR(1).EQ.0.0)RR(1)=RR(2) 
     IF(RR(3).EQ.0.0)RR(3)=RR(2) 
     IF(RR(2).EQ.0.0)GO TO 1 
     RETURN 
   1 WRITE(6,2) 
   2 FORMAT('0',70X,'*** ZERO AVERAGE SIDE STREAM FLOW'/ 
    >' ',74X,'MAY CAUSE DIVISION BY ZERO') 
     RETURN 
     END 
     SUBROUTINE MECHPR(MOD,QAVG,VC,VS,V,HP,XSXSA,FNUM,IQU, 
    >RSSA,RSST) 
  MOD = 1   CONTACT STABILIZATION   COMPLETE MIX 
  MOD = 2   CONTACT STABILIZATION   PLUG FLOW 
   MOD = 3   OTHERS     COMPLETE MIX 
   MOD = 4   OTHERS     PLUG FLOW 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION HPOS(14) 
     DATA HPOS/5.0,7.5,10.0,15.0,20.0,25.0,30.0,40.0,50.0,60.0, 
    > 75.0,100.0,125.0,150.0/ 
     IF(IQU.NE.0)GO TO 678 
     WRITE(6,998)MOD,QAVG,VC,VS,V,HP 
 998 FORMAT(' MECHPR',I5,5E11.5) 
     SSXSA=XSXSA 
     ECFT=1.0 
     IF(ECFT.LT.1.00)ECFT=1.00 
     ECFA=1.0 
     IF(ECFA.LT.1.00)ECFA=1.00 
     IF(MOD.GT.2)GO TO 1 
     VD=(VC+VS)*ECFT*10.0**6/7.48 
     HPD=HP*ECFA 
     NB=QAVG/100.0+1.00 
     QPB=QAVG/NB 
     NT=4 
     IF(QPB.GT.10.0)NT=6 
     IF(QPB.GT.20.0)NT=8 
     IF(QPB.GT.30.00)NT=10 
     IF(QPB.GT.40.0)NT=12 
     IF(QPB.GT.50.0)NT=14 
     IF(QPB.GT.70.0)NT=16 
     NA=1 
     IF(QPB.GT.10.0)NA=2 
     IF(QPB.GT.30.0)NA=3 
     IF(QPB.GT.70.0)NA=4 
     GO TO 2 
   1 VD=V*ECFT*10.0**6/7.48 
     HPD=HP*ECFA 
     NB=QAVG/100.0+1.0 
     QPB=QAVG/NB 
     NT=2 
     IF(QPB.GT.2.0)NT=3 
     IF(QPB.GT.4.0)NT=4 
     IF(QPB.GT.10.0)NT=6 
     IF(QPB.GT.20.0)NT=8 
     IF(QPB.GT.30.0)NT=10 
     IF(QPB.GT.40.0)NT=12 
     IF(QPB.GT.50.0)NT=14 
     IF(QPB.GT.70.0)NT=16 
     NA=1 
     IF(QPB.GT.10.0)NA=2 
     IF(QPB.GT.30.0)NA=3 
     IF(QPB.GT.70.0)NA=4 
   2 HPN=HPD/(NB*NT*NA) 
     IF(HPN.GT.150.0.AND.NT.GE.4)NT=NT+2 
     IF(HPN.GT.150.0.AND.NT.LT.4)NT=NT+1 
     IF(HPN.GT.150.0)GO TO 2 
     DO 3 I=1,14 
     IF(HPN.LE.HPOS(I))GO TO 4 
   3 CONTINUE 
     I=14 
   4 HPSN=HPOS(I) 
     HPT=NB*NT*NA*HPSN 
     VN=VD/NB/NT 
     DW=4.816*HPSN**0.2467 
     IF(HPSN.GT.100.0)DW=15.0 
     W=SQRT(VN/DW/NA) 
     FL=NA*W 
     PGW=20.0+0.3*QAVG/NB 
     VEW=3.0*((2.0*W+18.5)*(W+17.0)+(2.0*W+26.5)*(W+25.0)) 
     IF(NT.EQ.3)VEW=3.0*((3.00*W+28.0)*(W+25.0)+(3.0*W+20.0)*(W+17.0)) 
     IF(NT.LE.3)GO TO 5 
     FLS=2.0*FL+PGW+16.0 
     WS=0.50*NT*W+14.50 
     VEW=3.00*NB*((FLS+4.0)*(WS+4.0)+(FLS+12.0)*(WS+12.0)) 
   5 VCS=1.50*(2.0*W+14.5)*(W+13.0) 
     IF(NT.EQ.3)VCS=1.50*(3.00*W+16.0)*(W+13.0) 
     IF(NT.GE.4)VCS=1.50*FLS*WS 
     IF(MOD.EQ.2.OR.MOD.EQ.4)GO TO 6 
     VCW=W*(8.75*DW+88.0) 
     IF(NT.EQ.3)VCW=6.0*(W+2.0)*(1.25*DW+13.45)+5.0*W*(DW+3.0) 
     IF(NT.GT.3)VCW=NB*(4.00*FL*(1.25*(DW+3.0)+9.7)+(NT-2)*FL* 
    > (1.25*DW+31.0)+2.5*NT*W*(DW+3.0)) 
     GO TO 7 
   6 VCW=W*(1.25*DW+11.0)+(6.0*W+9.0)*(1.25*DW+3.75) 
     IF(NT.EQ.3)VCW=(1.25*DW+11.0)*(3.0*W+6.0)+(1.25*DW+3.75)*(7.0*W+ 
    > 6.0) 
     IF(NT.GE.4)VCW=(NT/2.0*(FL+3.0)*(1.25*DW+11.0)+((0.50*NT+2.0)* 
    > (FL+3.0)+2.0*NT*W)*(1.25*DW+3.75))*NB 
   7 VCG=0.0 
     IF(NT.LT.4)GO TO 8 
     VCGC=NB*1.5*PGW*(NT*W/2.0+0.75*NT+1.5) 
     VCGW=2.0*PGW*NB*(DW+3.0) 
     VCG=VCGC+VCGW 
   8 X=5.0+0.078*HPSN 
     VCP=(X**2+5.6*(DW+2.0))*NT*NA*NB 
     VCWB=2.0*(W-X)*NB*NT*NA 
     VCST=VCS 
     VCWT=VCW+VCG+VCP+VCWB 
     FLHR=4.0*W+11.0+2.0*(3.0*X+W-4.0) 
     IF(NT.EQ.3)FLHR=6.0*W+10.0+3.0*(3.0*X+W-4.0) 
     IF(NT.LT.4)GO TO 9 
     FLHR=(PGW+NT*W+(FL+3.0-4.0*NA)*(NT+2)+NA*NT*(3.0*X+W-4.0))*NB 
     IF(NT/2.EQ.NT/4*2)FLHR=(PGW+NT*W+(FL+3.0-4.0*NA)*NT+NA*NT*(3.0*X+W 
    > -4.0))*NB 
   9 TICA=NB*NT*NA*HPSN 
     OMH=242.40*TICA**0.3731 
     IF(TICA.GE.200.0)OMH=100.0*TICA**0.5425 
     FMMH=106.3*TICA**0.4031 
     IF(TICA.GT.100.0)FMMH=42.6*TICA**0.5956 
     FKWH=0.85*0.90*24.0*365.0*TICA 
     OMMP=4.225-0.975*ALOG10(TICA) 
     RS=20.0 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCWT/27.0*UPICW 
     COSTCS=VCST/27.0*UPICS 
     RSXSA=0.2148*HPSN**0.513 
     IF(SSXSA.EQ.0.0)SSXSA=16300.0*FMSECI/491.60 
     CSXSA=SSXSA*RSXSA 
     FIMH=39.0+0.55*HPSN 
     IF(HPSN.GT.60.0)FIMH=61.3+0.18*HPSN 
     CH=0.1*FIMH 
     PMINC=23.0 
     FIEC=(CSXSA*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR)*NB*NT*NA 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSSA,RC1) 
     COSTHR=FLHR*UPIHR 
     CC=(COSTE+COSTCW+COSTCS+FIEC+COSTHR)*CF 
     PRIN=(COSTE+COSTCW+COSTCS+COSTHR)*CF 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=FIEC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL MECHQU(QAVG,NT,NA,NB,VD,VN,HPSN,DW,W,FL, 
    >PGW,FLS,WS,VEW,X,VCST,VCWT,FLHR,TICA,OMH,FMMH,FKWH,OMMP,MOD) 
     RETURN 
     END 
     SUBROUTINE MECHQU(QAVG,NT,NA,NB,VD,VN,HPSN,DW,W,FL,PGW,FLS,WS,VEW, 
    >X,VCST,VCWT,FLHR,TICA,OMH,FMMH,FKWH,OMMP,MOD) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR MECHANICAL AERATION SYSTEM') 
     IF(MOD.EQ.1.OR.MOD.EQ.3)WRITE(6,30) 
  30 FORMAT('0COMPLETELY MIXED FLOW') 
     IF(MOD.EQ.2.OR.MOD.EQ.4)WRITE(6,31) 
  31 FORMAT('0PLUG FLOW') 
     WRITE(6,2)QAVG 
2    FORMAT(' AVERAGE DAILY FLOW',T45,E9.3,' MGD') 
     WRITE(6,3)NT 
3    FORMAT(' TOTAL NUMBER OF TANKS',T45,I9) 
     WRITE(6,4)NA 
4    FORMAT(' NUMBER OF AERATORS PER TANK',T45,I9) 
     WRITE(6,5)NB 
5    FORMAT(' NUMBER OF BATTERIES OF UNITS',T45,I9) 
     WRITE(6,8)HPSN 
8    FORMAT(' CAPACITY OF EACH INDIVIDUAL AERATOR',T45,E9.3,' HP') 
     WRITE(6,25)VN 
  25 FORMAT(' ACTUAL VOLUME PER TANK',T45,E9.3,' CU FT') 
     WRITE(6,9)DW 
9    FORMAT(' WATER DEPTH OF THE AERATION TANKS',T45,E9.3,' FEET') 
     WRITE(6,10)W 
10   FORMAT(' WIDTH OF AERATION TANK',T45,E9.3,' FEET') 
     WRITE(6,11)FL 
11   FORMAT(' LENGTH OF AERATION TANK',T45,E9.3,' FEET') 
     WRITE(6,12)PGW 
12   FORMAT(' PIPING GALLERY WIDTH',T45,E9.3,' FEET') 
     IF(NT.GT.3)WRITE(6,13)FLS 
13   FORMAT(' LENGTH OF THE BASIN SLAB',T45,E9.3,' FEET') 
     IF(NT.GT.3)WRITE(6,14)WS 
14   FORMAT(' WIDTH OF THE BASIN SLAB',T45,E9.3,' FEET') 
     WRITE(6,15)VEW 
15   FORMAT(' QUANTITY OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,16)X 
16   FORMAT(' WIDTH OF THE PLATFORM',T45,E9.3,' FEET') 
     WRITE(6,17)VCST 
17   FORMAT(' REINFORCED SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,18)VCWT 
18   FORMAT(' REINFORCED WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,19)FLHR 
19   FORMAT(' HANDRAIL LENGTH',T45,E9.3,' FEET') 
     WRITE(6,20)TICA 
20   FORMAT(' TOTAL CAPACITY OF AERATION EQUIPMENT',T45,E9.3,' HP') 
     WRITE(6,21)OMH 
21   FORMAT(' OPERATIONAL MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,22)FMMH 
22   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,23)FKWH 
23   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
     WRITE(6,24)OMMP 
24   FORMAT(' O AND M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     RETURN 
     END 
     SUBROUTINE MHINEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION THA(59),OD(59),NH(59) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),WSLR),(QQ(2),PDSPD),(QQ(3),DSLR), 
    >(QQ(4),RTHA),(QQ(5),ODF),(QQ(6),THAF),(QQ(7),CBHP),(QQ(8),NUM), 
    >(QQ(9),CBSCFM),(QQ(10),CLHP),(QQ(11),CLSCFM),(QQ(12),DPY) 
    > ,(QQ(13),COSTES),(QQ(14),XOSOIL),(QQ(15),RSIS),(QQ(16),RSST) 
     DATA THA/85.0,98.0,112.0,125.0,126.0,140.0,145.0,166.0, 
    >187.0,193.0,208.0,225.0,256.0,276.0,288.0,319.0,323.0,351.0, 
    >364.0,383.0,411.0,452.0,510.0,560.0,575.0,672.0,760.0,845.0, 
    >857.0,944.0,988.0,1041.0,1068.0,1117.0,1128.0,1249.0,1260.0, 
    >1268.0,1400.0,1410.0,1483.0,1540.0,1580.0,1591.0,1660.0,1675.0 
    >,1752.0,1849.0,1875.0,1933.0,2060.0,2084.0,2090.0,2275.0, 
    >2350.0,2464.0,2600.0,2860.0,3120.0/ 
     DATA OD/3*6.75,7.75,2*6.75,3*7.75,9.25,7.75,2*9.25,10.75,2*9.25, 
    >10.75,9.25,10.75,9.25,4*10.75,3*14.25,16.75,14.25,14.25,16.75, 
    >14.25,18.75,16.75,14.25,18.75,16.75,20.25,16.75,18.75, 
    >20.25,16.75,22.25,18.75,20.25,16.75,18.75,22.25,20.25,18.75, 
    >20.25,22.25,18.75,20.25,22.25,20.25,3*22.25/ 
     DATA NH/6,7,8,6,9,10,7,8,9,6,10,7,8,6,9,10,7,11,8,12,9,10, 
    >11,12,6,7,8,6,9,10,7,11,6,8,12,7,9,6,10,8,7,11,6,9,8,12,10,7,9,11, 
    >10,8,12,11,9,12,10,11,12/ 
     CALL INIT(QQ,RR,16) 
     PDSPD=PVOLU*8.34*PSOLID/100.0*365.0/DPY 
     DSLR=WSLR*PSOLID*24.0/100.0 
     RTHA=PDSPD/DSLR 
     NOFUR=RTHA/3120.0+0.99 
     IF(NOFUR.LT.1)NOFUR=1 
     RTHA=RTHA/NOFUR 
     DO 1 I=1,59 
     IF(THA(I).GT.RTHA)GO TO 2 
   1 CONTINUE 
   2 THAF=THA(I) 
     ODF=OD(I) 
     NUM=NH(I) 
     CBHP=0.15*WSLR*THAF/2000.0 
     CBSCFM=22.5*WSLR*THAF/2000.0 
     CLHP=0.08*WSLR*THAF/2000.0 
     CLSCFM=36.0*WSLR*THAF/2000.0 
     PVOLU=00.0 
     PSOLID=0.00 
     PVOLAT=0.0 
   4 CALL MHINPR(NUM,ODF,PDSPD,THAF,COSTES,XOSOIL,NOFUR,0,RSIS,RSST) 
     CALL USEREX(63) 
   5 CALL INIT(RR,QQ,16) 
     RETURN 
     END 
     SUBROUTINE MHININ(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1),LIST(5) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),WSLR),(QQ(2),PDSPD),(QQ(3),DSLR), 
    >(QQ(4),RTHA),(QQ(5),ODF),(QQ(6),THAF),(QQ(7),CBHP),(QQ(8),NUM), 
    >(QQ(9),CBSCFM),(QQ(10),CLHP),(QQ(11),CLSCFM),(QQ(12),DPY) 
    > ,(QQ(13),COSTES),(QQ(14),XOSOIL),(QQ(15),RSIS),(QQ(16),RSST) 
     DATA LIST/'WET ','END','DAYS','ESTI','REPL'/ 
     DATA IA/'I'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,16) 
  50 READ(5,101)IDENT,IXX,KLM 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5),I 
   1 WSLR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 CALL INIT(RR,QQ,16) 
     RETURN 
   3 DPY=VALUE(1) 
     GO TO 50 
   4 COSTES=VALUE(1) 
     XOSOIL=VALUE(2) 
     GO TO 50 
   5 RSIS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE MHINOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),WSLR),(QQ(2),PDSPD),(QQ(3),DSLR), 
    >(QQ(4),RTHA),(QQ(5),ODF),(QQ(6),THAF),(QQ(7),CBHP),(QQ(8),NUM), 
    >(QQ(9),CBSCFM),(QQ(10),CLHP),(QQ(11),CLSCFM),(QQ(12),DPY) 
    > ,(QQ(13),COSTES),(QQ(14),XOSOIL),(QQ(15),RSIS),(QQ(16),RSST) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0MULTIPLE HEARTH INCINERATION') 
     CALL INIT(QQ,RR,16) 
 101 FORMAT('0  DRY SOLIDS PRODUCED              ',E9.3,' LBS/DAY') 
 102 FORMAT('   DRY SOLIDS LOADING RATE          ',E9.3,' LB/HR/SQFT') 
 103 FORMAT(' ',A1,' WET SLUDGE LOADING RATE          ',E9.3, 
    >' LB/HR/SQFT') 
 104 FORMAT('   HEARTH AREA REQUIRED/FURNACE     ',E9.3,' SQ FT') 
 105 FORMAT('   HEARTH AREA FURNISHED/FURNACE    ',E9.3,' SQ FT') 
 106 FORMAT('   OUTSIDE DIAMETER OF HEARTH       ',E9.3,' FEET') 
 107 FORMAT('   NUMBER OF HEARTHS                ',I9,' HEARTHS ') 
 108 FORMAT('   COMBUSTION AIR HORSEPOWER        ',E9.3,' HP') 
 109 FORMAT('   COMBUSTION AIR SCFM              ',E9.3,' SCFM') 
 110 FORMAT('   COOLING AIR HORSEPOWER           ',E9.3,' HP') 
 111 FORMAT('   COOLING AIR SCFM                 ',E9.3,' SCFM') 
     WRITE(6,101)PDSPD 
     WRITE(6,102)DSLR 
     WRITE(6,103)ID(MODT,1),WSLR 
     WRITE(6,104)RTHA 
     WRITE(6,105)THAF 
     WRITE(6,106)ODF 
     WRITE(6,107)NUM 
     WRITE(6,108)CBHP 
     WRITE(6,109)CBSCFM 
     WRITE(6,110)CLHP 
     WRITE(6,111)CLSCFM 
     WRITE(6,121)STARDA 
     CALL MHINPR(N,OD,PDSPD, 
    >THAF,COSTES,XOSOIL,NOFXX,1,RSIS,RSST) 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE MHINPR(N,OD,PDSPD,THA,XOSTES,XOSOIL,MOFUR,IQU,RSIS, 
    >RSST) 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.NE.0)GO TO 678 
     COSTES=XOSTES 
     NOFUR=MOFUR 
     FNUM=89.0 
     AB=4.0*OD**2*NOFUR 
     VCS=2.0*3.1416*(OD+4.0)**2*NOFUR 
     DSTPD=PDSPD/2000.0 
     OMH=1320.0*DSTPD**0.4014 
     IF(DSTPD.GT.3.1)OMH=1160.0*DSTPD**0.5483 
     IF(DSTPD.GT.23.0)OMH=319.0*DSTPD**0.9431 
     FMMH=616.0*DSTPD**0.3653 
     IF(DSTPD.GT.2.70)FMMH=488.0*DSTPD**0.5783 
     IF(DSTPD.GT.22.0)FMMH=184.0*DSTPD**0.9021 
     FKWH=30000.0*DSTPD**0.6843 
     IF(DSTPD.GT.10.0)FKWH=15000.0*DSTPD**0.9847 
     AF=3.70*10.0**9*DSTPD**0.9544 
     COSOIL=XOSOIL 
     IF(XOSOIL.EQ.0.0)COSOIL=0.75*ENRCCI/2470.0 
     OILC=AF/140000.0*COSOIL 
     OMMP=5.0 
     COSTB=AB*UPIBC 
     COSTCS=VCS*UPICS/27.0 
     COSTR=0.0375*THA+43.0 
     IF(COSTES.EQ.0.0)COSTES=1190000.0*FMSECI/491.60 
     COSTIE=COSTR*COSTES*NOFUR/100.0 
     CC=COSTB+COSTCS+COSTIE 
     CALL AMORT(COSTIE,RSIS,RC1) 
     PRIN=COSTB+COSTCS 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=CC*OMMP/100.0+OILC 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC+OILC 
     XOD=OD 
     RETURN 
 678 IF(KCTL.NE.0)CALL MHINQU(XOD,NOFUR,AB,VCS,PDSPD,DSTPD,OMH,FMMH, 
    >FKWH,AF) 
     RETURN 
     END 
     SUBROUTINE MHINQU(OD,N,AB,VCS,PDSPD,DSTPD,OMH,FMMH,FKWH,AF) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR MULTIPLE HEARTH INCINERATION ') 
     WRITE(6,2)OD 
2    FORMAT('0OUTSIDE DIAMETER OF INCINERATOR SELECTED',T45,E9.3, 
    > ' FEET') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER OF FURNACES',T45,I9) 
     WRITE(6,4)AB 
4    FORMAT(' INCINERATOR BUILDING AREA',T45,E9.3,' SQ FT') 
     WRITE(6,5)VCS 
5    FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,6)PDSPD 
6    FORMAT(' TOTAL DRY SOLIDS PRODUCED',T45,E9.3,' LB/DAY') 
     WRITE(6,7)DSTPD 
7    FORMAT(' TOTAL DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,8)OMH 
8    FORMAT(' OPERATIONAL MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,9)FMMH 
9    FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,10)FKWH 
10   FORMAT(' ELECTRICAL ENERGY REQUIRED ',T45,E9.3,' KWHR/YR') 
     WRITE(6,11)AF 
11   FORMAT(' AUXILIARY FUEL REQUIRED',T45,E9.3,' BTU/YR') 
     RETURN 
     END 
     SUBROUTINE MICREX(RR) 
     DIMENSION RR(1),DIAM(6),WIDTH(6),AREA(6) 
     EQUIVALENCE(QQ(1),VS),(QQ(2),SSR),(QQ(3),BODR), 
    >(QQ( 4),CODR  ),(QQ( 5),TKNR  ),(QQ( 6),PO4R  ),(QQ( 7),WWREQ ), 
    >(QQ( 8),XOSTSM),(QQ( 9),AS    ),(QQ(10),QPB   ),(QQ(11),NB    ), 
    >(QQ(12),NU    ),(QQ(13),DIA   ),(QQ(14),WID   ),(QQ(15),ASIF  ), 
    >(QQ(16),VCW   ),(QQ(17),VE    ),(QQ(18),FKWH  ),(QQ(19),AB    ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),RSST),(QQ(23),RSSM) 
     COMMON/QQCO/QQ(100) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    >CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     DATA DIAM/4.0,4.0,6.0,6.0,6.0,10.0/ 
     DATA WIDTH/2.0,4.0,4.0,6.0,8.0,10.0/ 
     DATA AREA/24.0,48.0,72.0,108.0,144.0,315.0/ 
     CALL INIT(QQ,RR,23) 
     AS=1000.0/1.44*QMAX/VS 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     PO4=PO4*(1.0-PO4R/100.0) 
     IF(FNH3.GT.TKN)FNH3=TKN 
     OAG=0.0 
     SETSO=0.0 
     QP=0.15*QAVE 
     NB=QAVE/100.0+0.95 
     IF(NB.LT.1)NB=1 
     QPB=QAVE/NB 
     NU=2 
     IF(QPB.GT.1.0)NU=3 
     IF(QPB.GT.4.0)NU=4 
     IF(QPB.GT.8.0)NU=8 
     IF(QPB.GT.15.0)NU=15 
     IF(QPB.GT.30.0)NU=25 
     IF(QPB.GT.50.0)NU=55 
     ASI=AS/NB/NU 
     DO 1 I=1,6 
     IF(AREA(I).GE.ASI)GO TO 2 
   1 CONTINUE 
      I=6 
   2 DIA=DIAM(I) 
     WID=WIDTH(I) 
     ASIF=AREA(I) 
     VCW=2.5*27.0*AS**0.69 
     IF(AS.GT.2820.0)VCW=0.213*27.0*AS 
     VE=1.589*27.0*AS**0.929 
     FKWH=1000.0*AS**0.866 
     IF(AS.GT.4500.0)FKWH=327.0*AS 
     AB=1.322*AS**0.9 
     OMH=160.0*QAVE 
     FMMH=103.0*QAVE 
     COSTE=VE/27.0*UPIEX 
     COSTC=VCW/27.0*UPICW 
     COSTR=0.231*ASIF**0.318 
     IF(ASIF.GT.108.0)COSTR=0.032*ASIF**0.748 
     COSTSM=XOSTSM 
     IF(COSTSM.EQ.0.0)COSTSM=52000.0*FMSECI/491.6 
     COSTMS=COSTSM*COSTR*NB*NU 
     FIEC=1.25*COSTMS 
     COSTB=AB*UPIBC 
     TBCC=1.15*(COSTE+COSTC+FIEC+COSTB) 
     PRIN=1.15*FIEC 
     CALL AMORT(PRIN,RSSM,RC1) 
     PRIN=1.15*(COSTE+COSTC+COSTB) 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=FIEC*0.15 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=4.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(11) 
     CALL INIT(RR,QQ,23) 
     RETURN 
     END 
     SUBROUTINE MICRIN(RR,ID,MODT) 
     DIMENSION LIST(6) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE(QQ(1),VS),(QQ(2),SSR),(QQ(3),BODR), 
    >(QQ( 4),CODR  ),(QQ( 5),TKNR  ),(QQ( 6),PO4R  ),(QQ( 7),WWREQ ), 
    >(QQ( 8),XOSTSM),(QQ( 9),AS    ),(QQ(10),QPB   ),(QQ(11),NB    ), 
    >(QQ(12),NU    ),(QQ(13),DIA   ),(QQ(14),WID   ),(QQ(15),ASIF  ), 
    >(QQ(16),VCW   ),(QQ(17),VE    ),(QQ(18),FKWH  ),(QQ(19),AB    ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),RSST),(QQ(23),RSSM) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DATA LIST/'HYDR','REMO','WASH','ESTI','END','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,23) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,6 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6),I 
   1 VS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(5) 
     GO TO 50 
   3 WWREQ=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   4 XOSTSM=VALUE(1) 
     GO TO 50 
   5 CALL INIT(RR,QQ,23) 
     RETURN 
   6 RSSM=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE MICROT(RR,ID,MODT) 
     COMMON ICTL,KCTL 
     DIMENSION RR(1),ID(3,1) 
     EQUIVALENCE(QQ(1),VS),(QQ(2),SSR),(QQ(3),BODR), 
    >(QQ( 4),CODR  ),(QQ( 5),TKNR  ),(QQ( 6),PO4R  ),(QQ( 7),WWREQ ), 
    >(QQ( 8),XOSTSM),(QQ( 9),AS    ),(QQ(10),QPB   ),(QQ(11),NB    ), 
    >(QQ(12),NU    ),(QQ(13),DIA   ),(QQ(14),WID   ),(QQ(15),ASIF  ), 
    >(QQ(16),VCW   ),(QQ(17),VE    ),(QQ(18),FKWH  ),(QQ(19),AB    ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),RSST),(QQ(23),RSSM) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,23) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0MICROSCREENING') 
 101 FORMAT('0',A1,' MICROSCREEN LOADING RATE',T45,E9.3,' GPM/SQFT') 
 102 FORMAT(' ',A1,' QUANTITY OF WASH WATER REQUIRED',T45,E9.3, 
    >' PERCENT') 
 103 FORMAT('   AREA OF MICROSCREENS REQUIRED',T45,E9.3,' SQ FT') 
 104 FORMAT('0QUANTITIES FOR MICROSCREENING') 
 105 FORMAT('   NUMBER OF BATTERIES',T45,I9) 
 106 FORMAT('   NUMBER OF UNITS/BATTERY',T45,I9) 
 107 FORMAT('   DRUM DIAMETER',T45,E9.3,' FEET') 
 108 FORMAT('   DRUM WIDTH',T45,E9.3,' FEET') 
 109 FORMAT('   AREA OF SELECTED UNIT',T45,E9.3,' SQ FT') 
 110 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 111 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 112 FORMAT('   AREA OF BUILDING',T45,E9.3,' SQ FT') 
 113 FORMAT('   ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 114 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 115 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,101)ID(MODT,1),VS 
     WRITE(6,102)ID(MODT,2),WWREQ 
     WRITE(6,103)AS 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,104) 
     WRITE(6,105)NB 
     WRITE(6,106)NU 
     WRITE(6,107)DIA 
     WRITE(6,108)WID 
     WRITE(6,109)ASIF 
     WRITE(6,111)VE 
     WRITE(6,110)VCW 
     WRITE(6,112)AB 
     WRITE(6,113)FKWH 
     WRITE(6,114)OMH 
     WRITE(6,115)FMMH 
     RETURN 
     END 
     SUBROUTINE NEUTEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),R     ),(QQ(3),HPR   ), 
    &(QQ( 4),RF    ),(QQ( 5),VOL   ),(QQ( 6),HP    ),(QQ( 7),FMT   ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,7) 
     RF=QAVE*R*1000000.0 
     CALL PRICE(QAVE,0.0,0.0,17,RSST) 
     VOL=FMT*QAVE*1000000.0/24.0/60.0/7.48 
     HP=HPR*VOL/1000.0*7.48 
     PH=7.0 
     CALL INIT(RR,QQ,7) 
     RETURN 
     END 
     SUBROUTINE NEUTIN(RR) 
     DIMENSION LIST(5) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),R     ),(QQ(3),HPR   ), 
    &(QQ( 4),RF    ),(QQ( 5),VOL   ),(QQ( 6),HP    ),(QQ( 7),FMT   ) 
     DATA LIST/'BUFF','DEGR','END ','MIXI','REPL'/ 
     CALL INIT(QQ,RR,7) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
  52 GO TO (1,2,3,4,5),I 
   1 R=VALUE(1) 
     GO TO 50 
   2 HPR=VALUE(1) 
     GO TO 50 
   3 CALL INIT(RR,QQ,7) 
     RETURN 
   4 FMT=VALUE(1) 
     GO TO 50 
   5 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE NEUTOT(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),R     ),(QQ(3),HPR   ), 
    &(QQ( 4),RF    ),(QQ( 5),VOL   ),(QQ( 6),HP    ),(QQ( 7),FMT   ) 
     COMMON /STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,7) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0NEUTRALIZATION') 
     WRITE(6,201)RF 
 201 FORMAT('0BUFFER CAPACITY           ',E9.3,' LBS/DAY') 
     WRITE(6,202)VOL 
 202 FORMAT(' VOLUME OF MIXING TANK     ',E9.3,' CU FT') 
     WRITE(6,203)FMT 
 203 FORMAT(' DETENTION TIME            ',E9.3,' MIN') 
     WRITE(6,204)HP 
 204 FORMAT(' HORSEPOWER                ',E9.3,' HP') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,7) 
     RETURN 
     END 
     SUBROUTINE NITREX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    >BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),ST),(QQ(2),WT),(QQ(3),FN1W),(QQ(4),FN1S), 
    >(QQ(5),FK),(QQ(6),YB),(QQ(7),FKM),(QQ(8),STE),(QQ(9),ALPHA), 
    >(QQ(10),BETA),(QQ(11),P),(QQ(12),HPRM),(QQ(13),AFRM),(QQ(14),TYPE) 
    >,(QQ(15),SSXSA),(QQ(16),COSTPD),(QQ(17),SRT),(QQ(18),SF), 
    >(QQ(19),HT),(QQ(20),V),(QQ(21),FIALK),(QQ(22),OTE),(QQ(23),RATIO) 
    >,(QQ(24),ALKT),(QQ(25),COSTPS),(QQ(26),HP),(QQ(27),AF), 
    >(QQ(28),O2R),(QQ(29),COSTPH) 
    >,(QQ(30),RSSA),(QQ(31),RSPD),(QQ(32),RSPH),(QQ(33),RSPS), 
    >(QQ(34),RSST) 
     CALL INIT(QQ,RR,34) 
     RATIO=BOD5/FNH3 
     NUM=NUM+1 
     DO=2.0 
     FKD=FK 
     FMUNS=0.47*EXP(0.098*(ST-15.0))*(TKN-FN1S)/((TKN-FN1S)+ 
    >10.0**(0.051*ST-1.158)*ALOG(TKN/FN1S))*DO/(DO+1.3) 
     IF(PH.LT.7.2)FMUNS=FMUNS*(1.0-0.833*(7.2-PH)) 
     FMUNW=0.47*EXP(0.098*(WT-15.0))*(TKN-FN1W)/((TKN-FN1W)+ 
    >10.0**(0.051*WT-1.158)*ALOG(TKN/FN1W))*DO/(DO+1.3) 
     IF(PH.LT.7.2)FMUNW=FMUNW*(1.0-0.833*(7.2-PH)) 
     SF1 =0.375+0.125*(QMAX/QAVE) 
     SF2 =0.935-0.271*ALOG(QAVE) 
     SF3S=1.03+0.053*FN1S 
     SF3W=1.03+0.053*FN1W 
     SFS=SF1+SF2+SF3S 
     SFW=SF1+SF2+SF3W 
     SRTS=SFS/FMUNS 
     SRTW=SFW/FMUNW 
     SRT=SRTW 
     IF(SRTS.GT.SRT)SRT=SRTS 
     QB=(1.0/SRT+FKD)/YB 
     HT=BOD5/QB/2000.0 
     V=QAVE*HT 
     EBODS=BOD5/(FKM*HT*24.0+1.0) 
     FMLVSS=(BOD5-EBODS)/QB/HT 
     FMLSS=1.1*FMLVSS+SOLIDS*SRT/HT 
     SW=8.34*FMLSS*V/SRT 
     KADD=LQADD(32,MODT) 
     CALL CLAREX(FMLVSS,QMAX,SW,WS,EBOD,ESS,VOLAT,EBODS, 
    >UC,QAVE,BANKDA(KADD)) 
     NUM=NUM-2 
     COR=1.5*(BOD5-EBOD)/HT-1.42*FMLVSS/SRT 
     FN1=FN1S 
     IF(FN1W.LT.FN1)FN1=FN1W 
     FNOR=4.6*(TKN-FN1)/HT 
     SFOX=0.55*QMAX/QAVE 
     IF(QMAX/QAVE.LT.2.2)SFOX=1.2 
     OR=SFOX*(COR+FNOR)/24.0 
     O2R=OR*V*200.0 
     CS=14.652-0.41022*ST+0.00799*ST**2-0.000077774*ST**3 
     OTE=STE*(CS*BETA*P-DO)/9.17*ALPHA*1.02**(ST-20.0) 
     CALL AIREX(V,O2R,ALPHA,BETA,STE,OTE,HP,HPRM,AF,AFRM,TYPE,ST) 
     ALKD=7.14*(TKN-FN1) 
     ALKADD=0.0 
     IF(FIALK-ALKD.LT.60.0)ALKADD=60.0-(FIALK-ALKD) 
     ALKT=ALKADD*QAVE*8.34 
     SOLIDS=ESS 
     BOD5=EBOD 
     BOD5S=EBODS 
     SETSO=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     PH=7.20 
     PO4=PO4*0.7 
     TKND=TKN-(0.1*ESS+FN1) 
     TKN=0.10*ESS+FN1 
     FNH3=FN1 
     ANO2=0.0 
     ANO3=ANO3+TKND 
     OAG=0.0 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,V,HP,SSXSA,24.0,0,RSSA,RSST) 
     CALL USEREX(31) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,V,AF,COSTPD,COSTPH,24.0,0,RSPD,RSPH, 
    >RSST) 
     CALL USEREX(31) 
   4 SUMMDA(NUM,10)=ALKT*74.0/100.0 
     SUMMDA(NUM,14)=ALKT*365.0*74.0/100.0 
     NUM=NUM+1 
     CALL PUMPPR(1.0,QAVE,QAVE,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(31) 
     CALL INIT(RR,QQ,34) 
     RETURN 
     END 
     SUBROUTINE NITRIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(11),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ST),(QQ(2),WT),(QQ(3),FN1W),(QQ(4),FN1S), 
    >(QQ(5),FK),(QQ(6),YB),(QQ(7),FKM),(QQ(8),STE),(QQ(9),ALPHA), 
    >(QQ(10),BETA),(QQ(11),P),(QQ(12),HPRM),(QQ(13),AFRM),(QQ(14),TYPE) 
    >,(QQ(15),SSXSA),(QQ(16),COSTPD),(QQ(17),SRT),(QQ(18),SF), 
    >(QQ(19),HT),(QQ(20),V),(QQ(21),FIALK),(QQ(22),OTE),(QQ(23),RATIO) 
    >,(QQ(24),ALKT),(QQ(25),COSTPS),(QQ(26),HP),(QQ(27),AF), 
    >(QQ(28),O2R),(QQ(29),COSTPH) 
    >,(QQ(30),RSSA),(QQ(31),RSPD),(QQ(32),RSPH),(QQ(33),RSPS), 
    >(QQ(34),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'TEMP','EFFL','DECA','HETE','META','ESTI','DIFF','MECH', 
    >'ALKA','END','REPL'/ 
     CALL INIT(QQ,RR,34) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,11 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11),I 
   1 ST=VALUE(1) 
     WT=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FN1S=VALUE(1) 
     FN1W=VALUE(2) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 FK=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 YB=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 FKM=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   7 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFRM=VALUE(3) 
     STE=VALUE(4) 
     P=VALUE(5) 
     ID(MODT,6)=IA 
     GO TO 50 
   8 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPRM=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,7)=IA 
     GO TO 50 
   9 FIALK=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
  10 IF(P.EQ.0.0)P=1.0 
     CALL INIT(RR,QQ,34) 
     RETURN 
   6 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  11 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE NITROT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,OMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ST),(QQ(2),WT),(QQ(3),FN1W),(QQ(4),FN1S), 
    >(QQ(5),FK),(QQ(6),YB),(QQ(7),FKM),(QQ(8),STE),(QQ(9),ALPHA), 
    >(QQ(10),BETA),(QQ(11),P),(QQ(12),HPRM),(QQ(13),AFRM),(QQ(14),TYPE) 
    >,(QQ(15),SSXSA),(QQ(16),COSTPD),(QQ(17),SRT),(QQ(18),SF), 
    >(QQ(19),HT),(QQ(20),V),(QQ(21),FIALK),(QQ(22),OTE),(QQ(23),RATIO) 
    >,(QQ(24),ALKT),(QQ(25),COSTPS),(QQ(26),HP),(QQ(27),AF), 
    >(QQ(28),O2R),(QQ(29),COSTPH) 
    >,(QQ(30),RSSA),(QQ(31),RSPD),(QQ(32),RSPH),(QQ(33),RSPS), 
    >(QQ(34),RSST) 
     CALL INIT(QQ,RR,34) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0NITRIFICATION - SUSPENDED GROWTH SYSTEM') 
 201 FORMAT('0',A1,' SUMMER TEMPERATURE',T45,E9.3,' DEG C') 
 202 FORMAT(' ',A1,' WINTER TEMPERATURE',T45,E9.3,' DEG C') 
 203 FORMAT(' ',A1,' SUMMER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 204 FORMAT(' ',A1,' WINTER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 205 FORMAT(' ',A1,' DECAY COEFFICIENT',T45,E9.3,' /DAY') 
 206 FORMAT(' ',A1,' HETEROTROPHIC YIELD COEFFICIENT',T45,E9.3, 
    >' LB VSS/LB BOD5') 
 207 FORMAT(' ',A1,' METABOLIC FACTOR',T45,E9.3,' /HOUR') 
 208 FORMAT(' ',A1,' INFLUENT ALKALINITY',T45,E9.3,' MG/L') 
 209 FORMAT('   SOLIDS RETENTION TIME',T45,E9.3,' DAYS') 
 210 FORMAT('   HYDRAULIC DETENTION TIME',T45,E9.3,' DAYS') 
 211 FORMAT('   VOLUME OF AERATION TANK',T45,E9.3,' MIL GALLONS') 
 212 FORMAT('   REQUIRED ADDITIONAL ALKALINITY',T45,E9.3, 
    >' LB/DAY CACO3') 
     IF(RATIO.LT.2.0)WRITE(6,213)RATIO 
 213 FORMAT('0',70X,'**** NOTE - BOD5:NH3 RATIO IS',F6.2, 
    >/,82X,'CONSIDERATION SHOULD BE GIVEN TO AN ALTERNATE'/ 
    >82X,'PROCESS OR REDESIGN OF THE FIRST STAGE SYSTEM') 
     WRITE(6,201)ID(MODT,1),ST 
     WRITE(6,202)ID(MODT,1),WT 
     WRITE(6,203)ID(MODT,2),FN1S 
     WRITE(6,204)ID(MODT,2),FN1W 
     WRITE(6,205)ID(MODT,3),FK 
     WRITE(6,206)ID(MODT,4),YB 
     WRITE(6,207)ID(MODT,5),FKM 
     WRITE(6,208)ID(MODT,6),FIALK 
     WRITE(6,209)SRT 
     WRITE(6,210)HT 
     WRITE(6,211)V 
     WRITE(6,212)ALKT 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
     WRITE(6,120)STARDA 
     IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,V,HP,SSXSA,24.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,24.0,1,RSPD,RSPH, 
    >RSST) 
   4 CALL PUMPPR(1.0,QAVE,QAVE,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE NRBCEX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    >BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    >CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/EPACCI/EPACI,DIVSOR 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),A),(QQ(6),HD),(QQ(7),AS),(QQ(8),NSH),(QQ(9),VEW), 
    >(QQ(10),VCS),(QQ(11),VCW),(QQ(12),FKWH),(QQ(13),OMH), 
    >(QQ(14),FMMH),(QQ(15),OMMP),(QQ(16),XOSTES) 
    >,(QQ(17),RBCALK),(QQ(18),RBCREQ),(QQ(19),RSES),(QQ(20),RSST) 
     CALL INIT(QQ,RR,20) 
     FNUM=64.0 
     TCFS=1.41 
     IF(TS.LT.18.0)TCFS=0.0787*TS 
     TCFW=1.41 
     IF(TW.LT.18.0)TCFW=0.0787*TS 
     ANS=14135.6/TCFS*(8.6*ALOG(TKN/FN1S)+(TKN-FN1S)) 
     ANW=14135.6/TCFW*(8.6*ALOG(TKN/FN1W)+(TKN-FN1W)) 
     AN=ANS 
     IF(ANW.GT.AN)AN=ANW 
     FN1=FN1S 
     IF(FN1W.LT.FN1)FN1=FN1W 
     ALKD=7.14*(FNH3-FN1) 
     DALK=RBCALK-ALKD 
     ALKADD=0.0 
     IF(DALK.LT.60.0)ALKADD=60.0-DALK 
     RBCREQ=ALKADD*QAVE*8.34 
     SF=1.0+0.143*(QMAX/QAVE-2.5) 
     IF(SF.LT.1.0)SF=1.0 
     A=QAVE*AN*SF 
     HD=QAVE*10.0**6/A 
     NSH=A/150000.0+0.95 
     NMP=NSH 
     NB=NMP/8.0+0.9 
     NES=2*NB 
     NIS=NMP-NES 
     VEW=130.0*NES+142.0*NIS 
     VCS=23.0*NES+20.7*NIS 
     VCW=11.5*NES+8.6*NIS 
     FKWH=3.0*NSH*8760.0 
     FLOM=(1.25-0.025*NMP)*52.0*NMP 
     IF(NMP.GE.30)FLOM=26.0*NMP 
     OMH=0.3*FLOM 
     FMMH=0.7*FLOM 
     OMMP=2.0 
     CF=1.18 
     COSTE=VEW*UPIEX 
     COSTCW=VCW*UPICW 
     COSTCS=VCS*UPICS 
     COSTES=XOSTES 
     IF(COSTES.EQ.0.0)COSTES=34500.0*FMSECI/491.6 
     FIEC=1.15*COSTES*NMP 
     TBCC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSES,RC2) 
     OMMC=OMMP*FIEC/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,10)=RBCREQ*74.0/100.0 
     SUMMDA(NUM,14)=RBCREQ*74.0/100.0*365.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(71) 
     SETSO=0.0 
     BOD5=0.10*BOD5 
     BOD5S=0.10*BOD5S 
     COD=0.10*COD 
     CODS=0.10*CODS 
     PH=7.20 
     PO4=0.7*PO4 
     FN1=FN1S 
     IF(FN1W.LT.FN1)FN1=FN1W 
     TKND=TKN-0.10*SOLIDS-FN1 
     IF(TKND.LE.0.0)TKND=0.0 
     TKN=0.10*SOLIDS+FN1 
     FNH3=FN1 
     ANO2=0.0 
     ANO3=ANO3+TKND 
     OAG=0.0 
     CALL INIT(RR,QQ,20) 
     RETURN 
     END 
     SUBROUTINE NRBCIN(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(6),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),A),(QQ(6),HD),(QQ(7),AS),(QQ(8),NSH),(QQ(9),VEW), 
    >(QQ(10),VCS),(QQ(11),VCW),(QQ(12),FKWH),(QQ(13),OMH), 
    >(QQ(14),FMMH),(QQ(15),OMMP),(QQ(16),XOSTES),(QQ(17),RBCALK), 
    >(QQ(18),RBCREQ),(QQ(19),RSES),(QQ(20),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'TEMP','EFFL','ESTI','END','ALKA','REPL'/ 
     CALL INIT(QQ,RR,20) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,6 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6),I 
   1 TS=VALUE(1) 
     TW=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FN1S=VALUE(1) 
     FN1W=VALUE(2) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 XOSTES=VALUE(1) 
     GO TO 50 
   4 CALL INIT(RR,QQ,20) 
     RETURN 
   5 RBCALK=VALUE(1) 
     GO TO 50 
   6 RSES=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE NRBCOT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),A),(QQ(6),HD),(QQ(7),AS),(QQ(8),NSH),(QQ(9),VEW), 
    >(QQ(10),VCS),(QQ(11),VCW),(QQ(12),FKWH),(QQ(13),OMH), 
    >(QQ(14),FMMH),(QQ(15),OMMP),(QQ(16),XOSTES) 
    >,(QQ(17),RBCALK),(QQ(18),RBCREQ),(QQ(19),RSES),(QQ(20),RSST) 
     CALL INIT(QQ,RR,20) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0NITRIFICATION - ROTATING BIOLOGICAL CONTACTOR') 
 201 FORMAT('0',A1,' SUMMER TEMPERATURE',T45,E9.3,' DEGREES C') 
 202 FORMAT(' ',A1,' WINTER TEMPERATURE',T45,E9.3,' DEGREES C') 
 203 FORMAT(' ',A1,' SUMMER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 204 FORMAT(' ',A1,' WINTER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 205 FORMAT('   REQUIRED MEDIA SURFACE AREA',T45,E9.3,' SQ FT') 
 206 FORMAT('   DESIGN HYDRAULIC LOADING',T45,E9.3,' GPD/SQFT') 
 207 FORMAT(' I INFLUENT ALKALINITY',T45,E9.3,' MG/L') 
 208 FORMAT(' D INFLUENT ALKALINITY',T45,E9.3,' MG/L') 
 209 FORMAT('   REQUIRED ADDITIONAL ALKALINITY',T45,E9.3,' LBS/DAY') 
     WRITE(6,201)ID(MODT,1),TS 
     WRITE(6,202)ID(MODT,1),TW 
     WRITE(6,203)ID(MODT,2),FN1S 
     WRITE(6,204)ID(MODT,2),FN1W 
     IF(RBCALK.EQ.300.0)WRITE(6,208)RBCALK 
     IF(RBCALK.NE.300.0)WRITE(6,207)RBCALK 
     WRITE(6,209)RBCREQ 
     WRITE(6,205)A 
     WRITE(6,206)HD 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,300) 
 300 FORMAT('0QUANTITIES FOR ROTATING BIOLOGICAL CONTACTOR -', 
    > ' NITRIFICATION') 
 301 FORMAT('0NUMBER OF SHAFTS',T45,I9) 
 302 FORMAT(' SURFACE AREA PER SHAFT',T45,E9.3,' SQ FT') 
 303 FORMAT(' VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 304 FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 305 FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 306 FORMAT(' OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YR') 
 307 FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YR') 
 308 FORMAT(' ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,301)NSH 
     AA=A/NSH 
     WRITE(6,302)AA 
     VEW=27.0*VEW 
     VCS=27.0*VCS 
     VCW=27.0*VCW 
     WRITE(6,303)VEW 
     WRITE(6,304)VCS 
     WRITE(6,305)VCW 
     WRITE(6,306)OMH 
     WRITE(6,307)FMMH 
     WRITE(6,308)FKWH 
     RETURN 
     END 
     SUBROUTINE NTRFEX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    >BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/QQCO/QQ(100) 
     DIMENSION SAST(13),NTST(13) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),FN),(QQ(6),SLR),(QQ(7),V),(QQ(8),SA),(QQ(9),D),(QQ(10),RCR) 
    >,(QQ(11),XUPFM),(QQ(12),XODAS),(QQ(13),COSTPS),(QQ(14),VD), 
    > (QQ(15),SAD), 
    >(QQ(16),N     ),(QQ(17),VN    ),(QQ(18),DIA   ),(QQ(19),NCP   ), 
    > (QQ(20),FLCB  ),(QQ(21),VCW   ),(QQ(22),VCS   ),(QQ(23),VEW   ), 
    > (QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ) 
    >,(QQ(28),TRFALK),(QQ(29),TRFREQ) 
    >,(QQ(30),RSFM),(QQ(31),RSAS),(QQ(32),RSPS),(QQ(33),RSST) 
     DATA NTST/1,2,3,4,6,8,10,12,14,15,16,18,20/ 
     DATA SAST/2000.0,17700.,35400.,53100.,88500.,123900., 
    > 159300.,194700.,247800.,265500.,283200.,300900., 
    > 10.0E20/ 
     CALL INIT(QQ,RR,33) 
     FLNHES=4.5-0.115*TS 
     FLNHEW=4.5-0.115*TW 
     SRNOS=6900.0-190.0*TS 
     IF(FN1S.LT.FLNHES)SRNOS=(21246.0-52.733*TS)-3409.0*FN1S 
     SRNOW=6900.0-190.0*TW 
     IF(FN1W.LT.FLNHEW)SRNOW=(21246.0-52.733*TW)-3409.0*FN1W 
     VS=SRNOS/FN 
     VW=SRNOW/FN 
     FN1=FN1S 
     IF(FN1W.LT.FN1)FN1=FN1W 
     ALKD=7.14*(FNH3-FN1) 
     DALK=TRFALK-ALKD 
     ALKADD=0.0 
     IF(DALK.LT.60.0)ALKADD=60.0-DALK 
     TRFREQ=ALKADD*QAVE*8.34 
     V=VS 
     IF(VW.GT.V)V=VW 
     V=V*8.34*QAVE*(FNH3-FN1S) 
     SA=694.0*QAVE/SLR 
     D=V/SA 
     RCY=0.0 
     RCR=0.0 
     NSG=1 
     IF(D.LE.28.0)GO TO 1 
     D=28.0 
     SA =V/28.0 
   1 RCY=SLR*SA/694.0-QAVE 
     IF(RCY.LT.0.0)RCY=0.0 
     RCR=RCY/QAVE 
     RCRP=1.0+RCR 
     ECF=1.0 
     IF(ECF.LT.1.00)ECF=1.00 
     SAD=SA*ECF 
     VD=V*ECF 
     DO 14 I=1,13 
     IF(SAST(I).GT.SAD)GO TO 5 
  14 CONTINUE 
     I=13 
   5 NTS=NTST(I) 
     N=NTS*NSG 
     VN=VD/N 
     DIA=1.128*SQRT(VN/D) 
     VCWE=(D+3.00)*3.1416*DIA*0.5 
     NCP=0.00108*DIA**3.08+0.99 
     IF(DIA.GT.40.0)NCP=0.0739*DIA**1.935+0.99 
     VCWP=1.33333*NCP 
     FLCB=0.0119*N*DIA**2.963 
     IF(DIA.GT.40.0)FLCB=0.364*N*DIA**2.035 
     VCSF=0.524*DIA**2 
     VCWD=10.00*DIA 
     IF(DIA.GE.70.0)VCWD=17.0*DIA 
     VCWC=4.0*(D+2.0) 
     IF(DIA.GE.70.0)VCWC=16.0*(D+2.0) 
     VCWR=4.0*3.1416*DIA 
     VEWN=1.15*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     VCW=N*(VCWE+VCWP+VCWD+VCWC+VCWR) 
     VCS=N*VCSF 
     VEW=N*VEWN 
     FKWH=21000.0*QAVE**0.961 
     OMH=128.0*QAVE**0.301 
     IF(QAVE.GT.1.0)OMH=128.0*QAVE**0.6088 
     IF(QAVE.GT.10.0)OMH=68.0*QAVE**0.8861 
     FMMH=112.00*QAVE**0.243 
     IF(QAVE.GT.1.0)FMMH=112.0*QAVE**0.6021 
     IF(QAVE.GE.10.0)FMMH=80.0*QAVE**0.7066 
     OMMP=1.0 
     CF=1.25 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     UPFM=XUPFM 
     IF(UPFM.EQ.0.0)UPFM=2.50*FMSECI/491.60 
     COSTFM=VD*UPFM 
     CODAS=XODAS 
     IF(CODAS.EQ.0.0)CODAS=39000.0*FMSECI/491.6 
     CRIODA=0.367+0.01265*DIA 
     CODA=CODAS*CRIODA 
     FICODA=N*CODA*1.32 
     VPCB=0.5*0.667*FLCB 
     CPCB=5.00*VPCB/27.0*UPICW 
     CC=CF*(COSTE+COSTCW+COSTCS+COSTFM+FICODA+CPCB) 
     PRIN=CF*(COSTE+COSTCW+COSTCS+CPCB) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTFM 
     CALL AMORT(PRIN,RSFM,RC2) 
     PRIN=CF*FICODA 
     CALL AMORT(PRIN,RSAS,RC3) 
     OMMC=OMMP/100.0*(COSTFM+FICODA) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=65.0 
     SUMMDA(NUM,10)=TRFREQ*74.0/100.0 
     SUMMDA(NUM,14)=TRFREQ*74.0/100.0*365.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(72) 
     SETSO=0.0 
     BOD5=0.10*BOD5 
     BOD5S=0.10*BOD5S 
     COD=0.10*COD 
     CODS=0.10*CODS 
     PH=7.20 
     PO4=0.7*PO4 
     FN1=FN1S 
     IF(FN1W.LT.FN1)FN1=FN1W 
     TKND=TKN-0.10*SOLIDS-FN1 
     IF(TKND.LE.0.0)TKND=0.0 
     TKN=0.10*SOLIDS+FN1 
     FNH3=FN1 
     ANO2=0.0 
     ANO3=ANO3+TKND 
     OAG=0.0 
     PMAX=RCRP*QAVE 
     IF(PMAX.LT.QMAX)PMAX=QMAX 
     PAVG=RCRP*QAVE 
     CALL PUMPPR(1.0,PAVG,PMAX,3,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(72) 
     CALL INIT(RR,QQ,33) 
     RETURN 
     END 
     SUBROUTINE NTRFIN(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(8) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),FN),(QQ(6),SLR),(QQ(7),V),(QQ(8),SA),(QQ(9),D),(QQ(10),RCR) 
    >,(QQ(11),XUPFM),(QQ(12),CODAS),(QQ(13),COSTPS),(QQ(14),VD), 
    > (QQ(15),SAD), 
    >(QQ(16),N     ),(QQ(17),VN    ),(QQ(18),DIA   ),(QQ(19),NCP   ), 
    > (QQ(20),FLCB  ),(QQ(21),VCW   ),(QQ(22),VCS   ),(QQ(23),VEW   ), 
    > (QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ) 
    >,(QQ(28),TRFALK),(QQ(29),TRFREQ) 
    >,(QQ(30),RSFM),(QQ(31),RSAS),(QQ(32),RSPS),(QQ(33),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'TEMP','EFFL','SPEC','SURF','ESTI','END','ALKA','REPL'/ 
     CALL INIT(QQ,RR,33) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8),I 
   1 TS=VALUE(1) 
     TW=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FN1S=VALUE(1) 
     FN1W=VALUE(2) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 FN=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 SLR=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 XUPFM=VALUE(1) 
     CODAS=VALUE(2) 
     COSTPS=VALUE(3) 
     GO TO 50 
   6 CALL INIT(RR,QQ,33) 
     RETURN 
   7 TRFALK=VALUE(1) 
     GO TO 50 
   8 RSFM=VALUE(1) 
     RSAS=VALUE(2) 
     RSPS=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
     END 
     SUBROUTINE NTRFOT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TS),(QQ(2),TW),(QQ(3),FN1S),(QQ(4),FN1W), 
    >(QQ(5),FN),(QQ(6),SLR),(QQ(7),V),(QQ(8),SA),(QQ(9),D),(QQ(10),RCR) 
    >,(QQ(11),XUPFM),(QQ(12),CODAS),(QQ(13),COSTPS),(QQ(14),VD), 
    >(QQ(15),SAD), 
    >(QQ(16),N     ),(QQ(17),VN    ),(QQ(18),DIA   ),(QQ(19),NCP   ), 
    > (QQ(20),FLCB  ),(QQ(21),VCW   ),(QQ(22),VCS   ),(QQ(23),VEW   ), 
    > (QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ) 
    >,(QQ(28),TRFALK),(QQ(29),TRFREQ) 
    >,(QQ(30),RSFM),(QQ(31),RSAS),(QQ(32),RSPS),(QQ(33),RSST) 
     CALL INIT(QQ,RR,33) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0NITRIFICATION - TRICKLING FILTER SYSTEM') 
 201 FORMAT('0',A1,' SUMMER TEMPERATURE',T45,E9.3,' DEG C') 
 202 FORMAT(' ',A1,' WINTER TEMPERATURE',T45,E9.3,' DEG C') 
 203 FORMAT(' ',A1,' SUMMER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 204 FORMAT(' ',A1,' WINTER AMMONIA LIMIT',T45,E9.3,' MG/L') 
 205 FORMAT(' ',A1,' SPECIFIC SURFACE AREA',T45,E9.3,' SQFT/CUFT') 
 206 FORMAT(' ',A1,' SURFACE LOADING RATE',T45,E9.3,' GPM/SQFT') 
 207 FORMAT('   DESIGN VOLUME',T45,E9.3,' CU FT') 
 208 FORMAT('   DESIGN SURFACE AREA',T45,E9.3,' SQ FT') 
 209 FORMAT('   DEPTH',T45,E9.3,' FEET') 
 210 FORMAT('   RECYCLE RATIO',T45,E9.3) 
 307 FORMAT(' I INFLUENT ALKALINITY',T45,E9.3,' MG/L') 
 308 FORMAT(' D INFLUENT ALKALINITY',T45,E9.3,' MG/L') 
 309 FORMAT('   REQUIRED ADDITIONAL ALKALINITY',T45,E9.3,' LBS/DAY') 
     WRITE(6,201)ID(MODT,1),TS 
     WRITE(6,202)ID(MODT,1),TW 
     WRITE(6,203)ID(MODT,2),FN1S 
     WRITE(6,204)ID(MODT,2),FN1W 
     WRITE(6,205)ID(MODT,3),FN 
     WRITE(6,206)ID(MODT,4),SLR 
     IF(TRFALK.EQ.300.0)WRITE(6,308)TRFALK 
     IF(TRFALK.NE.300.0)WRITE(6,307)TRFALK 
     WRITE(6,309)TRFREQ 
     WRITE(6,207)VD 
     WRITE(6,208)SAD 
     WRITE(6,209)D 
     WRITE(6,210)RCR 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR TRICKLING FILTER (NITRIFICATION)') 
     WRITE(6,2)N 
2    FORMAT('0  NUMBER OF TOWERS',T45,I9) 
     WRITE(6,3)VN 
3    FORMAT('   VOLUME PER FILTER TOWER',T45,E9.3,' CU FT') 
     WRITE(6,5)DIA 
5    FORMAT('   DIAMETER OF FILTER TOWER',T45,E9.3,' FEET') 
     WRITE(6,6)NCP 
6    FORMAT('   TOTAL NUMBER OF POSTS',T45,I9) 
     WRITE(6,7)FLCB 
7    FORMAT('   TOTAL LENGTH OF PRECAST BEAMS',T45,E9.3,' FEET') 
     WRITE(6,8)VCW 
8    FORMAT('   TOTAL REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,9)VCS 
9    FORMAT('   TOTAL REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,10)VEW 
10   FORMAT('   TOTAL EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,12)FKWH 
12   FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
     WRITE(6,13)OMH 
13   FORMAT('   OPERATIONAL MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,14)FMMH 
14   FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,15)OMMP 
  15 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     RCRP=1.0+RCR 
     PMAX=RCRP*QAVE 
     IF(PMAX.LT.QMAX)PMAX=QMAX 
     PAVG=RCRP*QAVE 
     CALL PUMPPR(1.0,PAVE,PMAX,3,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE OECOEX(FMLSS,QQMAX,XSP,XWS,XEBOD,XESS,FP,VVOLAT,EBODS, 
    <QC,QQAVE,RR) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     CALL INIT(QQ,RR,24) 
     SP=XSP 
     XESS=ESS 
     SA=QQAVE*1000000.0/SFR 
     ASLR=QQAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,50.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(61) 
     GO TO 2 
   3 CALL RECTPR(0,50.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(61) 
   2 WL=QQMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     EBOD=EBODS+0.84*FP*ESS*VVOLAT/100.0 
     XEBOD=EBOD 
     XWS=WS 
     QC=UC 
     SETSO=0.0 
     CALL INIT(RR,QQ,24) 
     RETURN 
     END 
     SUBROUTINE OECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,24) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,8,11,12,13),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 CALL INIT(RR,QQ,24) 
     RETURN 
   8 COSTES=VALUE(1) 
     GO TO 50 
  13 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  11 RECT=1.0 
     GO TO 50 
  12 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE OECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,24) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR OXIDATION DITCH') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,235)SA 
 235 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,50.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,50.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE OMITEX(NO) 
     COMMON/USERCO/NOUSER,USERDA(30,9),MODT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     IF(NOUSER.EQ.0)RETURN 
     DO 1 I=1,NOUSER 
     MODNO=USERDA(I,1) 
     ITYP=USERDA(I,9) 
     IF(ITYP.NE.NO.OR.MODNO.NE.MODT)GO TO 1 
     IF(USERDA(I,2).EQ.-1)GO TO 3 
     SUMMDA(NUM,1)=0.0 
     SUMMDA(NUM,5)=0.0 
   3 IF(USERDA(I,3).NE.-1)SUMMDA(NUM,2)=0.0 
     IF(USERDA(I,4).NE.-1)SUMMDA(NUM,3)=0.0 
     IF(USERDA(I,5).NE.-1)SUMMDA(NUM,4)=0.0 
     IF(USERDA(I,5).NE.-1)SUMMDA(NUM,18)=0.0 
     IF(USERDA(I,6).NE.-1)SUMMDA(NUM,6)=0.0 
     GO TO 2 
   1 CONTINUE 
   2 RETURN 
     END 
     SUBROUTINE OVEREX(RR) 
     DIMENSION RR(1),USE(20) 
     EQUIVALENCE (QQ(1),IFLAG),(QQ(2),DF),(QQ(3),AVF),(QQ(4),SEF), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),DESN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),SPF),(QQ(12),DESBOD),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),FLX),(QQ(55),STORC),(QQ(56),WPOUT) 
    > ,(QQ(57),XOSTPS),(QQ(58),XOSTSP),(QQ(59),XOSTSV), 
    > (QQ(60),XOSTEN),(QQ(61),UPICG),(QQ(62),XUPIMW),(QQ(63),XOSTSC) 
    >,(QQ(64),DPW),(QQ(65),HPD) 
    >,(QQ(66),RSPS),(QQ(67),RSSP),(QQ(68),RSSV),(QQ(69),RSCS), 
    >(QQ(70),RSMW),(QQ(71),RSSC),(QQ(72),RSST) 
    >,(QQ(73),RSLL),(QQ(74),RSBA),(QQ(75),RSFN) 
     EQUIVALENCE (USE(1),QMIN) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/CHARCO/ID(9),EPAGO,EPAGLT,EPAG 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(168) 
     CALL INIT(QQ,RR,75) 
     FLX=FLW 
     SE=SEF*FLW/100.00 
     SP=SPF*FLW/100.00 
     WP=FLW+PR-ET-SE-SP 
       AREA BY HYDRAULICS 
     TA=QAVE*36.84*WWGP/FLW/FAP 
       AREA BY NITROGEN 
     CN=TKN+ANO2+ANO3 
     FLN=CN*FLW*13.20 
     FLT=0.5*PR*13.20+FLN 
     U=118.73 + 0.360*FLT 
     D=DF*FLT/100.0 
     AV=AVF*FLT/100.0 
     SUMNTR=U+D+AV 
     IF(SUMNTR.GT.0.80*FLT)SUMNTR=0.80*FLT 
     A=118.73 
     B=0.36 
     FWP=(-A+(1.0-B-DF/100.0-AVF/100.0)*(0.5*PR+CN*(-PR+ET))*13.2)/ 
    > DESN/13.2/(1.-CN*(1.+SEF/100.+SPF/100.)*(1.-B-DF/100.-AVF/100.) 
    > /DESN) 
     TAN=QAVE*36.84*WWGP/FWP/FAP 
     IF(TA.GE.TAN)GO TO 1350 
     TA=TAN 
     SE=SEF*FWP/100.0 
     SP=SPF*FWP/100.0 
     FLX=FWP 
     WP=FWP-ET-SE-SP+PR 
1350 CB=0.1*BOD5 
     REVNUE=REVNUE+REVOVR*TA 
     EPAG=EPAGLT 
     FLB=CB*FLX*13.2 
     CPB=FLB/13.20/WP 
     CBS=0.1*BOD5S 
     FLBS=CBS*FLX*13.20 
     CPBS=FLBS/13.20/WP 
     CN=TKN+ANO2+ANO3 
     FLN=CN*FLX*13.20 
     FLT=0.5*PR*13.20+FLN 
     U=118.73 + 0.360*FLT 
     D=DF*FLT/100.0 
     AV=AVF*FLT/100.0 
     SUMNTR=U+D+AV 
     IF(SUMNTR.GT.0.80*FLT)SUMNTR=0.80*FLT 
     CPN=(FLT-SUMNTR)/WP/13.20 
     STORM=STOR 
     STORC=STORM*QAVE*10.0**6/7.48/43560.0 
     FLP=PO4*FLX*13.20 
     CPB=FLB/13.20/WP 
     CPBS=FLBS/13.20/WP 
     UP=83.386-0.0373*FLP 
     CPPO4=(FLP-UP)/WP/13.20 
     IF(CPPO4.LT.0.01*PO4)CPPO4=0.01*PO4 
     QAVG=QAVE 
     QAVE=WP/12.0/7.0*TA*43560.00*7.48/10.0**6 
     WPOUT=QAVE 
     QMIN=QAVE 
     QMAX=QAVE 
     SOLIDS=SOLIDS-0.93*SOLIDS 
     COD=(COD-BOD5)*0.90+CPB 
     CODS=(CODS-BOD5S)*0.90+CPBS 
     BOD5=CPB 
     BOD5S=CPBS 
     CIC=0.0 
     CAC=0.0 
     SETSO=0.0 
     ANO2=0.0 
     ANO3=CPN*0.75 
     FNH3=CPN*0.25 
     TKN=CPN*0.25 
     OAG=0.0 
     PSS=SOLIDS 
     PVSS=VOLAT 
     PBOD5=BOD5 
     PSBOD5=BOD5S 
     PCOD=COD 
     PSCOD=CODS 
     PNO2=ANO2 
     PNO3=ANO3 
     PTKN=TKN 
     POAG=OAG 
     PPO4=CPPO4 
     PO4=CPPO4 
     PNH3=FNH3 
 300 CALL OVERPR(TA,QAVG,WWGP,FLX,FAP,FOREST,BRUSH,PASTUR, 
    > SLOPE,IRECOV,BUFF,COSFEN,XOSTPS,XOSTSP,XOSTSV,XOSTEN,UPICG, 
    > IFLAG,0,STORC,NOWEL,DEPTH,XUPIMW,XOSTSC,DPW,HPD,FLOW, 
    >RSSP,RSSV,RSCS,RSMW,RSSC,RSST,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     CALL USEREX(54) 
     KASE=DPW*HPD*FAP 
     KASE=KASE*10+1 
     CALL PUMPPR(1.0,FLOW,FLOW,KASE,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(54) 
 400 CALL INIT(RR,QQ,75) 
     RETURN 
     END 
     SUBROUTINE OVERIN(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(27),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),IFLAG),(QQ(2),DF),(QQ(3),AVF),(QQ(4),SEF), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),DESN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),SPF),(QQ(12),DESBOD),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),FLX),(QQ(55),STORC),(QQ(56),WPOUT) 
    > ,(QQ(57),XOSTPS),(QQ(58),XOSTSP),(QQ(59),XOSTSV), 
    > (QQ(60),XOSTEN),(QQ(61),UPICG),(QQ(62),XUPIMW),(QQ(63),XOSTSC) 
    >,(QQ(64),DPW),(QQ(65),HPD) 
    >,(QQ(66),RSPS),(QQ(67),RSSP),(QQ(68),RSSV),(QQ(69),RSCS), 
    >(QQ(70),RSMW),(QQ(71),RSSC),(QQ(72),RSST) 
    >,(QQ(73),RSLL),(QQ(74),RSBA),(QQ(75),RSFN) 
     DATA LIST/'APPL','PREC','EVAP','REPL','WAST', 
    >'FIEL','SPRA','PERC','STOR','DESI','LINE','EMBA','GRAV','OPEN', 
    >'BUFF','CURR','SLOP','MONI','FENC','FRAC','AMMO','END','FORA', 
    > 'ESTI','HOUR','DAYS','XXXX'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,75) 
  50 READ(5,51)KTYP,IXX,KLM 
     WRITE(6,951)KTYP,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,27 
     IF(KTYP.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYP 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  53 GO TO (3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, 
    >21,22,23,24,25,124,26,27,28),I 
   3 FLW=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   4 PR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   5 ET=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   6 RSPS=VALUE(1) 
     RSSP=VALUE(2) 
     RSSV=VALUE(3) 
     RSCS=VALUE(4) 
     RSMW=VALUE(5) 
     RSSC=VALUE(6) 
     RSST=VALUE(7) 
     GO TO 50 
   7 WWGP=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   8 FAP=VALUE(1) 
     ID(MODT,10)=IA 
     GO TO 50 
   9 SEF=VALUE(1) 
     ID(MODT,11)=IA 
     GO TO 50 
  10 SPF=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
  11 STOR=VALUE(1) 
     ID(MODT,13)=IA 
     GO TO 50 
  12 ID(MODT,12)=IA 
     DESN=VALUE(1) 
     GO TO 50 
  13 LINER=1 
     ID(MODT,14)=IA 
     COSLIN=VALUE(1) 
     RSLL=VALUE(2) 
     IF(RSLL.LE.0.0)RSLL=15.0 
     ID(MODT,15)=IA 
     GO TO 50 
  14 IBANK=1 
     ID(MODT,16)=IA 
     COSBAN=VALUE(1) 
     RSBA=VALUE(2) 
     IF(RSBA.LE.0.0)RSBA=40.0 
     ID(MODT,17)=IA 
     GO TO 50 
  15 IRECOV=1 
     ID(MODT,18)=IA 
     GO TO 50 
  16 IRECOV=0 
     ID(MODT,18)=IA 
     GO TO 50 
  17 BUFF=VALUE(1) 
     ID(MODT,19)=IA 
     GO TO 50 
  18 FOREST=VALUE(1) 
     BRUSH=VALUE(2) 
     PASTUR=VALUE(3) 
     ID(MODT,21)=IA 
     ID(MODT,20)=IA 
     ID(MODT,22)=IA 
     GO TO 50 
  19 SLOPE=VALUE(1) 
     ID(MODT,23)=IA 
     GO TO 50 
  20 NOWEL=VALUE(1) 
     DEPTH=VALUE(2) 
     ID(MODT,24)=IA 
     ID(MODT,25)=IA 
     GO TO 50 
  21 COSFEN=VALUE(1) 
     RSFN=VALUE(2) 
     IF(RSFN.LE.0.0)RSFN=15.0 
     ID(MODT,26)=IA 
     GO TO 50 
  22 DF=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
  23 AVF=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
  24 CALL INIT(RR,QQ,75) 
     RETURN 
  25 REVOVR=VALUE(1) 
     GO TO 50 
 124 XOSTPS=VALUE(1) 
     XOSTSP=VALUE(2) 
     XOSTSV=VALUE(3) 
     XOSTEN=VALUE(4) 
     UPICG=VALUE(5) 
     XUPIMW=VALUE(6) 
     XOSTSC=VALUE(7) 
     GO TO 50 
  28 GO TO 50 
  26 HPD=VALUE(1) 
     ID(MODT,27)=IA 
     GO TO 50 
  27 DPW=VALUE(1) 
     ID(MODT,28)=IA 
     GO TO 50 
     END 
     SUBROUTINE OVEROT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),IFLAG),(QQ(2),DF),(QQ(3),AVF),(QQ(4),SEF), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),DESN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),SPF),(QQ(12),DESBOD),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),FLX),(QQ(55),STORC),(QQ(56),WPOUT) 
    > ,(QQ(57),XOSTPS),(QQ(58),XOSTSP),(QQ(59),XOSTSV), 
    > (QQ(60),XOSTEN),(QQ(61),UPICG),(QQ(62),XUPIMW),(QQ(63),XOSTSC) 
    >,(QQ(64),DPW),(QQ(65),HPD) 
    >,(QQ(66),RSPS),(QQ(67),RSSP),(QQ(68),RSSV),(QQ(69),RSCS), 
    >(QQ(70),RSMW),(QQ(71),RSSC),(QQ(72),RSST) 
    >,(QQ(73),RSLL),(QQ(74),RSBA),(QQ(75),RSFN) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,75) 
     CALL TITLE 
     WRITE(6,140)STARDA 
 140 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0OVERLAND FLOW LAND TREATMENT') 
 102 FORMAT(' ',' ',' FORAGE GRASSES') 
 103 FORMAT(' ',A1,' HYDRAULIC APPLICATION RATE',T45,E9.3,' IN/WEEK') 
 104 FORMAT(' ',A1,' PRECIPITATION RATE',T45,E9.3,' IN/WEEK') 
 105 FORMAT(' ',A1,' EVAPOTRANSPORATION RATE',T45,E9.3,' IN/WEEK') 
 107 FORMAT(' ',A1,' WASTEWATER GENERATION PERIOD',T45,E9.3,' DAYS/YR') 
 108 FORMAT(' ',A1,' FIELD APPLICATION PERIOD',T45,E9.3,' WEEKS/YR') 
 109 FORMAT('   SOLID SET PIPING AND PUMPING') 
 111 FORMAT(' ',A1,' MINIMUM STORAGE SPECIFIED',T45,E9.3,' DAYS') 
 112 FORMAT(' ','  CALCULATED STORAGE REQUIRED',T45,E9.3,' ACRE-FT') 
 114 FORMAT(' ',A1,' LINER INCLUDED',T45,E9.3,' $/SQ FT') 
 115 FORMAT(' ',A1,' EMBANKMENT PROTECTION INCLUDED',T45,E9.3, 
    > ' $/SQ FT') 
 116 FORMAT(' ',A1,' GRAVITY PIPE RECOVERY SYSTEM') 
 117 FORMAT(' ',A1,' OPEN CHANNEL RECOVERY SYSTEM') 
 118 FORMAT(' ',A1,' BUFFER ZONE WIDTH',T45,E9.3,' FEET') 
 119 FORMAT(' ',A1,' CURRENT GROUND COVER'/'      FOREST',T45,E9.3, 
    > ' PERCENT'/'      BRUSH',T45,E9.3,' PERCENT'/ 
    > '      PASTURE',T45,E9.3,' PERCENT') 
 120 FORMAT(' ',A1,' SLOPE OF SITE',T45,E9.3,' PERCENT') 
 121 FORMAT(' ',A1,' NUMBER OF MONITORING WELLS',T45,I9,' WELLS') 
 122 FORMAT(' ',A1,' DEPTH OF MONITORING WELLS',T45,E9.3,' FEET') 
 123 FORMAT('   VOLUME OF RUNOFF',T45,E9.3,' MGD') 
 124 FORMAT('   QUALITY OF RUNOFF') 
 125 FORMAT('      SUSPENDED SOLIDS',T45,E9.3,' MG/L') 
 126 FORMAT('      VOLATILE SOLIDS',T45,E9.3,' PERCENT ') 
 127 FORMAT('      BOD5',T45,E9.3,' MG/L') 
 128 FORMAT('      BOD5 SOLUBLE',T45,E9.3,' MG/L') 
 129 FORMAT('      COD',T45,E9.3,' MG/L') 
 130 FORMAT('      COD SOLUBLE',T45,E9.3,' MG/L') 
 131 FORMAT('      PO4',T45,E9.3,' MG/L') 
 132 FORMAT('      TKN',T45,E9.3,' MG/L') 
 133 FORMAT('      NO2',T45,E9.3,' MG/L') 
 134 FORMAT('      NO3',T45,E9.3,' MG/L') 
 135 FORMAT('      OIL AND GREASE',T45,E9.3,' MG/L') 
 137 FORMAT(' ',A1,' PERCENT DENITRIFIED',T45,E9.3,' PERCENT') 
 138 FORMAT(' ',A1,' PERCENT AMMONIA VOLATILIZATION',T45,E9.3,' PERCENT 
    >') 
 136 FORMAT(' ',A1,' COST OF FENCING',T45,E9.3,' $/FT') 
 141 FORMAT('   TREATMENT AREA REQUIRED',T45,E9.3,' ACRES') 
 142 FORMAT(' ',A1,' SPRAY EVAPORATION',T45,E9.3,' PERCENT') 
 143 FORMAT(' ',A1,' SOIL PERCOLATE',T45,E9.3,' PERCENT') 
     WRITE(6,150)ID(MODT,27),HPD 
     WRITE(6,151)ID(MODT,28),DPW 
     IF(IFLAG.EQ.1)WRITE(6,152) 
 150 FORMAT('0',A1,' HOURS PER DAY OPERATION',T45,E9.3,' HOURS') 
 151 FORMAT(' ',A1,' DAYS PER WEEK OPERATION',T45,E9.3,' DAYS') 
 152 FORMAT(70X,' *** FLOW IS NOT SUFFICIENT FOR OPERATING SCHEDULE'/ 
    > 74X,' REDUCE OPERATING PERIOD SPECIFICATIONS ***') 
     WRITE(6,102) 
     WRITE(6,103)ID(MODT,5),FLW 
     IF(FLW.NE.FLX)WRITE(6,113)FLX 
 113 FORMAT(70X,'TREATMENT AREA WILL BE CONTROLLED BY NITROGEN LOADING' 
    > /'   ADJUSTED HYDRAULIC APPLICATION RATE',T45,E9.3,' IN/WEEK') 
     WRITE(6,105)ID(MODT,7),ET 
     WRITE(6,104)ID(MODT,6),PR 
     WRITE(6,137)ID(MODT,2),DF 
     WRITE(6,138)ID(MODT,3),AVF 
     WRITE(6,142)ID(MODT,4),SEF 
     WRITE(6,143)ID(MODT,11),SPF 
     WRITE(6,107)ID(MODT,9),WWGP 
     WRITE(6,108)ID(MODT,10),FAP 
     WRITE(6,109) 
     IF(STOR.GE.0.0)WRITE(6,111)ID(MODT,13),STOR 
     WRITE(6,112)STORC 
     IF(LINER.EQ.1)WRITE(6,114)ID(MODT,14),COSLIN 
     IF(IBANK.EQ.1)WRITE(6,115)ID(MODT,17),COSBAN 
     IF(IRECOV.EQ.1)WRITE(6,116)ID(MODT,18) 
     IF(IRECOV.EQ.0)WRITE(6,117)ID(MODT,18) 
     WRITE(6,118)ID(MODT,19),BUFF 
     WRITE(6,119)ID(MODT,20),FOREST,BRUSH,PASTUR 
     WRITE(6,120)ID(MODT,23),SLOPE 
     WRITE(6,121)ID(MODT,24),NOWEL 
     WRITE(6,122)ID(MODT,25),DEPTH 
     WRITE(6,136)ID(MODT,26),COSFEN 
     WRITE(6,141)TA 
     WRITE(6,146)DESN 
 146 FORMAT('   MAXIMUM DESIRED NITRATE EFFLUENT',T45,E9.3,' MG/L') 
     UPX=UP*0.891 
     UX=U*0.891 
     WRITE(6,144)UX 
     WRITE(6,145)UPX 
 144 FORMAT('   CROP UPTAKE OF NITROGEN',T45,E9.3,' LB/ACRE/YEAR') 
 145 FORMAT('   CROP UPTAKE OF PHOSPHORUS',T45,E9.3,' LB/ACRE/YEAR') 
     WRITE(6,123)WPOUT 
     WRITE(6,124) 
     WRITE(6,125)PSS 
     WRITE(6,126)PVSS 
     WRITE(6,127)PBOD5 
     WRITE(6,128)PSBOD5 
     WRITE(6,129)PCOD 
     WRITE(6,130)PSCOD 
     WRITE(6,131)PPO4 
     WRITE(6,132)PTKN 
     WRITE(6,133)PNO2 
     WRITE(6,134)PNO3 
     WRITE(6,135)POAG 
     WRITE(6,140)STARDA 
     CALL INIT(RR,QQ,75) 
     IF(FLW.NE.FLX)FLW=FLX 
     CALL OVERPR(TA,WPOUT,WWGP,FLW,FAP,FOREST,BRUSH, 
    > PASTUR,SLOPE,IRECOV,BUFF,COSFEN,XOSTPS,XOSTSP,XOSTSV,XOSTEN, 
    > UPICG,IFLAG,1,STORC,NOWEL,DEPTH,XUPIMW,XOSTSC,DPW,HPD,FLOW, 
    >RSSP,RSSV,RSCS,RSMW,RSSC,RSST,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     KASE=DPW*HPD*FAP 
     KASE=KASE*10+1 
     CALL PUMPPR(1.0,QAVE,QAVE,KASE,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE OVERPR(TA,GF,WWGP,AR,FAR,FOREST,BRUSH,PASTUR, 
    > SLOPE,IRECOV,BUFF,COSFEN,XOSTPS,XOSTSP,XOSTSV,XOSTEN,XUPICG, 
    > IFLAG,IQU,STORC,NOWEL,DEPTH,XUPIMW,XOSTSC,DPW,HPD,FLOW, 
    >RSSP,RSSV,RSCS,RSMW,RSSC,RSST,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION DIAM(16),CDIAM(19) 
     DIMENSION FLCDIA(19),FLDIAH(16) 
     DATA DIAM/2.0,3.0,4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0, 
    >20.0,24.0,30.0,36.0,42.0,48.0/ 
     DATA CDIAM/12.0,15.0,18.0,21.0,24.0,27.0,30.0,33.0,36.0,42.0, 
    > 48.0,54.0,60.0,66.0,72.0,78.0,84.0,90.0,96.0/ 
     IF(IQU.NE.0)GO TO 678 
     FLOW=GF*WWGP*24.0/FAR/DPW/HPD 
     OFLOW=FLOW 
     NLC=0 
     VLEW=0.0 
     AREAL=0.0 
     VCEP=0.0 
     IF(STORC.LE.0.0)GO TO 23 
     SV=STORC*43560.0*7.48 
     NLC=2 
     IF(SV.LE.170.0*10.0**6)GO TO 1 
   2 NLC=NLC+2 
     SPL=SV/NLC 
     IF(SPL.GT.85.0*10.0**6)GO TO 2 
   1 SVC=SV/NLC/7.48 
     FL=(SQRT(0.615*SVC-1521.0)+60.0)/2.0 
     IF(IBANK.EQ.1)VCEP=4.0*FL*11.0*0.67*NLC/27.0 
     IF(LINER.EQ.1)AREAL=FL**2+6.48*FL+194.4*NLC 
     DC=1.0 
   3 DF=10.0-DC 
     VF=(3.0*DF**2+10.0*DF)*(5.0*NLC/2.0+2.0)*FL 
     VC=1.3*NLC*DC*(FL**2-6.0*DF*FL+12.0*DF**2+120.0*DF-60.0*FL 
    >+1200.0) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 4 
     DC=DC+0.10*PERC/ABS(PERC) 
     GO TO 3 
   4 VLEW=VC 
  23 NH=1 
     IF(FLOW.GT.1.0)NH=2 
     IF(FLOW.GT.2.0)NH=3 
     IF(FLOW.GT.4.0)NH=4 
     FPH=FLOW*10.0**6/NH/HPD/60.0 
     FPN=4051.7*AR/DPW/HPD/FAR 
     NSPH=FPH/FPN+0.99 
     IFLAG=0 
     IF(NSPH.GE.1)GO TO 25 
     NSPH=1 
     IFLAG=1 
  25 NLPH=NSPH/9 
     IF(NLPH.LT.1)NLPH=1 
     FPL=FPH/NLPH 
     DIAL=0.286*FPL**0.5 
     DO 5I=1,16 
     IF(DIAL.LT.DIAM(I))GO TO 6 
   5 CONTINUE 
     I=16.0 
   6 DIAL=DIAM(I) 
     N=FPH/4.0/FPL 
     IF(N.LE.0)N=1 
     DO 10 I=1,16 
  10 FLDIAH(I)=0.0 
     VARL=1160.0 
     DO 7 I=1,N 
     DIAH=0.286*SQRT(FPH-(I-1)*4.0*FPL) 
     DO 8 J=1,16 
     IF(DIAH.LT.DIAM(J))GO TO 9 
   8 CONTINUE 
     J=16 
   9 FLDIAH(J)=FLDIAH(J)+VARL 
     IF(I.EQ.1)JSAVE=J 
     VARL=400.0*NH 
   7 CONTINUE 
     FLDIAL=NSPH*50.0*NH 
     NBV=NH 
     DBV=DIAM(JSAVE) 
     NLV=NLPH*NH 
     DLV=DIAL 
     CAGH=FOREST/100.0*TA 
     CAGM=BRUSH/100.0*TA 
     CAGL=PASTUR/100.0*TA 
     VSEW=0.0 
     IF(SLOPE.LE.2.0)VSEW=55100.0*TA 
     VET=(N+2)*NH*1000.0*5 
     IF(IRECOV.EQ.0)GO TO 11 
     DO 21 I=1,19 
  21 FLCDIA(I)=0.0 
     DO 12 I=1,N 
     FN=I 
     CDIAN=6.38*FN**0.375 
     DO 13 J=1,19 
     IF(CDIAM(J).GE.CDIAN)GO TO 14 
  13 CONTINUE 
     J=19 
  14 CDIAN=CDIAM(J) 
     FLCDIA(J)=FLCDIA(J)+400.0*(NH+1) 
  12 CONTINUE 
     GO TO 15 
  11 FLDIT=400.0*(NH+1)*N 
  15 ADR=0.15*TA 
     ASL=1.2*NLC*FL**2/43560.0 
     FLTA=SQRT((TA+ADR+ASL)*43560.0) 
     ABZ=4.0*BUFF*(FLTA+BUFF)/43560.0 
     TLA=TA+ADR+ASL+ABZ 
     XL=TLA 
     IXL=XL+0.99 
     XL=IXL 
     IXL=XL+0.99 
     XL=IXL 
     FLF=834.8*SQRT(TLA) 
     OMMHD=77.91*TA**0.5373 
     IF(TA.GT.70.0)OMMHD=18.12*TA**0.8814 
     OMMHP=6.65*TA**0.4224 
     IF(TA.GT.100.0)OMMHP=2.41*TA**0.6434 
     OMMHO=36.9*TA**0.3578 
     IF(TA.GT.150.0)OMMHO=8.34*TA**0.6538 
     OMMPD=0.783*TA**(-0.0673) 
     IF(TA.GT.500.0)OMMPD=9.46*TA**(-0.47) 
     OMMPP=0.0 
     OMMPO=0.0 
     IF(IRECOV.EQ.0)GO TO 16 
     OMMPP=0.9566*TA**(-0.2539) 
     IF(TA.GT.225.0)OMMPP=0.242 
     GO TO 17 
  16 OMMPO=25.4*TA**(-0.1383) 
     IF(TA.GT.60.0)OMMPO=14.42 
  17 OMMHM=0.0 
     OMMPM=0.0 
     IF(NOWEL.LE.0.OR.DEPTH.LE.0.0)GO TO 171 
     UPIMW=XUPIMW 
     IF(XUPIMW.EQ.0.0)UPIMW=8.0*FMSECI/491.60 
     COSTMW=UPIMW*NOWEL*DEPTH 
     OMMHM=6.39*NOWEL**0.276 
     OMMPM=2.28*DEPTH**0.0497 
 171 CF=1.11 
     COSTE=(VLEW+VSEW+VET)/27.0*UPIEX 
     TICHP=0.0 
     COSTSP=XOSTSP 
     IF(XOSTSP.EQ.0.0)COSTSP=12.80*FMSECI/491.60 
     DO 18 I=1,16 
     COSTPN=6.842*DIAM(I)**1.2255 
  18 TICHP=TICHP+FLDIAH(I)*COSTPN/100.0*COSTSP 
     COSTP=6.842*DIAL**1.2255 
     TICLP=FLDIAL*COSTP*COSTSP/100.0 
     COSTRV=3.99*DBV**1.395 
     COSTSV=XOSTSV 
     IF(XOSTSP.LE.0.0)COSTSP=952.1*FMSECI/491.60 
     COSTBV=COSTRV*COSTSV*NBV/100.0 
     COSTRL=15.33*DLV**1.053 
     COSTLV=COSTRL*COSTSV*NLV/100.0 
     COSTEN=XOSTEN 
     IF(XOSTEN.EQ.0.0)COSTEN=61.65*FMSECI/491.60 
     COSTN=1.20*NSPH*COSTEN 
     TCDS=TICHP+TICLP+COSTBV+COSTLV+COSTN 
     IF(IRECOV.EQ.0)GO TO 19 
     TICRC=0.0 
     COSTOD=0.0 
     COSTSC=XOSTSC 
     IF(XOSTSC.EQ.0.0)COSTSC=10.20*FMSECI/491.60 
     DO 20 I=1,19 
     COSTRN=0.7044*CDIAM(I)**1.6587 
  20 TICRC=TICRC+FLCDIA(I)*COSTSC*COSTRN/100.0 
     GO TO 22 
  19 COSTOD=0.57*FLDIT*UPIEX 
  22 UPICG=XUPICG 
     IF(XUPICG.EQ.0.0)UPICG=3000.0*FMSECI/491.60 
     COSTCG=(CAGH+0.306*CAGM+0.092*CAGL)*UPICG 
     COSTF=FLF*COSFEN 
     OMMC=(OMMPD*TCDS+OMMPP*TICRC+OMMPO*COSTOD+COSTMW*OMMPM)/100.0 
     CCLL=COSLIN*AREAL 
     CCEP=VCEP*COSBAN 
     TBCC=CF*(TCDS+TICRC+COSTOD+COSTE+COSTCG+COSTF+COSTMW+CCLL+CCEP) 
     PRIN=CF*(TICHP+TICLP) 
     CALL AMORT(PRIN,RSSP,RC1) 
     PRIN=CF*(COSTBV+COSTLV) 
     CALL AMORT(PRIN,RSSV,RC2) 
     PRIN=CF*COSTN 
     CALL AMORT(PRIN,RSCS,RC3) 
     PRIN=CF*TICRC 
     CALL AMORT(PRIN,RSSC,RC4) 
     PRIN=CF*COSTF 
     CALL AMORT(PRIN,RSFN,RC5) 
     PRIN=CF*COSTMW 
     CALL AMORT(PRIN,RSMW,RC6) 
     PRIN=CF*(COSTOD+COSTE+COSTCG) 
     CALL AMORT(PRIN,RSST,RC7) 
     PRIN=CCLL*CF 
     CALL AMORT(PRIN,RSLL,RC8) 
     PRIN=CCEP*CF 
     CALL AMORT(PRIN,RSBA,RC9) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMMHD+OMMHP+OMMHO+OMMHM 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4+RC5+RC6+RC7+RC8+RC9 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=43.0 
     RETURN 
 678 IF(KCTL.NE.0)CALL OVERQU(SVC,NLC,FL,VLEW,FPH,FPN,FPL,DIAL, 
    > FLDIAL,FLDIAH, 
    > DBV,NBV,DLV,NLV,NSPH,VSEW,VET,FLCDIA,IRECOV,FLDIT,ADR,ASL, 
    > ABZ,TLA,FLF,OMMHD,OMMHP,OMMHO,OMMPD,OMMPP,OMMPO,OFLOW,DIAM,CDIAM, 
    > DC,STORC,OMMHM,OMMPM,NOWEL,DEPTH,NLPH) 
     RETURN 
     END 
     SUBROUTINE OVERQU(SVC,NLC,FL,VLEW,FPH,FPN,FPL,DIAL,FLDIAL,FLDIAH, 
    > DBV,NBV,DLV,NLV,NSPH,VSEW,VET,FLCDIA,IRECOV,FLDIT,ADR,ASL, 
    > ABZ,TLA,FLF,OMMHD,OMMHP,OMMHO,OMMPD,OMMPP,OMMPO,GF,DIAM,CDIAM, 
    > DC,STORC,OMMHM,OMMPM,NOWEL,DEPTH,NLPH) 
     DIMENSION DIAM(1),CDIAM(1),FLDIAH(1),FLCDIA(1) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR OVERLAND FLOW LAND TREATMENT') 
     WRITE(6,2)GF 
   2 FORMAT('0APPLIED FLOW',T45,E9.3,' MGD') 
 100 FORMAT(' STORAGE VOLUME PER CELL',T45,E9.3,' GAL') 
 101 FORMAT(' NUMBER OF STORAGE CELLS',T45,I9) 
 102 FORMAT(' LENGTH OF STORAGE CELL',T45,E9.3,' FEET') 
1021 FORMAT(' DEPTH OF CUT FOR STORAGE LAGOONS',T45,E9.3,' FEET') 
 103 FORMAT(' LAGOON EARTHWORK',T45,E9.3,' CU FT') 
 104 FORMAT(' DESIGN FLOW PER HEADER',T45,E9.3,' GPM') 
 105 FORMAT(' DESIGN FLOW PER SPRINKLER',T45,E9.3,' GPM') 
 106 FORMAT(' DESIGN FLOW PER LATERAL',T45,E9.3,' GPM') 
 107 FORMAT(' DIAMETER OF LATERAL PIPE',T45,E9.3,' INCHES') 
 108 FORMAT(' LENGTH OF LATERAL PIPE',T45,E9.3,' FEET') 
 109 FORMAT(' LENGTHS AND DIAMETERS OF HEADER PIPE') 
 110 FORMAT(' ',25X,E9.3,' FEET OF ',E9.3,' INCH PIPE') 
 111 FORMAT(' DIAMETER OF BUTTERFLY VALVES',T45,E9.3,' INCHES') 
 112 FORMAT(' NUMBER OF BUTTERFLY VALVES',T45,I9) 
 113 FORMAT(' DIAMETER OF PLUG VALVES',T45,E9.3,' INCHES') 
 114 FORMAT(' NUMBER OF PLUG VALVES',T45,I9) 
 115 FORMAT(' NUMBER OF SPRINKLERS PER HEADER',T45,I9) 
 116 FORMAT(' SLOPE CONSTRUCTION EARTHWORK',T45,E9.3,' CU FT') 
 117 FORMAT(' TERRACE CONSTRUCTION EARTHWORK',T45,E9.3,' CU FT') 
 118 FORMAT(' LENGTH AND DIAMETER OF DRAIN PIPES') 
 119 FORMAT(' TOTAL LENGTH OF DRAINAGE DITCHES',T45,E9.3,' FEET') 
 120 FORMAT(' LAND AREA FOR DITCHES AND ROADS',T45,E9.3,' ACRES') 
 121 FORMAT(' LAND AREA FOR STORAGE LAGOONS',T45,E9.3,' ACRES') 
 122 FORMAT(' LAND AREA FOR BUFFER ZONES',T45,E9.3,' ACRES') 
 123 FORMAT(' TOTAL LAND AREA',T45,E9.3,' ACRES') 
 124 FORMAT(' TOTAL LENGTH OF FENCE',T45,E9.3,' FEET') 
 125 FORMAT(' ANNUAL O & M FOR DISTRIBUTION SYSTEM',T45,E9.3, 
    > ' MAN-HRS/YR') 
 126 FORMAT(' ANNUAL O & M  GRAVITY PIPE RECOVERY SYSTEM', 
    > T45,E9.3,' MAN-HRS/YR') 
 127 FORMAT(' ANNUAL O & M  OPEN DITCH RECOVERY SYSTEM', 
    > T45,E9.3,' MAN-HRS/YR') 
 128 FORMAT(' DISTRIBUTION SYSTEM MATERIAL COST', 
    > T45,E9.3,' PERCENT') 
 129 FORMAT(' GRAVITY PIPE RECOVERY SYSTEM MATERIAL COST', 
    > T45,E9.3,' PERCENT') 
 130 FORMAT(' OPEN DITCH RECOVERY SYSTEM MATERIAL COST', 
    > T45,E9.3,' PERCENT') 
     IF(STORC.EQ.0.0)GO TO 9 
     WRITE(6,100)SVC 
     WRITE(6,101)NLC 
     WRITE(6,102)FL 
     WRITE(6,1021)DC 
     WRITE(6,103)VLEW 
 201 FORMAT(' NUMBER OF HEADERS',T45,I9) 
   9 WRITE(6,201)NBV 
     WRITE(6,104)FPH 
     WRITE(6,105)FPN 
     WRITE(6,202)NLPH 
 202 FORMAT(' NUMBER OF LATERALS PER HEADER',T45,I9) 
     WRITE(6,106)FPL 
     WRITE(6,107)DIAL 
     WRITE(6,108)FLDIAL 
     WRITE(6,109) 
     DO 3 I=1,16 
     IF(FLDIAH(I).LE.0.0)GO TO 3 
     WRITE(6,110)FLDIAH(I),DIAM(I) 
   3 CONTINUE 
     WRITE(6,111)DBV 
     WRITE(6,112)NBV 
     WRITE(6,113)DLV 
     WRITE(6,114)NLV 
     WRITE(6,115)NSPH 
     WRITE(6,116)VSEW 
     WRITE(6,117)VET 
     IF(IRECOV.EQ.0)GO TO 5 
     WRITE(6,118) 
     DO 4 I=1,19 
     IF(FLCDIA(I).LE.0.0)GO TO 4 
     WRITE(6,110)FLCDIA(I),CDIAM(I) 
   4 CONTINUE 
     GO TO 6 
   5 WRITE(6,119)FLDIT 
   6 WRITE(6,120)ADR 
     IF(STORC.NE.0.0)WRITE(6,121)ASL 
     WRITE(6,122)ABZ 
     WRITE(6,123)TLA 
     WRITE(6,124)FLF 
     WRITE(6,125)OMMHD 
     WRITE(6,128)OMMPD 
     IF(NOWEL.LE.0.0.OR.DEPTH.LE.0.0)GO TO 91 
     WRITE(6,131)OMMHM 
     WRITE(6,132)OMMPM 
 131 FORMAT(' ANNUAL O & M FOR MONITORING WELLS',T45,E9.3, 
    > ' MAN-HRS/YR') 
 132 FORMAT(' MONITORING WELLS O & M MATERIAL COST',T45,E9.3, 
    > ' PERCENT') 
  91 IF(IRECOV.EQ.0)GO TO 7 
     WRITE(6,126)OMMHP 
     WRITE(6,129)OMMPP 
     GO TO 8 
   7 WRITE(6,127)OMMHO 
     WRITE(6,130)OMMPO 
   8 RETURN 
     END 
     SUBROUTINE OXIDEX (RR,MODT) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK),(QQ(3),A),(QQ(4),AP), 
    <(QQ(5),B),(QQ(6),BP),(QQ(7),FOM),(QQ(8),FMLSS),(QQ(9),FMLVS), 
    <(QQ(10),THETA),(QQ(11),EBODS),(QQ(12),FNDF),(QQ(13),FP), 
    <(QQ(14),AT),(QQ(15),VOL),(QQ(16),OREQ),(QQ(17),SP),(QQ(18),FNR), 
    <(QQ(19),PO4R),(QQ(20),SRR),(QQ(21),EBODT),(QQ(22),SRT), 
    <(QQ(23),VL),(QQ(24),AO),(QQ(25),ALPHA),(QQ(26),BETA), 
    <(QQ(27),STE),(QQ(28),OTE),(QQ(29),HP),(QQ(30),HPR),(QQ(31),COSTDS) 
    >,(QQ(32),COSTPS),(QQ(33),RSDS),(QQ(34),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     QQQ=1.5*QAVE 
     CALL INIT(QQ,RR,34) 
     NUM=NUM+1 
     AT=24.0*BOD5/FMLVS/FOM 
     VOL=AO*(BOD5-EBODS)*QAVE/FMLVS/FP/B 
     AT2=VOL/QAVE*24.0 
     IF(AT2.GT.AT)AT=AT2 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
    <+0.6*4.57*TKN*8.34*QAVE 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     SVOLAT=VOLAT*SOLIDS/100.0 
     IF(OBOD.LT.1.5)OREQ=1.5*BOD5*QAVE*8.34 
     QNDF=FNDF/100.0 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <-QAVE*20.0*8.34+QAVE*8.34*QNDF*SVOLAT+QAVE*8.34*(SOLIDS-SVOLAT) 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.2)SP=0.2*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(51,MODT) 
     CALL OECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    &BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     OAG=0.0 
     SETSO=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.4*TKN 
     ANO3=0.4*TKN 
     ANO2=0.0 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
   1 CALL OXIDPR(OREQ,VOL,QAVE,COSTDS,RSDS,RSST,0) 
     CALL USEREX(30) 
     NUM=NUM+1 
     CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(30) 
   2 CALL INIT(RR,QQ,34) 
     RETURN 
     END 
     SUBROUTINE OXIDIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(9) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK),(QQ(3),A),(QQ(4),AP), 
    <(QQ(5),B),(QQ(6),BP),(QQ(7),FOM),(QQ(8),FMLSS),(QQ(9),FMLVS), 
    <(QQ(10),THETA),(QQ(11),EBODS),(QQ(12),FNDF),(QQ(13),FP), 
    <(QQ(14),AT),(QQ(15),VOL),(QQ(16),OREQ),(QQ(17),SP),(QQ(18),FNR), 
    <(QQ(19),PO4R),(QQ(20),SRR),(QQ(21),EBODT),(QQ(22),SRT), 
    <(QQ(23),VL),(QQ(24),AO),(QQ(25),ALPHA),(QQ(26),BETA), 
    <(QQ(27),STE),(QQ(28),OTE),(QQ(29),HP),(QQ(30),HPR),(QQ(31),COSTDS) 
    >,(QQ(32),COSTPS),(QQ(33),RSDS),(QQ(34),RSPS) 
     DIMENSION RR(1) 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ','REPL','ESTI', 
    >'XXXX'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,34) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     FNDF=VALUE(6) 
     FP=VALUE(7) 
     AO=VALUE(8) 
     DO 20 I=1,7 
  20 ID(MODT,I)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,9)=IA 
     ID(MODT,10)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,34) 
     RETURN 
   7 RSDS=VALUE(1) 
     RSPS=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
   8 COSTDS=VALUE(1) 
     COSTPS=VALUE(2) 
     GO TO 50 
   9 GO TO 50 
     END 
     SUBROUTINE OXIDOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK),(QQ(3),A),(QQ(4),AP), 
    <(QQ(5),B),(QQ(6),BP),(QQ(7),FOM),(QQ(8),FMLSS),(QQ(9),FMLVS), 
    <(QQ(10),THETA),(QQ(11),EBODS),(QQ(12),FNDF),(QQ(13),FP), 
    <(QQ(14),AT),(QQ(15),VOL),(QQ(16),OREQ),(QQ(17),SP),(QQ(18),FNR), 
    <(QQ(19),PO4R),(QQ(20),SRR),(QQ(21),EBODT),(QQ(22),SRT), 
    <(QQ(23),VL),(QQ(24),AO),(QQ(25),ALPHA),(QQ(26),BETA), 
    <(QQ(27),STE),(QQ(28),OTE),(QQ(29),HP),(QQ(30),HPR) 
    >,(QQ(31),COSTDS),(QQ(32),COSTPS),(QQ(33),RSDS),(QQ(34),RSPS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,34) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0OXIDATION DITCH') 
     WRITE(6,201)ID(MODT,1),FK 
 201 FORMAT('0',A1,' REACTION RATE CONSTANT            ',E9.3, 
    > ' L/MG-H') 
     WRITE(6,202)ID(MODT,2),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,5),BP 
     WRITE(6,204)ID(MODT,3),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,4),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,6),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,9),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,10),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCUFT') 
 125 WRITE(6,121)STARDA 
     CALL OXIDPR(OREQ,VOL,QAVE,COSTDS,RSDS,RSST,1) 
     CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     CALL INIT(RR,QQ,34) 
     RETURN 
     END 
     SUBROUTINE OXIDPR(O2,XV,QAVG,XOSTDS,RSDS,RSST,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.NE.0)GO TO 678 
     V=XV*10.0**6/7.48 
     COSTDS=XOSTDS 
     FNUM=23.0 
     N=1 
     IF(QAVG.GT.1.0)N=2 
     NTRUN=1 
     IF(QAVG.LE.10.0)GO TO 1 
     NTRUN=(QAVG/10.0)+1 
     N=2 
   1 FLRTO=O2/3.74/24.0 
     FLRTM=V*7.48/21000.0 
     FLRT=FLRTO 
     IF(FLRTM.GT.FLRTO)FLRT=FLRTM 
     K=2 
     VPB=V/N 
     MTRUN=VPB/600000.0+0.99 
     IF(MTRUN.GT.NTRUN)NTRUN=MTRUN 
     VPB=VPB/NTRUN 
     IF(VPB.GT.332000.0)K=3 
     IF(VPB.GT.498000.0)K=4 
     FLRTK=FLRT/N/K/NTRUN 
   9 IF(FLRTK.LE.50.0)GO TO 3 
     K=K+1 
     FLRTK=FLRT/N/K/NTRUN 
     GO TO 9 
   3 HPK=15.0 
     IF(FLRTK.GT.10.0)HPK=20.0 
     IF(FLRTK.GT.13.0)HPK=30.0 
     IF(FLRTK.GT.16.0)HPK=40.0 
     IF(FLRTK.GT.22.0)HPK=50.0 
     IF(FLRTK.GT.27.0)HPK=60.0 
     IF(FLRTK.GT.30.0)HPK=75.0 
     WB=FLRTK+1.0 
     IF(FLRTK.GT.15.5)WB=FLRTK+4.0 
     IF(N.GT.1)GO TO 4 
     VE=18.85*WB**2+150.8*WB+282.7 
     FLS=(V-VE)/(36.0+12.0*WB) 
     VS=36.0*FLS+12.0*FLS*WB 
     FLT=FLS+2.0*WB+14.0 
     WT=2.0*WB+15.0 
     GO TO 5 
   4 VE=37.7*WB**2+18.9*WB 
     VD=VPB 
     VS=VD-VE 
     FLS=VS/2.0/12.0/WB 
     FLT=FLS+2.0*WB 
     WT=2.0*WB+1.0 
   5 IF(N.GT.1)GO TO 7 
     VEX=1.1*(14.0*FLS*WB+56.0*FLS+44.0*WB**2+426.6*WB+1002.8) 
     VCW=7.0*FLS 
     VCS=4.0*FLS+WB*FLS+10.5*FLS+1.57*WB**2+21.6*WB+45.4 
     FLHR=2.0*FLS+6.28*WB+47.1 
     VBF=0.0 
     GO TO 6 
   7 VEX=17.6*(2.0*WT+FLT+20.0)+5.0*(2.0*WT+10.0)*(FLT+10.0) 
     VBF=16.0*(2.0*WT+FLT+20.0) 
     VCW=63.0*FLS+340.1*WB+85.1 
     VCS=1.33*WB*FLS+20.7*FLS+2.1*WB**2+52.5*WB+25.72 
     FLHR=0.0 
   6 FLW=3.0*QAVG*10.0**6/N/66.1/1440.0/NTRUN 
     VCEW=20.0+4.0*FLW 
     OMH=1000.0*(QAVG/NTRUN)**0.544*NTRUN 
     FKWH=N*K*FLRTK*1.15*0.85*24.0*365.0*NTRUN 
     THP=N*K*HPK 
     OMMP=4.225-0.975*ALOG10(THP) 
     CF=1.052 
     VET=(VEX+VBF)*NTRUN 
     COSTE=VET/27.0*UPIEX 
     COSTCW=(VCW+VCEW*N)/27.0*UPICW*NTRUN 
     COSTCS=VCS/27.0*NTRUN*UPICS 
     COSTRO=10.0**(-0.2672+0.001336*FLRTK) 
     IF(FLRTK.GT.20.0)COSTRO=10.0**(0.02228*(FLRTK-20.0)) 
     L=0 
     FLO2=FLRTK 
     IF(FLRTK.LT.30.0)GO TO 8 
  18 L=L+1 
     FLO2=FLO2/2.0 
     IF(FLO2.GT.30.0)GO TO 18 
     COSTRO=10.0**(-0.2672+0.001336*FLO2) 
     IF(FLO2.GT.20.0)COSTRO=10.0**(0.02228*(FLO2-20.0)) 
     COSTRO=COSTRO*1.755**L 
   8 IF(COSTDS.EQ.0.0)COSTDS=15340.0*FMSECI/491.6 
     COSTRK=COSTDS*COSTRO 
     FIMH=10.0+2.667*FLRTK 
     FICOST=FIMH*FLABRI 
     PMINC=52.04-0.34*FLRTK 
     IF(PMINC.LT.40.0)PMINC=40.0 
     FIEC=N*NTRUN*K*(COSTRK*(1.0+PMINC/100.0)+FICOST) 
     COSTHR=FLHR*UPIHR 
     CC=(COSTE+COSTCW+COSTCS+FIEC+COSTHR)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS+COSTHR) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSDS,RC2) 
     OMMC=FIEC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL OXIDQU(FLRT,N,K,FLRTK,WB,FLS,FLT,WT,VET,VBF, 
    >VCW,VCS,QAVG,FLW,VCEW,FLHR,OMH,FKWH,THP,OMMC,NTRUN) 
     RETURN 
     END 
     SUBROUTINE OXIDQU(FLRT,N,K,FLRTK,WB,FLS,FLT,WT,VET,VBF,VCW,VCS, 
    >QAVG,FLW,VCEW,FLHR,OMMH,FKWH,THP,OMMP,NTRUN) 
     VEX=VET/NTRUN 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR OXIDATION DITCH') 
     WRITE(6,101)NTRUN 
 101 FORMAT('0NUMBER OF BATTERIES',T45,I9) 
     WRITE(6,2)FLRT 
2    FORMAT(' LENGTH OF ROTOR REQUIRED PER BATTERY',T45,E9.3,' FEET') 
     WRITE(6,3)N 
3    FORMAT(' NUMBER OF BASINS PER BATTERY',T45,I9) 
     WRITE(6,4)K 
4    FORMAT(' NUMBER OF ROTORS PER BASIN',T45,I9) 
     WRITE(6,5)FLRTK 
5    FORMAT(' INDIVIDUAL ROTOR LENGTH',T45,E9.3,' FEET') 
     WRITE(6,6)WB 
6    FORMAT(' DITCH BOTTOM WIDTH',T45,E9.3,' FEET') 
     WRITE(6,7)FLS 
7    FORMAT(' LENGTH OF STRAIGHT SECTION',T45,E9.3,' FEET') 
     WRITE(6,8)FLT 
8    FORMAT(' TOTAL LENGTH',T45,E9.3,' FEET') 
     WRITE(6,9)WT 
9    FORMAT(' TOTAL WIDTH',T45,E9.3,' FEET') 
     WRITE(6,10)VEX 
10   FORMAT(' VOLUME OF EXCAVATION PER BATTERY',T45,E9.3,' CU FT') 
     WRITE(6,11)VBF 
11   FORMAT(' VOLUME OF BACKFILL PER BATTERY',T45,E9.3,' CU FT') 
     WRITE(6,12)VCW 
12   FORMAT(' WALL CONCRETE PER BATTERY',T45,E9.3,' CU FT') 
     WRITE(6,13)VCS 
13   FORMAT(' SLAB CONCRETE PER BATTERY',T45,E9.3,' CU FT') 
     WRITE(6,14)QAVG 
14   FORMAT(' AVERAGE DAILY WASTEWATER FLOW',T45,E9.3,' MGD') 
     WRITE(6,15)N 
15   FORMAT(' NUMBER OF ADJUSTABLE WEIRS PER BATTERY',T45,I9) 
     WRITE(6,16)FLW 
16   FORMAT(' LENGTH OF ADJUSTABLE WEIR',T45,E9.3,' FEET') 
     WRITE(6,17)VCEW 
17   FORMAT(' VOLUME OF CONCRETE PER WEIR',T45,E9.3,' CU FT') 
     WRITE(6,18)FLHR 
18   FORMAT(' TOTAL HANDRAIL LENGTH',T45,E9.3,' FEET') 
     WRITE(6,19)OMMH 
19   FORMAT(' TOTAL O & M MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,20)FKWH 
20   FORMAT(' TOTAL ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWH/YR') 
     WRITE(6,21)THP 
21   FORMAT(' TOTAL INSTALLED HP PER BATTERY',T45,E9.3,' HP') 
     WRITE(6,22)OMMP 
  22 FORMAT(' O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     RETURN 
     END 
     SUBROUTINE PECOEX(FMLSS,QQMAX,XSP,XWS,XEBOD,XESS,FP,VVOLAT,EBODS, 
    <QC,QQAVE,RR) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     CALL INIT(QQ,RR,24) 
     SP=XSP 
     XESS=ESS 
     SA=QQAVE*1000000.0/SFR 
     ASLR=QQAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,49.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(60) 
     GO TO 2 
   3 CALL RECTPR(0,49.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(60) 
   2 WL=QQMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     EBOD=EBODS+0.84*FP*ESS*VVOLAT/100.0 
     XEBOD=EBOD 
     XWS=WS 
     QC=UC 
     SETSO=0.0 
     CALL INIT(RR,QQ,24) 
     RETURN 
     END 
     SUBROUTINE PECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,24) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,8,11,12,13),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 CALL INIT(RR,QQ,24) 
     RETURN 
   8 COSTES=VALUE(1) 
     GO TO 50 
  13 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  11 RECT=1.0 
     GO TO 50 
  12 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE PECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,24) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR PURE OXYGEN') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,235)SA 
 235 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,49.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,49.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE PFILEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),HPD),(QQ(7),SLR),(QQ(8),AF) 
    >,(QQ(9),CS),(QQ(10),RSST) 
     CALL INIT(QQ,RR,10) 
     PDSPD=PSOLID*PVOLU*8.34/100.0*(1.0+CS/100.0) 
     PFC=PDSPD/CSC*100.0 
     CV=PFC/CD 
     AF=PDSPD/HPD/SLR 
     PVOLU=PDSPD*100.0/CSC/8.34 
     PSOLID=CSC 
     CALL PRICE(QAVE,0.0,0.0,66,RSST) 
     CALL INIT(RR,QQ,10) 
     RETURN 
     END 
     SUBROUTINE PFILIN(RR) 
     DIMENSION RR(1),LIST(7) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),HPD),(QQ(7),SLR),(QQ(8),AF) 
    >,(QQ(9),CS),(QQ(10),RSST) 
     DATA LIST/'CAKE','DENS','OPER','SOLI','END','COND','REPL'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,10) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,101)IDENT,IXX,KLM 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,7 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7),I 
   1 CSC=VALUE(1) 
     GO TO 50 
   2 CD=VALUE(1) 
     GO TO 50 
   3 HPD=VALUE(1) 
     GO TO 50 
   4 SLR=VALUE(1) 
     GO TO 50 
   5 CALL INIT(RR,QQ,10) 
     RETURN 
   6 CS=VALUE(1) 
     GO TO 50 
   7 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE PFILOT(RR) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),HPD),(QQ(7),SLR),(QQ(8),AF) 
    >,(QQ(9),CS),(QQ(10),RSST) 
     CALL INIT(QQ,RR,10) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0BELT FILTERS') 
 101 FORMAT('0TOTAL DRY SOLIDS PRODUCED         ',E9.3,' LB/DAY') 
 102 FORMAT(' WEIGHT OF FILTER CAKE PRODUCED    ',E9.3,' LB/DAY') 
 103 FORMAT(' CAKE DENSITY                      ',E9.3,' LB/CUFT') 
 104 FORMAT(' OPERATING SCHEDULE                ',E9.3,' HRS/DAY') 
 109 FORMAT(' CONDITIONING MATERIAL             ',E9.3,' PERCENT') 
     WRITE(6,101)PDSPD 
     WRITE(6,102)PFC 
     WRITE(6,103)CD 
     WRITE(6,204)CV 
 204 FORMAT(' CAKE VOLUME                       ',E9.3,' CUFT/DAY') 
     WRITE(6,104)HPD 
 105 FORMAT(' SOLIDS LOADING RATE               ',E9.3,' LB/SQFT/HR') 
 106 FORMAT(' FILTER AREA                       ',E9.3,' SQ FT') 
     WRITE(6,105)SLR 
     WRITE(6,106)AF 
     WRITE(6,109)CS 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE PLUGEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FKI    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     FK=FKI 
     QQQ=0.5*QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(22) 
   2 FK=FK*THETA**(TEMP-20.0) 
     NUM=NUM-2 
     AT=24.0*BOD5/FMLVS/FOM 
     AT2=-ALOG(EBODS/BOD5)/(FMLVS*FK) 
     IF(AT2.GT.AT)AT=AT2 
     VOL=QAVE*AT/24.0 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     IF(OBOD.LT.1.25)OREQ=1.25*BOD5*QAVE*8.34 
     IF(OBOD.GT.1.5)OREQ=1.5*BOD5*QAVE*8.34 
     SVOLAT=SOLIDS*VOLAT/100.0 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <+FNDF/100.0*QAVE*SVOLAT*8.34+QAVE*(SOLIDS-SVOLAT)*8.34 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.6)SP=0.6*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     SETSO=0.0 
     OAG=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,VOL,HP,SSXSA,15.0,0,RSSA,RSST) 
     CALL USEREX(22) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,15.0,0, 
    >RSPD,RSPH,RSST) 
     CALL USEREX(22) 
   4 CALL INIT(RR,QQ,40) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE PLUGIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(10) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS),(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH), 
    >(QQ(40),RSPS) 
     DATA IA/'I'/ 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ','MECH','DIFF', 
    >'ESTI','REPL'/ 
     CALL INIT(QQ,RR,40) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     FNDF=VALUE(6) 
     FP=VALUE(7) 
     DO 221 I=1,7 
 221 ID(MODT,I)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,9)=IA 
     ID(MODT,10)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,40) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE PLUGOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0PLUG FLOW ACTIVATED SLUDGE') 
     WRITE(6,201)ID(MODT,1),FK 
 201 FORMAT('0',A1,' REACTION RATE CONSTANT            ',E9.3, 
    > ' L/MG-H') 
     WRITE(6,202)ID(MODT,2),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,5),BP 
     WRITE(6,204)ID(MODT,3),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,4),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,6),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS/DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,9),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,10),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCFT') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,VOL,HP,SSXSA,15.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,15.0,1 
    >,RSPD,RSPH,RSST) 
   4 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE POLYPR(PLMER,FNUM) 
     COMMON ICTL,KCTL,IPRT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/EPACCI/EPACI,DIVSOR 
     NO=FNUM 
     CPMFED=EPACI/DIVSOR*4524.0*PLMER**0.4075 
     IF(PLMER.GT.30.0)CPMFED=EPACI/DIVSOR*1018.0*PLMER**0.8562 
     FLCV=48.0*PLMER 
     OMMPI=600.0 
     IF(FLCV.GT.90.0)OMMPI=189.2*FLCV**0.2565 
     IF(FLCV.GT.350.0)OMMPI=33.4*FLCV**0.5527 
     IF(FLCV.GT.1050.0)OMMPI=51.8*FLCV**0.4894 
     IF(FLCV.GT.10000.0)OMMPI=12.2*FLCV**0.647 
     OMMPII=92.5*FLCV**0.2827 
     OMMP=OMMPI+OMMPII 
     OMMC=2.0*CPMFED/100.0 
     RS=40.0 
     CALL AMORT(CPMFED,RS,RC1) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CPMFED 
     SUMMDA(NUM,2)=OMMP 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=58.0 
     IF(KCTL.NE.0.AND.IPRT.EQ.1)CALL POLYQU(PLMER,EPACI,FLCV,OMMPI, 
    >OMMPII,OMMP,OMMC,NO) 
     RETURN 
     END 
     SUBROUTINE POLYQU(PLMER,EPACI,FLCV,OMMPI,OMMPII,OMMP,OMMC,NO) 
     CALL TITLE 
     IF(NO.EQ.81)WRITE(6,12) 
     IF(NO.EQ.85)WRITE(6,11) 
     IF(NO.EQ.86)WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR POLYMER FEED SYSTEM FOR CENTRIFUGE') 
11   FORMAT('0QUANTITIES FOR POLYMER FEED SYSTEM FOR VACUUM FILTRATION' 
    >) 
12   FORMAT('0QUANTITIES FOR POLYMER FEED SYSTEM FOR SLUDGE FLOTATION') 
     WRITE(6,2)PLMER 
2    FORMAT('0POLYMER DOSAGE',T45,E9.3,' LBS/DAY') 
     WRITE(6,3)EPACI 
3    FORMAT(' EPA COST INDEX USED',T45,E9.3) 
     WRITE(6,5)FLCV 
5    FORMAT(' LIQUID CHEMICAL SOLUTION FED PER DAY',T45,E9.3, 
    > ' GAL/DAY') 
     WRITE(6,6)OMMPI 
6    FORMAT(' OPERATION AND MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/ 
    >YR') 
     WRITE(6,7)OMMPII 
7    FORMAT(' DRY MATERIAL HANDLING AND MIXING MANPOWER',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     WRITE(6,8)OMMP 
8    FORMAT(' TOTAL OPERATION AND MAINTENANCE MANPOWER ',T45,E9.3, 
    > ' MAN-HOURS/YR') 
     RETURN 
     END 
     SUBROUTINE POSTEX(RR) 
     DIMENSION RR(1),KT(6),HPA(11) 
     EQUIVALENCE (QQ(1),DO2I),(QQ(2),DO2E),(QQ(3),T), 
    >(QQ( 4),P     ),(QQ( 5),ST    ),(QQ( 6),CL    ),(QQ( 7),ITYP  ), 
    > (QQ( 8),ALPHA ),(QQ( 9),BETA  ),(QQ(10),STE   ),(QQ(11),FN    ), 
    > (QQ(12),FM    ),(QQ(13),XOSTSA),(QQ(14),XOSTPD),(QQ(15),XOSTPH), 
    > (QQ(16),CS    ),(QQ(17),O2    ),(QQ(18),OTE   ),(QQ(19),V     ), 
    > (QQ(20),HP    ),(QQ(21),K     ),(QQ(22),HPS   ),(QQ(23),DW    ), 
    > (QQ(24),R     ),(QQ(25),FL    ),(QQ(26),W     ),(QQ(27),RA    ), 
    > (QQ(28),H     ),(QQ(29),NS    ),(QQ(30),NSA   ),(QQ(31),ND    ), 
    > (QQ(32),FKWH  ),(QQ(33),OMH   ),(QQ(34),FMMH  ),(QQ(35),OMMP  ), 
    > (QQ(36),VCW   ),(QQ(37),VCS   ),(QQ(38),HPT   ) 
    >,(QQ(39),RSSA),(QQ(40),RSPD),(QQ(41),RSPH),(QQ(42),RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     DATA KT/1,2,3,4,6,8/ 
     DATA HPA/10.0,15.0,20.,25.,30.,40.,50.,60.,75.,100.,150.0/ 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,42) 
     CS=14.652-0.41022*ST+0.00799*ST**2-0.00007777*ST**3 
     IF(ITYP.GT.1)GO TO 1 
     O2=(DO2E-DO2I)*QAVE*8.34 
     OTE=STE*(CS*BETA*P-CL)*ALPHA*1.02**(ST-20.0)/9.17 
     V=QAVE*T*10.0**6/1440.0 
     IF(ITYP.EQ.1)GO TO 2 
     MECHANICAL DIFFUSERS 
     HP=O2/OTE/24.0 
  14 DO 10 I=1,6 
     K=KT(I) 
     HPOK=HP/K 
     IF(HPOK.GT.150.0)GO TO 10 
     DO 11 J=1,11 
     IF(HPOK.LE.HPA(J))GO TO 12 
  11 CONTINUE 
     J=11 
  12 HPS=HPA(J) 
     GO TO 13 
  10 CONTINUE 
     K=KT(6) 
     HPS=HPA(11) 
  13 DW=4.82*HPS**0.2467 
     IF(HPS.GE.100.0)DW=15.0 
     R=K 
     IF(K.GT.4)R=K/2.0 
     FL=SQRT(V*R/7.48/DW) 
     W=FL/R 
     VCW=0.75*(2.0*(DW+2.0)*(FL+W)) 
     VCS=FL*W*0.75 
     HPT=HPS*K 
     FKWH=HPT*365.0*24.0*0.9*0.85*0.877 
     OMH=509.0*QAVE**0.1651 
     FMMH=160.0*QAVE**0.301 
     OMMP=4.93*HPT**(-0.1827) 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCS=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTR=20.7*HPS**0.2686 
     IF(HPS.GT.25.0)COSTR=4.12*HPS**0.7878 
     COSTSA=XOSTSA 
     IF(COSTSA.EQ.0.0)COSTSA=13960.0*FMSECI/491.60 
     COSTA=COSTSA*COSTR*K/100.0 
     FIMH=0.633*HPS+40.0 
     AIC=FIMH*K*FLABRI 
     EMC=0.589*HPS**(-0.1465)*COSTA 
     FIEC=COSTA+AIC+EMC 
     OMMC=OMMP*FIEC/100.0 
     TBCC=(COSTCW+COSTCS+FIEC+COSTE)*CF 
     PRIN=CF*(COSTCW+COSTCS+COSTE) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSSA,RC2) 
     RC3=0.0 
     GO TO 9 
     DIFFUSED AERATION 
   2 RA=O2*100.0/OTE/0.0176/1440.0 
     FL=V/7.48/450.0 
     DW=15.0 
     W=30.0 
     ND=RA/12.0+0.95 
     IF(ND.LT.1)ND=1 
     NSA=ND/20.0+0.99 
     NB=1 
     NT=1 
     VEW=6.0*NB*((31.5*NT+15.5)*(FL+17.0)+(31.5*NT+23.5)*(FL+25.0))/2.0 
     VCW=22.5*FL+675.0 
     VCS=22.50*FL 
     FKWH=RA*248.9 
     OMH=509.0*QAVE**0.1651 
     FMMH=160.0*QAVE**0.301 
     OMMP=3.57*QAVE**(-0.2602) 
     RS=30.0 
     CF=1.11 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCW/27.0*UPICS 
     COSTPD=XOSTPD 
     IF(COSTPD.EQ.0.0)COSTPD=6.50*FMSECI/491.60 
     COSTD=COSTPD*ND 
     COSTPH=XOSTPH 
     IF(COSTPH.EQ.0.0)COSTPH=5000.0*FMSECI/491.60 
     COSTH=COSTPH*NSA 
     FIMH=25.0*NSA 
     CH=0.10*FIMH 
     COSTAP=617.2*RA**0.2553*CEPCIP/241.0 
     IF(RA.GT.1000.0)COSTAP=1.43*RA**1.1337*CEPCIP/241.0 
     IF(RA.GT.10000.0)COSTAP=28.59*RA**0.8085*CEPCIP/241.0 
     PMINC=10.0 
     FIEC=(COSTD+COSTH)*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR 
     TBCC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=COSTD/(COSTD+COSTH)*FIEC*CF 
     CALL AMORT(PRIN,RSPD,RC2) 
     PRIN=COSTH/(COSTD+COSTH)*FIEC*CF 
     CALL AMORT(PRIN,RSPH,RC3) 
     OMMC=TBCC*OMMP/100.0 
     GO TO 9 
   1 R=(CS-DO2I)/(CS-DO2E) 
     H=(R-1.0)/0.11/FN/FM/(1.0+0.046*TEMP) 
     NS=H/0.50 
     IF(ITYP.EQ.3)NS=1 
     W=40.0*QAVE/((NS-1.0)*1.5+NS*0.50) 
     VCS=W*1.50*NS 
     RS=50.0 
     CF=1.11 
     COSTCS=VCS/27.0*UPICS 
     TBCC=COSTCS*CF 
     CALL AMORT(TBCC,RSST,RC1) 
     RC2=0.0 
     RC3=0.0 
     OMH=0.0 
     FMMH=0.0 
     OMMC=0.0 
     FKWH=0.0 
   9 NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=36.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(46) 
     CALL INIT(RR,QQ,42) 
     RETURN 
     END 
     SUBROUTINE POSTIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),DO2I),(QQ(2),DO2E),(QQ(3),T), 
    >(QQ( 4),P     ),(QQ( 5),ST    ),(QQ( 6),CL    ),(QQ( 7),ITYP  ), 
    > (QQ( 8),ALPHA ),(QQ( 9),BETA  ),(QQ(10),STE   ),(QQ(11),FN    ), 
    > (QQ(12),FM    ),(QQ(13),XOSTSA),(QQ(14),XOSTPD),(QQ(15),XOSTPH), 
    > (QQ(16),CS    ),(QQ(17),O2    ),(QQ(18),OTE   ),(QQ(19),V     ), 
    > (QQ(20),HP    ),(QQ(21),K     ),(QQ(22),HPS   ),(QQ(23),DW    ), 
    > (QQ(24),R     ),(QQ(25),FL    ),(QQ(26),W     ),(QQ(27),RA    ), 
    > (QQ(28),H     ),(QQ(29),NS    ),(QQ(30),NSA   ),(QQ(31),ND    ), 
    > (QQ(32),FKWH  ),(QQ(33),OMH   ),(QQ(34),FMMH  ),(QQ(35),OMMP  ), 
    > (QQ(36),VCW   ),(QQ(37),VCS   ),(QQ(38),HPT   ) 
    >,(QQ(39),RSSA),(QQ(40),RSPD),(QQ(41),RSPH),(QQ(42),RSST) 
     DATA LIST/'DISS','DETE','CORR','SUMM','MINI','MECH','DIFF', 
    >'STEP','FREE','ESTI','END ','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,42) 
   1 FORMAT(A4,A2,74A1) 
   2 READ(5,1)ITYPE,IXX,KLM 
     WRITE(6,951)ITYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 3 I=1,12 
     IF(ITYPE.EQ.LIST(I))GO TO 5 
   3 CONTINUE 
     WRITE(6,4)ITYPE 
   4 FORMAT(' ',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 2 
   5 GO TO (10,20,30,40,50,60,70,80,90,100,110,120),I 
  10 DO2I=VALUE(1) 
     DO2E=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 2 
  20 T=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 2 
  30 P=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 2 
  40 ST=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 2 
  50 CL=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 2 
  60 ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     STE=VALUE(3) 
     ITYP=0 
     ID(MODT,6)=IA 
     GO TO 2 
  70 ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     STE=VALUE(3) 
     ITYP=1 
     ID(MODT,6)=IA 
     GO TO 2 
  80 FN=VALUE(1) 
     FM=VALUE(2) 
     IF(FN.EQ.0.0)FN=0.80 
     IF(FM.EQ.0.0)FM=1.30 
     ID(MODT,6)=IA 
     ITYP=2 
     GO TO 2 
  90 FN=VALUE(1) 
     FM=VALUE(2) 
     IF(FN.EQ.0.0)FN=0.80 
     IF(FM.EQ.0.0)FM=1.00 
     ID(MODT,6)=IA 
     ITYP=3 
     GO TO 2 
 100 XOSTSA=VALUE(1) 
     XOSTPD=VALUE(2) 
     XOSTPH=VALUE(3) 
     GO TO 2 
 110 CALL INIT(RR,QQ,42) 
     RETURN 
 120 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
     END 
     SUBROUTINE POSTOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),DO2I),(QQ(2),DO2E),(QQ(3),T), 
    >(QQ( 4),P     ),(QQ( 5),ST    ),(QQ( 6),CL    ),(QQ( 7),ITYP  ), 
    > (QQ( 8),ALPHA ),(QQ( 9),BETA  ),(QQ(10),STE   ),(QQ(11),FN    ), 
    > (QQ(12),FM    ),(QQ(13),XOSTSA),(QQ(14),XOSTPD),(QQ(15),XOSTPH), 
    > (QQ(16),CS    ),(QQ(17),O2    ),(QQ(18),OTE   ),(QQ(19),V     ), 
    > (QQ(20),HP    ),(QQ(21),K     ),(QQ(22),HPS   ),(QQ(23),DW    ), 
    > (QQ(24),R     ),(QQ(25),FL    ),(QQ(26),W     ),(QQ(27),RA    ), 
    > (QQ(28),H     ),(QQ(29),NS    ),(QQ(30),NSA   ),(QQ(31),ND    ), 
    > (QQ(32),FKWH  ),(QQ(33),OMH   ),(QQ(34),FMMH  ),(QQ(35),OMMP  ), 
    > (QQ(36),VCW   ),(QQ(37),VCS   ),(QQ(38),HPT   ) 
    >,(QQ(39),RSSA),(QQ(40),RSPD),(QQ(41),RSPH),(QQ(42),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    < BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,42) 
 120 FORMAT('0',19A4) 
  50 FORMAT('0',A1,' POST AERATION BY DIFFUSED AERATION') 
  51 FORMAT('0',A1,' POST AERATION BY MECHANICAL AERATION') 
  52 FORMAT('0',A1,' POST AERATION BY CASCADE (STEP) AERATION') 
  53 FORMAT('0',A1,' POST AERATION BY CASCADE (FREE) AERATION') 
 101 FORMAT('0',A1,' DISSOLVED OXYGEN IN INFLUENT',T45,E9.3,' MG/L') 
 102 FORMAT(' ',A1,' DESIRED DISSOLVED OXYGEN IN EFFLUENT',T45,E9.3, 
    > ' MG/L') 
 103 FORMAT(' ',A1,' DETENTION TIME IN AERATION BASIN',T45,E9.3,' MIN') 
 104 FORMAT(' ',A1,' CORRECTION FACTOR FOR PRESSURE',T45,E9.3) 
 105 FORMAT(' ',A1,' SUMMER TEMPERATURE',T45,E9.3,' DEGREES C') 
 106 FORMAT(' ',A1,' MINIMUM DISSOLVED OXYGEN IN BASIN',T45,E9.3, 
    > ' MG/L') 
 130 FORMAT('0',A1,' WATER QUALITY PARAMETER FOR EFFLUENT',T45,E9.3) 
 131 FORMAT(' ',A1,' WEIR GEOMETRY PARAMETER',T45,E9.3) 
 132 FORMAT('   OXYGEN SATURATION AT SUMMER TEMPERATURE',T45,E9.3, 
    > ' MG/L') 
 107 FORMAT('   OXYGEN REQUIRED',T45,E9.3,' LB O2/DAY') 
 108 FORMAT('   OPERATING TRANSFER EFFICIENCY',T45,E9.3,' LB O2/HP/HR') 
 208 FORMAT('   OPERATING TRANSFER EFFICIENCY',T45,E9.3,' PERCENT') 
 109 FORMAT('   VOLUME OF AERATION BASIN',T45,E9.3,' GALLONS') 
 110 FORMAT('   HORSEPOWER REQUIRED',T45,E9.3,' HP') 
 111 FORMAT('0  NUMBER OF AERATORS PER BASIN',T45,I9) 
 112 FORMAT('   HORSEPOWER OF INDIVIDUAL AERATORS',T45,E9.3,' HP') 
 113 FORMAT('0  BASIN DEPTH',T45,E9.3,' FEET') 
 114 FORMAT('   LENGTH OF BASIN',T45,E9.3,' FEET') 
 115 FORMAT('   WIDTH OF BASIN',T45,E9.3,' FEET') 
 116 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 117 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 118 FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 119 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 121 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 122 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
 123 FORMAT('   REQUIRED AIR FLOW',T45,E9.3,' CUFT/MIN') 
 124 FORMAT('   NUMBER OF DIFFUSERS',T45,I9) 
 125 FORMAT('   NUMBER OF SWING ARM DIFFUSER HEADERS',T45,I9) 
 126 FORMAT('   DEFICIT RATIO',T45,E9.3) 
 127 FORMAT('   REQUIRED HEAD',T45,E9.3,' FEET') 
 128 FORMAT('0  NUMBER OF STEPS REQUIRED',T45,I9) 
 129 FORMAT('   WIDTH OF CASCADE AERATOR',T45,E9.3,' FEET') 
     CALL TITLE 
     WRITE(6,120)STARDA 
     IF(ITYP.EQ.0)WRITE(6,51)ID(MODT,6) 
     IF(ITYP.EQ.1)WRITE(6,50)ID(MODT,6) 
     IF(ITYP.EQ.2)WRITE(6,52)ID(MODT,6) 
     IF(ITYP.EQ.3)WRITE(6,53)ID(MODT,6) 
     IF(ITYP.GT.0)GO TO 1 
     WRITE(6,101)ID(MODT,1),DO2I 
     WRITE(6,102)ID(MODT,1),DO2E 
     WRITE(6,103)ID(MODT,2),T 
     WRITE(6,104)ID(MODT,3),P 
     WRITE(6,105)ID(MODT,4),ST 
     WRITE(6,106)ID(MODT,5),CL 
     WRITE(6,132)CS 
     WRITE(6,107)O2 
     WRITE(6,108)OTE 
     WRITE(6,109)V 
     WRITE(6,110)HP 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,150) 
 150 FORMAT('0QUANTITIES FOR POST AERATION BY MECHANICAL AERATION') 
 151 FORMAT('0QUANTITIES FOR POST AERATION BY DIFFUSED AERATION') 
 152 FORMAT('0QUANTITIES FOR POST AERATION BY CASCADE (STEP) AERATION') 
 153 FORMAT('0QUANTITIES FOR POST AERATION BY CASCADE (FREE) AERATION') 
     WRITE(6,111)K 
     WRITE(6,112)HPS 
     WRITE(6,113)DW 
     WRITE(6,114)FL 
     WRITE(6,115)W 
     WRITE(6,116)VCW 
     WRITE(6,117)VCS 
     WRITE(6,118)FKWH 
     WRITE(6,119)OMH 
     WRITE(6,121)FMMH 
     WRITE(6,122)OMMP 
     RETURN 
   1 IF(ITYP.GT.1)GO TO 2 
     WRITE(6,101)ID(MODT,1),DO2I 
     WRITE(6,102)ID(MODT,1),DO2E 
     WRITE(6,104)ID(MODT,3),P 
     WRITE(6,105)ID(MODT,4),ST 
     WRITE(6,106)ID(MODT,5),CL 
     WRITE(6,132)CS 
     WRITE(6,107)O2 
     WRITE(6,208)OTE 
     WRITE(6,109)V 
     WRITE(6,123)RA 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,151) 
     WRITE(6,113)DW 
     WRITE(6,114)FL 
     WRITE(6,115)W 
     WRITE(6,124)ND 
     WRITE(6,125)NSA 
     WRITE(6,116)VCW 
     WRITE(6,117)VCS 
     WRITE(6,118)FKWH 
     WRITE(6,119)OMH 
     WRITE(6,121)FMMH 
     WRITE(6,122)OMMP 
     RETURN 
   2 WRITE(6,130)ID(MODT,6),FN 
     WRITE(6,131)ID(MODT,6),FM 
     WRITE(6,105)ID(MODT,4),ST 
     WRITE(6,132)CS 
     WRITE(6,126)R 
     WRITE(6,127)H 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     IF(ITYP.EQ.2)WRITE(6,152) 
     IF(ITYP.EQ.3)WRITE(6,153) 
     WRITE(6,128)NS 
     WRITE(6,129)W 
     WRITE(6,117)VCS 
     RETURN 
     END 
     SUBROUTINE PRESEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
      COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),CPD),(QQ(7),FCV),(QQ(8),NFC), 
    >(QQ(9),HPD),(QQ(10),FCT),(QQ(11),FCR),(QQ(12),CS),(QQ(13),RSST) 
     CALL INIT(QQ,RR,13) 
     PDSPD=PSOLID*PVOLU*8.34/100.0*(1.0+CS/100.0) 
     PFC=PDSPD/CSC*100.0 
     CV=PFC/CD 
     CPD=CV/FCV 
     NFC=HPD/FCT 
     FCR=CPD/NFC 
     PVOLU=PDSPD*100.0/CSC/8.34 
     PSOLID=CSC 
     CALL PRICE(QAVE,0.0,0.0,65,RSST) 
     CALL INIT(RR,QQ,13) 
     RETURN 
     END 
     SUBROUTINE PRESIN(RR) 
     DIMENSION RR(1),LIST(8) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),CPD),(QQ(7),FCV),(QQ(8),NFC), 
    >(QQ(9),HPD),(QQ(10),FCT),(QQ(11),FCR),(QQ(12),CS),(QQ(13),RSST) 
     DATA LIST/'CAKE','DENS','CHAM','HOUR','CYCL','END ','COND','REPL'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,13) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,101)IDENT,IXX,KLM 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8),I 
   1 CSC=VALUE(1) 
     GO TO 50 
   2 CD=VALUE(1) 
     GO TO 50 
   3 FCV=VALUE(1) 
     GO TO 50 
   4 HPD=VALUE(1) 
     GO TO 50 
   5 FCT=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,13) 
     RETURN 
   7 CS=VALUE(1) 
     GO TO 50 
   8 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE PRESOT(RR) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),PDSPD),(QQ(2),PFC),(QQ(3),CSC), 
    >(QQ(4),CV),(QQ(5),CD),(QQ(6),CPD),(QQ(7),FCV),(QQ(8),NFC), 
    >(QQ(9),HPD),(QQ(10),FCT),(QQ(11),FCR),(QQ(12),CS),(QQ(13),RSST) 
     CALL INIT(QQ,RR,13) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0FILTER PRESS') 
 101 FORMAT('0TOTAL DRY SOLIDS PRODUCED         ',E9.3,' LB/DAY') 
 102 FORMAT(' WEIGHT OF FILTER CAKE PRODUCED    ',E9.3,' LB/DAY') 
 109 FORMAT(' CONDITIONING MATERIAL             ',E9.3,' PERCENT') 
 103 FORMAT(' CAKE DENSITY                      ',E9.3,' LB/CUFT') 
 104 FORMAT(' FILTER CHAMBER VOLUME             ',E9.3,' CU FT') 
 105 FORMAT(' NUMBER OF CHAMBERS PER DAY        ',E9.3) 
 106 FORMAT(' OPERATING SCHEDULE                ',E9.3,' HRS/DAY') 
 107 FORMAT(' NUMBER OF CYCLES PER DAY         ',I9) 
 108 FORMAT(' NUMBER OF CHAMBERS REQUIRED       ',E9.3) 
     WRITE(6,101)PDSPD 
     WRITE(6,102)PFC 
     WRITE(6,103)CD 
     WRITE(6,204)CV 
 204 FORMAT(' CAKE VOLUME                       ',E9.3,' CUFT/DAY') 
     WRITE(6,104)FCV 
     WRITE(6,105)CPD 
     WRITE(6,106)HPD 
     WRITE(6,107)NFC 
     WRITE(6,108)FCR 
     WRITE(6,109)CS 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE PRICE(A,B,C,N,RSST) 
    1.6952 = EPACCI FIRST QUARTER 1977 270.9 OVER EPACCI 1971 159.8 
     COMMON/COSTS/CAPCOS,OPMCOS,AMRCOS,RATE,NOPER,WAGE 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,XHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVG,QMAX 
     COMMON/EPACCI/EPACI,DIVSOR 
     DIMENSION M(12) 
     DATA M/13,14,15,16,17,48,49,51,52,65,66,67/ 
     DO 13 I=1,12 
     IF(N.EQ.M(I))GO TO 14 
  13 CONTINUE 
     I=1000 
  14 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
 COUNTER CURRENT AMMONIA STRIPPING   (SMITH   MCMICHAEL) 
   1 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*.095*X**.9*1000000.0 
     OHR=0.0 
     SU=48.4*365.*X**.658 
     FNUM=6.0 
     XHR=0.0 
     GO TO 50 
 CROSS CURRENT AMMONIA STRIPPING        (SMITH   MCMICHAEL) 
   2 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*.095*X**.9*1000000.0 
     OHR=0.0 
     SU=48.4*365.*X**.658 
     FNUM=7.0 
     GO TO 50 
 CATION EXCHANGE                (BECHTEL) 
   3 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*146943.*X**.88 
     OHR=0.0 
     SU=0.0 
     XHR=3371.*X**.72 
     FNUM=8.0 
     GO TO 50 
 ANION EXCHANGE                   (BECHTEL) 
   4 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*146943.*X**.88 
     OHR=0.0 
     SU=0.0 
     XHR=3371.*X**.72 
     FNUM=9.0 
     GO TO 50 
 NEUTRALIZATION                       (BARNARD   ECKENDFELDER) 
   5 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*0.06*X**.7*1000000.0 
     OHR=0.0 
     XHR=0.0 
     SU=0.0 
     FNUM=10.0 
     GO TO 50 
 RECARBONATION SINGLE STAGE     (NO PRICES) 
   6 CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*0.0 
     OHR=0.0 
     XHR=0.0 
     SU=0.0 
     FNUM=38.0 
     GO TO 50 
 RAPID MIXER AND FLOCCULATOR 
   7 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*0.0 
     OHR=0.0 
     XHR=0.0 
     SU=0.0 
     FNUM=39.0 
     GO TO 50 
 FIRST STAGE RECARBONATION      (NO PRICES) 
   8 X=A 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*(294457.+30075.*X) 
     OHR=0. 
     XHR=2683.*X**.46 
     SU=1824.*X**.65 
     FNUM=41.0 
     GO TO 50 
 SECOND STAGE RECARBONATION     (NO PRICES) 
   9 CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*0.0 
     OHR=0.0 
     XHR=0.0 
     SU=0.0 
     FNUM=42.0 
     GO TO 50 
  FILTER PRESS   (ENVIRO) 
  10 X=ALOG(A) 
     Y=-0.69698-0.12594*X+0.095578*X**2 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*EXP(Y)*10.0**6 
     Z=1.3906-0.73944*X+0.081625*X**2 
     OHR=A*1000.0*EXP(Z)/100.0/6.0*365.0 
     XHR=0.0 
     SU=0.0 
     FNUM=91.0 
     GO TO 50 
  PRESSURE FILTRATION   (ENVIRO) 
  11 X=ALOG(A) 
     Y=-0.69698-0.12594*X+0.095578*X**2 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*EXP(Y)*10.0**6 
     Z=1.3906-0.73944*X+0.081625*X**2 
     OHR=A*1000.0*EXP(Z)/100.0/6.0*365.0 
     XHR=0.0 
     SU=0.0 
     FNUM=92.0 
     GO TO 50 
  WET OXIDATION   (ENVIRO) 
  12 X=ALOG(A/1000.0) 
     Y=4.3685-0.39095*X+0.013492*X**2 
     CC=EPACI/DIVSOR/(1.0+PPROF/100.0)*1.6952*EXP(Y)*A 
     Z=3.4263-0.50377*X+0.022872*X**2 
     OHR=EXP(Z)*A/6.0/1000.0*365.0 
     XHR=0.0 
     SU=0.0 
     FNUM=93.0 
  50 MM=M(I) 
     FKWH=0.0 
     CHEM=0.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OHR 
     SUMMDA(NUM,3)=XHR 
     SUMMDA(NUM,4)=FKWH/UPIPC 
     IF(RSST.EQ.0.0)RSST=40.0 
     CALL AMORT(CC,RSST,RC1) 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=SU 
     SUMMDA(NUM,8)=CHEM 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH 
     CALL USEREX(MM) 
     RETURN 
     END 
     SUBROUTINE PRIMEX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),OFR   ),(QQ(3),TD    ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ), 
    &(QQ( 8),WLR   ),(QQ( 9),SWD   ),(QQ(10),VPSP  ),(QQ(11),SSE   ), 
    &(QQ(12),BODE  ),(QQ(13),BODI  ),(QQ(14),SSI   ),(QQ(15),CODR  ), 
    &(QQ(16),TKNR  ),(QQ(17),CODE  ),(QQ(18),TKNE  ),(QQ(19),PO4R  ), 
    &(QQ(20),SA    ),(QQ(21),WL    ),(QQ(22),SLR   ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON/PSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,25) 
     SSI=SOLIDS 
     BODI=BOD5 
     SA=QAVE/OFR*1000000.0 
     VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   2 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(1,26.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(33) 
     GO TO 1 
   3 CALL RECTPR(1,26.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(33) 
   1 SLR=QAVE*SOLIDS*8.34/SA 
     WL=QMAX/WLR*1000000.0 
     PSP=(QAVE*SSI/100.0*SSR*8.34) 
     VPSP=PSP/SG/(UC/100.0)/8.34 
     SSE=SSI*(1.0-SSR/100.0) 
     PO4=PO4*(1.0-PO4R/100.0) 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     SOLIDS=SSE 
     TOTAL=SVOLU+VPSP 
     TSS=(VPSP*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(VPSP*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(VPSP*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SETSO=0.0 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE PRIMIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),OFR   ),(QQ(3),TD    ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ), 
    &(QQ( 8),WLR   ),(QQ( 9),SWD   ),(QQ(10),VPSP  ),(QQ(11),SSE   ), 
    &(QQ(12),BODE  ),(QQ(13),BODI  ),(QQ(14),SSI   ),(QQ(15),CODR  ), 
    &(QQ(16),TKNR  ),(QQ(17),CODE  ),(QQ(18),TKNE  ),(QQ(19),PO4R  ), 
    &(QQ(20),SA    ),(QQ(21),WL    ),(QQ(22),SLR   ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     DATA LIST/'SURF','DETE','SPEC','UNDE','REMO','WEIR','SIDE','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 101 I=1,12 
 100 FORMAT(A4,A2,74A1) 
     IF(KTYPE.EQ.LIST(I))GO TO 102 
 101 CONTINUE 
     WRITE(6,103)KTYPE 
 103 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
 102 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 OFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 TD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     GO TO 50 
   5 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(5) 
     DO 20 I=3,7 
  20 ID(MODT,I)=IA 
     GO TO 50 
   6 WLR=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   8 CALL INIT(RR,QQ,25) 
     RETURN 
   9 COSTES=VALUE(1) 
     GO TO 50 
  12 RSMS=VALUE(1) 
     RSST=VALUE(2) 
  10 RECT=1.0 
     GO TO 50 
  11 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE PRIMOT(RR,ID,MODT) 
     DIMENSION  ID(3,1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),OFR   ),(QQ(3),TD    ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ), 
    &(QQ( 8),WLR   ),(QQ( 9),SWD   ),(QQ(10),VPSP  ),(QQ(11),SSE   ), 
    &(QQ(12),BODE  ),(QQ(13),BODI  ),(QQ(14),SSI   ),(QQ(15),CODR  ), 
    &(QQ(16),TKNR  ),(QQ(17),CODE  ),(QQ(18),TKNE  ),(QQ(19),PO4R  ), 
    &(QQ(20),SA    ),(QQ(21),WL    ),(QQ(22),SLR   ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0','PRIMARY CLARIFIER') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ID(MODT,1),OFR 
 101 FORMAT('0',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    >' GAL/DAY/SQFT') 
     WRITE(6,102)SA 
 102 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,103)ID(MODT,9),SWD 
 103 FORMAT(' ',A1,' SIDE WATER DEPTH                 ',E9.3,' FEET') 
     WRITE(6,104)TD 
 104 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,105)SLR 
 105 FORMAT('   SOLID LOADING                    ',E9.3,' LB/SQFT/DAY') 
     WRITE(6,106)ID(MODT,8),WLR 
 106 FORMAT(' ',A1,' WEIR LOADING                     ',E9.3, 
    > ' GAL/DAY/FT') 
     WRITE(6,107)WL 
 107 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)VPSP 
 108 FORMAT('   VOLUME OF SLUDGE PRODUCED        ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,3),SSR 
 109 FORMAT(' ',A1,' SUSPENDED SOLIDS REMOVAL         ',E9.3, 
    > ' PERCENT') 
     WRITE(6,110)ID(MODT,4),BODR 
 110 FORMAT(' ',A1,' BOD REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 310 FORMAT(' ',A1,' PO4 REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 117 FORMAT(' ',A1,' COD REMOVAL                      ',E9.3, 
    > ' PERCENT') 
 118 FORMAT(' ',A1,' TKN REMOVAL                      ',E9.3, 
    > ' PERCENT') 
     WRITE(6,117)ID(MODT,5),CODR 
     WRITE(6,118)ID(MODT,6),TKNR 
     WRITE(6,310)ID(MODT,7),PO4R 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,25) 
   2 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(1,26.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 1 
   3 CALL RECTPR(1,26.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   1 RETURN 
     END 
     SUBROUTINE PROCES(N,KSTRT,KEND,KNT,NOSAV,LANA,COSTSB, 
    > LISTRA,LISTPS,LISTPL,MISTRA,ID,LITTLE,ISPEC,MASTER,NO,NOSCH) 
     DIMENSION KNT(60),COSTSB(6) 
     DIMENSION SLR(5),CSLR(3,5) 
     DIMENSION MAST(60) 
     DIMENSION ID(3,1) 
     DIMENSION LISTRA(1),MISTRA(1),LISTPL(1),LISTPS(1),ISPEC(1) 
     DIMENSION KSTRT(4,3),KEND(4,3) 
     DIMENSION MASTER(4,10,60),NO(4,60) 
     COMMON/SPCLCO/KNATS(10),KNATL(10),ISPTYP(40),PER(40), 
    >ISPTNK(40),NEXTAD,KNATSS(10),KNATSL(10) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/CHARCO/MD(9),EPAGO,EPAGLT,EPAG 
     COMMON/USERCO/NOUSER,USERDA(30,9),MODT 
     COMMON/BANKCO/BANKDA(6600) 
     COMMON/IDACO/IDAQ(57),IDAS(15),IDAQS(57),IDASS(15) 
     COMMON/STARCO/STARDA(19) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3),LQADS(80,3),LSADS(20,3) 
     COMMON/TRAINS/ISCH(100,5),FARE(100,5),TAB(5),LSCH(500) 
     COMMON ICTL,KCTL,IPRT,USE(22) 
     COMMON/DESICO/DESIDA(20) 
     COMMON/SSLUCO/SV,SSS,SVS 
     COMMON/PSLUCO/PV,PSS,PVS 
     COMMON/COSTS/CAPCOS,OPMCOS,AMRCOS,RATE,NOPER,WAGE 
     COMMON/TITLCO/ITLE(44),NNT,KKKK,LLLL,NAMT(6,2) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP, 
    > ILABM,IGRAV 
     DATA IBLK/' '/ 
     DATA CSLR/6250.0,3400.0,100.0,1000.0,500.0,3000.0,2150.0, 
    >2600.0,9500.0,950.0,17.0,800.0,650.0,0.0,700.0/ 
     EPAG=EPAGO 
     REVNUE=0.0 
     X=ALOG(USE(2)) 
     XL=2.31048+.18560*X+.04397*X**2+.0019969*X**3 
     XL=EXP(XL) 
     IXL=XL+0.99 
     XL=IXL 
     IF(LANA.NE.0.AND.IPRT.EQ.2)CALL TITLE 
     IF(LANA.NE.0.AND.IPRT.EQ.2)WRITE(6,5555) 
     IF(LANA.NE.0.AND.IPRT.EQ.2)CALL WASTOT 
     QSAVE=USE(2) 
     SUMC=0.0 
     SUMO=0.0 
     SUMA=0.0 
     KMIX=0 
     J1=KSTRT(N,3) 
     J2=J1+1 
     J3=J1+2 
     NULLP=1 
     NUM=0 
     DO 902 I=1,30 
     DO 902 J=1,18 
 902 SUMMDA(I,J)=0.0 
     DO 5501 I=1,10 
     IF(KNATL(I).EQ.0)GO TO 5501 
     KADD=KNATL(I) 
     DO 5502 J=1,22 
     M=KADD+J-1 
5502 BANKDA(M)=0.0 
5501 CONTINUE 
     DO 5503 I=1,10 
     IF(KNATS(I).EQ.0)GO TO 5503 
     KADD=KNATS(I) 
     DO 5504 J=1,3 
     M=KADD+J-1 
5504 BANKDA(M)=0.0 
5503 CONTINUE 
     DO 5505 I=1,10 
     IF(KNATSL(I).EQ.0)GO TO 5505 
     KADD=KNATSL(I) 
     LADD=KNATL(I) 
     DO 5506 J=1,22 
     M=KADD+J-1 
     MM=LADD+J-1 
5506 BANKDA(MM)=BANKDA(M) 
5505 CONTINUE 
     DO 5507 I=1,10 
     IF(KNATSS(I).EQ.0)GO TO 5507 
     KADD=KNATSS(I) 
     LADD=KNATS(I) 
     DO 5508 J=1,3 
     M=KADD+J-1 
     MM=LADD+J-1 
5508 BANKDA(MM)=BANKDA(M) 
5507 CONTINUE 
     MANAE=0 
     QSLR=0.0 
     MANAEX=0 
     DO 2001 I=1,5 
2001 SLR(I)=0.0 
     VSLR=0.02*USE(2) 
     ME=KEND(N,1) 
     DO 2002 I=1,ME 
     IF(KNT(I).EQ.12.OR.KNT(I).EQ.32)GO TO 2100 
     IF(KNT(I).EQ.112.OR.KNT(I).EQ.132)GO TO 2100 
     IF(KNT(I).EQ.212.OR.KNT(I).EQ.232)GO TO 2100 
     GO TO 2002 
2100 VSLR=0.007*USE(2) 
2002 CONTINUE 
2004 MS=KSTRT(N,2) 
     ME=KEND(N,3) 
     DO 2005 I=MS,ME 
     MP=KNT(I) 
     IF(MP.EQ.83.OR.MP.EQ.183.OR.MP.EQ.283)GO TO 2110 
     IF(MP.EQ.82.OR.MP.EQ.182.OR.MP.EQ.282)GO TO 2120 
     IF(MP.EQ.97.OR.MP.EQ.197.OR.MP.EQ.297)GO TO 2130 
     GO TO 2005 
2110 ITYP=1 
     GO TO 2140 
2120 ITYP=2 
     GO TO 2140 
2130 ITYP=3 
2140 MANAEX=1 
     DO 2150 J=1,5 
2150 SLR(J)=(SLR(J)*QSLR+CSLR(ITYP,J)*VSLR)/(QSLR+VSLR) 
     QSLR=QSLR+VSLR 
2005 CONTINUE 
     DO 50 J=1,60 
     NP=KNT(J) 
     IF(NP.EQ.0)GO TO 500 
 ESTABLISH LINE 
     L=1 
     IF(J.GE.KSTRT(N,2).AND.J.LE.KEND(N,2))L=2 
     IF(J.GE.KSTRT(N,3).AND.J.LE.KEND(N,3))L=3 
     IF(L.EQ.2.AND.KMIX.NE.0)GO TO 400 
     IF(L.EQ.3.AND.J.EQ.J1.AND.KMIX.EQ.1)GO TO 200 
     IF(L.EQ.3.AND.J.EQ.J2.AND.KMIX.EQ.2)GO TO 200 
     IF(L.EQ.3.AND.J.EQ.J3.AND.KMIX.EQ.3)GO TO 200 
 201 IF(L.EQ.2.AND.SV.LE.0.0)GO TO 300 
     IF(L.EQ.3.AND.PV.LE.0.0)GO TO 300 
     IF(NULLP.EQ.1)GO TO 1025 
     GO TO 202 
1025 IF(IPRT.EQ.1.AND.NULLP.EQ.1)CALL TITLE 
     IF(IPRT.EQ.1.AND.NULLP.EQ.1)WRITE(6,5555) 
5555 FORMAT('0',31X,'INFLUENT') 
     IF(IPRT.EQ.1.AND.NULLP.EQ.1)CALL WASTOT 
     NULLP=0 
 202 MODT=1 
     IF(NP.LT.1000)GO TO 611 
5003 CALL SPCLEX(NP) 
     GO TO 50 
 611 IF(NP.LE.100)GO TO 612 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 611 
 612 IF(MANAE.NE.0.OR.J.GT.2.OR.NP.EQ.27)GO TO 9612 
     IF(MANAEX.EQ.0)GO TO 9612 
     CALL ANAMIX(QSLR,SLR) 
     MANAE=1 
9612 IF(NP.GT.80)GO TO 1030 
     IF(USE(2).NE.0.0)GO TO 9325 
     KE=KEND(N,1) 
     DO 9326 II=J,KE 
9326 KNT(II)=29 
     GO TO 100 
9325 IF(LITTLE.EQ.0)GO TO 7325 
     IF(NP.EQ.29.OR.NP.EQ.30)GO TO 7325 
     CALL SMALEX(LQADS,LSADS,BANKDA,MODT,IPRT,ID,NP,L,1,IDAQS,IDASS) 
     GO TO 100 
7325 GO TO (8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24, 
    &25,26,27,28,29,30,31,32,33,34,35,39, 
    &801,802,803,804,806,807,811,812,813,700,700,700,816,814,815,817), 
    & NP 
 700 WRITE(6,701) 
 701 FORMAT(' *** INVALID PROCESS ON BLOCK CARD FOR LARGE FACILITY', 
    >' - PROCESS IGNORED ***') 
     GO TO 100 
 804 KADD=LQADD(54,MODT) 
     IADD=IDAQ(54) 
     CALL DATTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL DATTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 802 KADD=LQADD(36,MODT) 
     IADD=IDAQ(36) 
     CALL POSTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL POSTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 803 KADD=LQADD(37,MODT) 
     IADD=IDAQ(37) 
     CALL RBCEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL RBCOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(52,MODT) 
     IADD=IDAQ(52) 
     IF(IPRT.EQ.1)CALL RECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 801 KADD=LQADD(35,MODT) 
     CALL DUMMEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL DUMMOT(BANKDA(KADD)) 
     GO TO 100 
 806 KADD=LQADD(38,MODT) 
     CALL RECAEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL RECAOT(BANKDA(KADD)) 
     GO TO 100 
 807 KADD=LQADD(39,MODT) 
     CALL FLOCEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL FLOCOT(BANKDA(KADD)) 
     KADD=LQADD(41,MODT) 
     CALL FRECEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL FRECOT(BANKDA(KADD)) 
     KADD=LQADD(40,MODT) 
     IADD=IDAQ(40) 
     CALL LRIMEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL LRIMOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(42,MODT) 
     CALL SRECEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL SRECOT(BANKDA(KADD)) 
     GO TO 100 
1030 NP=NP-80 
     IF(LITTLE.EQ.0)GO TO 7001 
     IF(NP.GE.8.AND.NP.LE.11)GO TO 7001 
     IF(NP.EQ.18)GO TO 7001 
     CALL SMALEX(LQADS,LSADS,BANKDA,MODT,IPRT,ID,NP,L,2,IDAQS,IDASS) 
     GO TO 100 
7001 GO TO (1,2,3,4,5,6,7,36,37,38,39,508,509,510,511,512,513, 
    >514,515),NP 
   1 KADD=LSADD(1,MODT) 
     IADD=IDAS(1) 
     IF(L.EQ.2)CALL SLFLEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL SLFLEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL SLFLOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL SLFLOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   2 KADD=LSADD(2,MODT) 
     IADD=IDAS(2) 
     IF(L.EQ.2)CALL AEROEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL AEROEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL AEROOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL AEROOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   3 KADD=LSADD(3,MODT) 
     IADD=IDAS(3) 
     IF(L.EQ.2)CALL ANAEEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL ANAEEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL ANAEOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL ANAEOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   4 KADD=LSADD(4,MODT) 
     IADD=IDAS(4) 
     IF(L.EQ.2)CALL THICEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL THICEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL THICOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL THICOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   5 KADD=LSADD(5,MODT) 
     IADD=IDAS(5) 
     IF(L.EQ.2)CALL VACUEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL VACUEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL VACUOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL VACUOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   6 KADD=LSADD(6,MODT) 
     IADD=IDAS(6) 
     IF(L.EQ.2)CALL CENTEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL CENTEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL CENTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL CENTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   7 KADD=LSADD(7,MODT) 
     IADD=IDAS(7) 
     IF(L.EQ.2)CALL DRYIEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL DRYIEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL DRYIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL DRYIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 811 KADD=LQADD(43,MODT) 
     IADD=IDAQ(43) 
     CALL OVEREX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL OVEROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 99 
 812 KADD=LQADD(44,MODT) 
     IADD=IDAQ(44) 
     CALL RAPIEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1) CALL RAPIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 99 
 813 KADD=LQADD(45,MODT) 
     IADD=IDAQ(45) 
     CALL SLOWEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1) CALL SLOWOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 99 
 814 KADD=LQADD(55,MODT) 
     IADD=IDAQ(55) 
     CALL NRBCEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL NRBCOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 815 KADD=LQADD(56,MODT) 
     IADD=IDAQ(56) 
     CALL NTRFEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL NTRFOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 816 KADD=LQADD(49,MODT) 
     IADD=IDAQ(49) 
     CALL PUMPEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL PUMPOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 817 KADD=LQADD(22,MODT) 
     IADD=IDAQ(22) 
     CALL GECOEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL GECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   8 KADD=LQADD(1,MODT) 
     IADD=IDAQ(1) 
     CALL EQULEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL EQULOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
   9 KADD=LQADD(2,MODT) 
     IADD=IDAQ(2) 
     CALL FLOTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL FLOTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  10 KADD=LQADD(3,MODT) 
     IADD=IDAQ(3) 
     CALL FILTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL FILTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  11 KADD=LQADD(4,MODT) 
     IADD=IDAQ(4) 
     CALL MICREX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL MICROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  12 KADD=LQADD(5,MODT) 
     IADD=IDAQ(5) 
     CALL CARBEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL CARBOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  13 KADD=LQADD(6,MODT) 
     CALL COUNEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL COUNOT(BANKDA(KADD)) 
     GO TO 100 
  14 KADD=LQADD(7,MODT) 
     CALL CROSEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL CROSOT(BANKDA(KADD)) 
     GO TO 100 
  15 KADD=LQADD(8,MODT) 
     CALL CIONEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL CIONOT(BANKDA(KADD)) 
     GO TO 100 
  16 KADD=LQADD(9,MODT) 
     CALL AIONEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL AIONOT(BANKDA(KADD)) 
     GO TO 100 
  17 KADD=LQADD(10,MODT) 
     CALL NEUTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL NEUTOT(BANKDA(KADD)) 
     GO TO 100 
  18 KADD=LQADD(11,MODT) 
     IADD=IDAQ(11) 
     CALL DISIEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL DISIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  19 KADD=LQADD(12,MODT) 
     IADD=IDAQ(12) 
     CALL TRICEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL TRICOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(33,MODT) 
     IADD=IDAQ(33) 
     IF(IPRT.EQ.1)CALL XECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  20 KADD=LQADD(13,MODT) 
     IADD=IDAQ(13) 
     CALL CMASEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL CMASOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  21 KADD=LQADD(14,MODT) 
     IADD=IDAQ(14) 
     CALL STEPEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL STEPOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  22 KADD=LQADD(15,MODT) 
     IADD=IDAQ(15) 
     CALL PLUGEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL PLUGOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  23 KADD=LQADD(16,MODT) 
     IADD=IDAQ(16) 
     CALL HIGHEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL HIGHOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  24 KADD=LQADD(17,MODT) 
     IADD=IDAQ(17) 
     CALL PUREEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL PUREOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(50,MODT) 
     IADD=IDAQ(50) 
     IF(IPRT.EQ.1)CALL PECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  25 KADD=LQADD(18,MODT) 
     IADD=IDAQ(18) 
     CALL EXTEEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL EXTEOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  26 KADD=LQADD(19,MODT) 
     IADD=IDAQ(19) 
     CALL CONTEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL CONTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(31,MODT) 
     IADD=IDAQ(31) 
     IF(IPRT.EQ.1)CALL SECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  27 KADD=LQADD(20,MODT) 
     IADD=IDAQ(20) 
     CALL ZLAGOX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZLAGOO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  28 KADD=LQADD(21,MODT) 
     IADD=IDAQ(21) 
     CALL ZAERAX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZAERAO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  29 KADD=LQADD(57,MODT) 
     IADD=IDAQ(57) 
     CALL RAWSEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL RAWSOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  30 KADD=LQADD(23,MODT) 
     IADD=IDAQ(23) 
     CALL OXIDEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL OXIDOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(51,MODT) 
     IADD=IDAQ(51) 
     IF(IPRT.EQ.1)CALL OECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  31 KADD=LQADD(24,MODT) 
     IADD=IDAQ(24) 
     CALL NITREX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL NITROT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(32,MODT) 
     IADD=IDAQ(32) 
     IF(IPRT.EQ.1)CALL CLAROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  32 KADD=LQADD(25,MODT) 
     IADD=IDAQ(25) 
     CALL COAGEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL COAGOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  33 KADD=LQADD(26,MODT) 
     IADD=IDAQ(26) 
     CALL PRIMEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL PRIMOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  34 KADD=LQADD(27,MODT) 
     CALL GRITEX(BANKDA(KADD)) 
     KADD=LQADD(28,MODT) 
     CALL SCRNEX(BANKDA(KADD)) 
     KADD=LQADD(29,MODT) 
     CALL COMMEX(BANKDA(KADD)) 
     IF(IPRT.NE.1)GO TO 100 
     KADD=LQADD(28,MODT) 
     IADD=IDAQ(28) 
     CALL SCRNOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(27,MODT) 
     IADD=IDAQ(27) 
     CALL GRITOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(29,MODT) 
     IADD=IDAQ(29) 
     CALL COMMOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  35 KADD=LQADD(34,MODT) 
     IADD=IDAQ(34) 
     CALL DENIEX(BANKDA(KADD),MODT) 
     IF(IPRT.NE.1)GO TO 100 
     CALL DENIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADD(53,MODT) 
     IADD=IDAQ(53) 
     CALL DLAROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 508 KADD=LSADD(8,MODT) 
     IADD=IDAS(8) 
     IF(L.EQ.2)CALL HAULEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL HAULEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL HAULOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL HAULOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 509 KADD=LSADD(9,MODT) 
     IADD=IDAS(9) 
     IF(L.EQ.2)CALL MHINEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL MHINEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL MHINOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL MHINOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 510 KADD=LSADD(10,MODT) 
     IADD=IDAS(10) 
     IF(L.EQ.2)CALL FBINEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL FBINEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL FBINOT(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL FBINOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
 511 KADD=LSADD(11,MODT) 
     XSAVE=USE(2) 
     USE(2)=QSAVE 
     IF(L.EQ.2)CALL PRESEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL PRESEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL PRESOT(BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL PRESOT(BANKDA(KADD)) 
     USE(2)=XSAVE 
     GO TO 100 
 512 KADD=LSADD(12,MODT) 
     XSAVE=USE(2) 
     USE(2)=QSAVE 
     IF(L.EQ.2)CALL PFILEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL PFILEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL PFILOT(BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL PFILOT(BANKDA(KADD)) 
     USE(2)=XSAVE 
     GO TO 100 
 513 KADD=LSADD(13,MODT) 
     XSAVE=USE(2) 
     USE(2)=QSAVE 
     IF(L.EQ.2)CALL WETOEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL WETOEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL WETOOT(BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL WETOOT(BANKDA(KADD)) 
     USE(2)=XSAVE 
     GO TO 100 
 514 KADD=LSADD(14,MODT) 
     IF(L.EQ.2)CALL SLUMEX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL SLUMEX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL SLUMOT(BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL SLUMOT(BANKDA(KADD)) 
     GO TO 100 
 515 KADD=LSADD(15,MODT) 
     IADD=IDAS(15) 
     IF(L.EQ.2)CALL ZSLUDX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL ZSLUDX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL ZSLUDO(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL ZSLUDO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 100 
  36 KMIX=1 
     GO TO 100 
  37 KMIX=2 
     GO TO 100 
  38 KMIX=3 
     GO TO 100 
  39 GO TO 100 
 400 KNT(J)=91 
     GO TO 50 
 300 IF(NP.LT.1000)GO TO 5004 
     NN=NP/1000 
     ITYP=ISPTYP(NN) 
     IF(ITYP.EQ.11.OR.ITYP.EQ.12.OR.ITYP.GE.17)GO TO 5003 
5004 KNT(J)=91 
     GO TO 50 
 200 TOT=SV+PV 
     TSS=(SV*SSS+PV*PSS)/TOT 
     VSS=(SV*SSS*SVS+PV*PSS*PVS)/(SV*SSS+PV*PSS) 
     PV=TOT 
     PSS=TSS 
     PVS=VSS 
     SV=0.0 
     SSS=0.0 
     SVS=0.0 
     IF(IPRT.NE.1)GO TO 201 
     CALL TITLE 
     WRITE(6,1201)STARDA 
1201 FORMAT('0',19A4) 
     WRITE(6,8888) 
8888 FORMAT(//,' **** SECONDARY SLUDGE LINE MIXED INTO PRIMARY', 
    &' SLUDGE LINE ****',//) 
     WRITE(6,5555) 
     CALL WASTOT 
     GO TO 201 
  99 CONTINUE 
 100 IF(KNT(J).GE.88.AND.KNT(J).LE.91)GO TO 50 
     IF(KNT(J).EQ.29)GO TO 50 
     IF(IPRT.NE.1)GO TO 50 
     CALL WASTOT 
  50 CONTINUE 
 500 IPRTSV=IPRT 
     SAIR=0.0 
     SLDR=0.0 
     SADR=0.0 
     SIDR=0.00 
     DO 40 I =1,NUM 
     SLDR=SLDR+SUMMDA(I,10) 
     SADR=SADR+SUMMDA(I,11) 
     SIDR=SIDR+SUMMDA(I,12) 
     IF(SUMMDA(I,13).NE.0.0)CALL POLYPR(SUMMDA(I,13),SUMMDA(I,9)) 
  40 SAIR=SAIR+SUMMDA(I,7) 
     CLF=0.74 
     IF(SLDR.GT.750.0)CLF=0.56 
     DO 4040 I=1,NUM 
     SUMMDA(I,14)=SUMMDA(I,14)/CLF 
     SUMMDA(I,15)=SUMMDA(I,15)/0.49 
4040 SUMMDA(I,16)=SUMMDA(I,16)/0.40 
     IF(SLDR.NE.0.0)CALL LIMEPR(SLDR) 
     IF(SADR.NE.0.0)CALL ALUMPR(SADR) 
     IF(SIDR.NE.0.0)CALL IRONPR(SIDR) 
     IF(SAIR.NE.0.0)CALL AIRPR(COSTSB,SAIR) 
     IF(LANA.NE.0.AND.IPRT.EQ.2)WRITE(6,4673) 
     IF(LANA.NE.0.AND.IPRT.EQ.2)CALL WASTOT 
4673 FORMAT('0',31X,'EFFLUENT') 
     IPRT=0 
     IF(LANA.NE.0)IPRT=1 
     USE(2)=QSAVE 
     IF(IPRT.EQ.0)GO TO 5002 
     CALL TITLE 
     WRITE(6,1201)STARDA 
     DO 703 L=1,60 
 703 LISTRA(L)=IBLK 
     KB=KSTRT(N,1) 
     KE=KEND(N,1) 
     DO 704 L=KB,KE 
     NP=KNT(L) 
     IF(NP.EQ.0)GO TO 704 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5009 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NST) 
     GO TO 704 
5009 MODT=0 
1605 IF(NP.LE.100)GO TO 1604 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 1605 
1604 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 704 CONTINUE 
     WRITE(6,705)(LISTRA(L),MISTRA(L) ,L=1,LN) 
 705 FORMAT(/'0LIQUID',4X,10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
     KB=KSTRT(N,2) 
     KE=KEND(N,2) 
     IF(KE.LT.KB.OR.KB.EQ.0)GO TO 708 
     DO 707 L=1,60 
 707 LISTRA(L)=IBLK 
     DO 709 L=KB,KE 
     NP=KNT(L) 
     IF(NP.EQ.0)GO TO 709 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5010 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NST) 
     GO TO 709 
5010 MODT=0 
1606 IF(NP.LE.100)GO TO 1607 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 1606 
1607 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 709 CONTINUE 
     WRITE(6,710)(LISTRA(L),MISTRA(L),L=1,LN) 
 710 FORMAT(' SECONDARY',1X, 10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
 708 KB=KSTRT(N,3) 
     KE=KEND(N,3) 
     IF(KE.LT.KB.OR.KB.EQ.0)GO TO 799 
     DO 1707 L=1,60 
1707 LISTRA(L)=IBLK 
     DO 713 L=KB,KE 
     NP=KNT(L) 
     IF(NP.EQ.0)GO TO 713 
     LN=L-KB+1 
     IF(NP.LT.1000)GO TO 5011 
     NN=NP/1000 
     NST=ISPTYP(NN) 
     LISTRA(LN)=ISPEC(NST) 
     MISTRA(LN)=ISPTNK(NST) 
     GO TO 713 
5011 MODT=0 
 608 IF (NP.LE.100)GO TO 609 
     MODT=MODT+1 
     NP=NP-100 
     GO TO 608 
 609 IF(NP.GT.80)LISTRA(LN)=LISTPS(NP-80) 
     IF(NP.LE.80)LISTRA(LN)=LISTPL(NP) 
     MISTRA(LN)=MODT 
 713 CONTINUE 
     WRITE(6,714)(LISTRA(L),MISTRA(L),L=1,LN) 
 714 FORMAT(' PRIMARY',3X,10(A4,2X,I1,2X)/' ',10X,10(A4,2X,I1,2X)) 
 799 CONTINUE 
     WRITE(6,1201)STARDA 
5002 CALL FIGURE(TAB) 
     IPRT=IPRTSV 
 CHECK EFFLUENT QUALITY UNLESS ANALYSIS MODE                          0 
     IF(LANA.EQ.1)GO TO 502 
     IF(LANA.EQ.2)RETURN 
     DO 501 I=1,20 
     IF(DESIDA(I).LT.0.0)GO TO 501 
     IF(USE(I).LT.1.01*DESIDA(I))GO TO 501 
     RETURN 
 501 CONTINUE 
 502 IF(NOSAV.EQ.0)GO TO 600 
 CHECK FOR DUPLICATED TRAIN 
     DO 307 I=1,NOSAV 
     DO 307 J=1,5 
     CALL IDENTY(ISCH(I,J),NON,MAST,MASTER,KSTRT,KEND,NO,NOSCH) 
     DO 305 JJ=1,60 
     NPN=KNT(JJ) 
     NPO=MAST(JJ) 
     IF(NPO.NE.NPN)GO TO 307 
 305 CONTINUE 
     RETURN 
 307 CONTINUE 
 600 CALL SORTT(NOSAV,NNT,ISCH,FARE,TAB) 
     RETURN 
     END 
     SUBROUTINE PUMPEX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),XOSTPS),(QQ(2),RCP),(QQ(3),DPW),(QQ(4),HPD) 
    >,(QQ(5),RSPS),(QQ(6),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     RSR=RCP/100.0 
     KASE=HPD*DPW*52 
     KASE=KASE*10+1 
     CALL PUMPPR(RSR,QAVE,QMAX,KASE,XOSTPS,0,RSPS,RSST) 
     CALL USEREX(44) 
      CALL INIT(RR,QQ,6) 
     RETURN 
     END 
     SUBROUTINE PUMPIN(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     DIMENSION LIST(6) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),XOSTPS),(QQ(2),RCP),(QQ(3),DPW),(QQ(4),HPD) 
    >,(QQ(5),RSPS),(QQ(6),RSST) 
     DATA LIST/'FLOW','ESTI','END ','DAYS','HOUR','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,6) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,6 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6),I 
   1 RCP=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 XOSTPS=VALUE(1) 
     GO TO 50 
   3 CALL INIT(RR,QQ,6) 
     RETURN 
   4 DPW=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 HPD=VALUE(1) 
     ID(MODT,3)=VALUE(1) 
     GO TO 50 
   6 RSPS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE PUMPOT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     EQUIVALENCE (QQ(1),XOSTPS),(QQ(2),RCP),(QQ(3),DPW),(QQ(4),HPD) 
    >,(QQ(5),RSPS),(QQ(6),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0INTERMEDIATE PUMPING') 
     WRITE(6,201)ID(MODT,1),RCP 
 201 FORMAT('0',A1,' PERCENT OF FLOW PUMPED',T45,E9.3,' PERCENT') 
     WRITE(6,202)ID(MODT,2),DPW 
 202 FORMAT(' ',A1,' DAYS PER WEEK',T45,E9.3,' DAYS') 
     WRITE(6,203)ID(MODT,3),HPD 
 203 FORMAT(' ',A1,' HOURS PER DAY',T45,E9.3,' HOURS') 
     CALL PUMPPR(0.0,0.0,0.0,1,0.0,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE PUMPPR(RSR,QAVG,QMAX,KASE,XOSTPS,IQU,RSPS,RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON ICTL,KCTL,IPRT 
     DIMENSION KPUMP(4) 
     DATA KPUMP/53,30,22,29/ 
     NOHR=365*24 
     IF(KASE.LT.10)GO TO 1 
     NOHR=KASE/10 
     KASE=KASE-10*NOHR 
   1 IF(IQU.EQ.1)GO TO 678 
     XQAVG=QAVG 
     XQMAX=QMAX 
     COSTPS=XOSTPS 
     GPM=QMAX*10.0**6*RSR/1440.0 
     NB=GPM/80000.0+1.0 
     GPMB=GPM/NB 
     N=GPMB/20000.0+1.0 
     IF(N.LT.2)N=2 
     GPMP=GPMB/N 
     NP=N+1 
     PBA=(0.0284*GPMB+200.0)*NB 
     VEW=8.0*PBA 
     GPM=QAVG*10.0**6*RSR/1440.0 
     FPC=GPM*1440.0/10.0**6 
     OMH=440.0*FPC**0.1285 
     IF(FPC.GT.7.0)OMH=294.4*FPC**0.3350 
     IF(FPC.GT.30.0)OMH=40.5*FPC**0.8661 
     IF(FPC.GT.80.0)OMH=21.3*FPC**1.012 
     FMMH=360.0*FPC**0.1478 
     IF(FPC.GT.7.0)FMMH=255.2*FPC**0.3247 
     IF(FPC.GT.30.0)FMMH=85.7*FPC**0.6456 
     IF(FPC.GT.80.0)FMMH=30.6*FPC**0.8806 
     FKWH=67000.0*QAVG**0.9976 
     FKWH=FKWH*NOHR/(365*24) 
     OMMP=0.7 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTPB=PBA*UPIBC 
     COSTRO=2.93*GPMP**0.4404 
     IF(GPMP.GT.5000.0)COSTRO=0.0064*GPMP**1.16 
     IF(COSTPS.EQ.0.0)COSTPS=17250.0*FMSECI/491.6 
     COSTP=COSTRO/100.0*COSTPS*NP*NB 
     FIPC=COSTP*2.0 
     CC=(COSTE+COSTPB+FIPC)*CF 
     PRIN=(COSTE+COSTPB)*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=FIPC*CF 
     CALL AMORT(PRIN,RSPS,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=KPUMP(KASE) 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL PUMPQU(XQAVG,GPMP,NP,NB,PBA,VEW,FPC,OMH,FMMH, 
    > FKWH,KASE,XQMAX) 
     RETURN 
     END 
     SUBROUTINE PUMPQU(QAVG,GPMP,NP,NB,PBA,VEW,FPC,OMH,FMMH,FKWH, 
    > KASE,QMAX) 
     CALL TITLE 
     IF(KASE.EQ.1)WRITE(6,1) 
     IF(KASE.EQ.2)WRITE(6,12) 
     IF(KASE.EQ.3)WRITE(6,13) 
     IF(KASE.EQ.4)WRITE(6,14) 
  12 FORMAT('0QUANTITIES FOR RECYCLE PUMPING') 
  13 FORMAT('0QUANTITIES FOR SLUDGE RECYCLE PUMPING') 
  14 FORMAT('0QUANTITIES FOR WASH WATER PUMPING') 
1    FORMAT('0QUANTITIES FOR INTERMEDIATE PUMPING') 
     WRITE(6,2)QAVG 
2    FORMAT('0AVERAGE DAILY PUMPING RATE',T45,E9.3,' MGD') 
  18 FORMAT(' TOTAL PUMPING CAPACITY',T45,E9.3,' MGD') 
     WRITE(6,18)QMAX 
     WRITE(6,3)GPMP 
3    FORMAT(' DESIGN CAPACITY PER PUMP',T45,E9.3,' GPM') 
     WRITE(6,31)NP 
  31 FORMAT(' NUMBER OF PUMPS',T45,I9) 
     WRITE(6,4)NB 
4    FORMAT(' NUMBER OF BATTERIES',T45,I9) 
     WRITE(6,5)PBA 
5    FORMAT(' AREA OF PUMP BUILDING ',T45,E9.3,' SQ FT') 
     WRITE(6,6)VEW 
6    FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,7)FPC 
7    FORMAT(' FIRM PUMPING CAPACITY',T45,E9.3,' MGD') 
     WRITE(6,8)OMH 
8    FORMAT(' OPERATING MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,9)FMMH 
9    FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,10)FKWH 
10   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE PUREEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),RSSA  ),(QQ(3),RSSP  ), 
    &(QQ( 4),RSCR  ),(QQ( 5),RSPS  ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VD    ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTSP),(QQ(35),COSTCS), 
    >(QQ(36),COSTPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,36) 
     QQQ=0.5*QAVE 
     NUM=NUM+1 
   1 IF(FOM.EQ.0.0)FOM=0.70 
     FMLVS1=QAVE*BOD5*8.34/FOM 
     FMLVS2=QMAX*BOD5*8.34/2.0 
     FMLVSD=FMLVS1 
     IF(FMLVS2.GT.FMLVSD)FMLVSD=FMLVS2 
     VC=FMLVS/FMLSS 
     FMLSSD=FMLVSD/VC 
     V=FMLVSD*10.0**6/8.34/FMLVS/7.48 
     OREQ=(0.48+0.32/FOM)*QAVE*BOD5*8.34 
     IF(COD/BOD5.GE.2.50)OREQ=(0.653+0.347/FOM)*QAVE*BOD5*8.34 
     IF(COD/BOD5.GE.3.0)OREQ=(0.953+0.309/FOM)*QAVE*BOD5*8.34 
     XV=(1.073-0.193/FOM)*1.55**(COD/BOD5-2.5)*QAVE*(BOD5-EBODS)*8.34 
     XO=SOLIDS*(1.0-VOLAT/100.0)*QAVE*8.34 
     XT=XV+XO 
     VOL=V*7.48/1000000.0 
     SP=XT 
     SVOLAT=XV 
     AT=VOL*24.0/QAVE 
   6 FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(50,MODT) 
     CALL PECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     SETSO=0.0 
     OAG=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 CALL PUREPR(QAVE,OREQ,VOL,COSTSP,COSTSC,SSXSA,0,VD, 
    >RSSA,RSSP,RSCR,RSST) 
     CALL USEREX(24) 
     NUM=NUM+1 
     CALL PUMPPR(1.0,QAVE,QAVE,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(24) 
   4 CALL INIT(RR,QQ,36) 
     RETURN 
     END 
     SUBROUTINE PUREIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(10) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),RSSA  ),(QQ(3),RSSP  ), 
    &(QQ( 4),RSCR  ),(QQ( 5),RSPS  ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VD    ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTSP),(QQ(35),COSTCS), 
    >(QQ(36),COSTPS) 
     DATA LIST/'CONS','F/M ','REPL','MIXE','EFFL','END ','MECH','DIFF', 
    > 'ESTI','XXXX'/ 
     DATA IA/'I'/ 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,36) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 FP=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 RSSA=VALUE(1) 
     RSSP=VALUE(2) 
     RSCR=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
   4 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,1)=IA 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,36) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTSP=VALUE(2) 
     COSTCS=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 GO TO 50 
     END 
     SUBROUTINE PUREOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),RSSA  ),(QQ(3),RSSP  ), 
    &(QQ( 4),RSCR  ),(QQ( 5),RSPS  ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VD    ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTSP),(QQ(35),COSTSC), 
    >(QQ(36),COSTPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,36) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0PURE OXYGEN ACTIVATED SLUDGE') 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLVSS/DAY               ',E9.3, 
    >' LB/LB/DAY') 
     WRITE(6,212)ID(MODT,1),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,1),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VD 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' CU FT') 
     IF(ENABLE.EQ.0.0)CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'  ****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'  ****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCFT') 
 125 WRITE(6,121)STARDA 
     CALL PUREPR(QAVE,OREQ,VOL,COSTSP,COSTSC,SSXSA, 
    > 1,VD,RSSA,RSSP,RSCR,RSST) 
     CALL PUMPPR(1.0,QAVE,QAVE,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE PUREPR(QAVG,O2,V,XOSTSP,XOSTSC,XSXSA,IQU,VD, 
    >RSSA,RSSP,RSCR,RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION HPIA(14) 
     DATA HPIA/5.0,7.5,10.0,15.0,20.0,25.0,30.0,40.0,50.0,60.0,75.0, 
    > 100.0,125.0,150.0/ 
     IF(IQU.EQ.1)GO TO 678 
     COSTSP=XOSTSP 
     COSTSC=XOSTSC 
     SSXSA=XSXSA 
     FNUM=17.0 
     ECFAT=1.0 
     ECFAS=1.0 
     VD=ECFAT*V*10.0**6/7.48 
     OXYGEN=O2*ECFAS/2000.0/0.90 
     NB=QAVG/150.0+0.99 
     IF(NB.EQ.0)NB=1 
     QPB=QAVG/NB 
     NS=3 
     NT=2 
     IF(QPB.GT.15.0)NT=3 
     IF(QPB.GT.30.0)NT=4 
     IF(QPB.GT.50.0)NT=5 
     IF(QPB.GT.60.0)NT=6 
     IF(QPB.GT.80.0)NT=7 
     IF(QPB.GT.100.0)NT=8 
     IF(QPB.GT.120.0)NT=10 
     T=(VD/(NB*NT*NS*0.30))**0.3333 
     SWD=0.30*T 
     Z=SWD+2.5 
     DHP=OXYGEN*0.90*2000.0/24.0/7.0 
     IF(OXYGEN.GT.20.0)DHP=OXYGEN*0.90*2000.0/24.0/8.5 
     GHP=20.4*OXYGEN 
     IF(OXYGEN.GT.20.0)GHP=17.5*OXYGEN 
     THP=DHP+GHP 
     CUC=OXYGEN 
     N=1 
   2 IF(CUC.LE.100.0)GO TO 1 
     N=N+1 
     CUC=OXYGEN/N 
     GO TO 2 
   1 HPS=DHP/NT/NS/NB 
     DO 3 I=1,14 
     IF(HPIA(I).GE.HPS)GO TO 4 
   3 CONTINUE 
     I=14 
   4 HPS=HPIA(I) 
     VEW=(Z/2.0+1.0)*((NS*T+NS+4.0)*(NT*T+NT+4.0)+(NS*T+NS+Z+6.0)* 
    > (NT*T+NT+Z+6.0))/2.0 
     VCS=(NS*T+NS+4.0)*(NT*T+NT+4.0) 
     VCW=(NS*T+NS+1.0)*(NT+1.0)+(NT*T+NT+1.0)*(NS+1.0) 
     VCTS=(NS*T+NS+1.0)*(NT*T+NT+1.0) 
     VCET=12.5*(NT*T+NT+1.0) 
     VCWT=VCW+VCTS+VCET 
     FKWH=0.85*0.90*24.0*365.0*THP 
     OMH=242.4*THP**0.3731 
     IF(THP.GE.200.0)OMH=100.0*THP**0.5425 
     FMMH=160.0+106.3*DHP**0.4031 
     IF(DHP.GT.100.0)FMMH=160.0+42.6*DHP**0.5956 
     IF(OXYGEN.LE.20.0)GO TO 5 
     FMMH=480.0+106.3*DHP**0.4031 
     IF(DHP.GT.100.0)FMMH=480.0+42.6*DHP**0.5956 
   5 OMMPA=4.225-0.975*ALOG10(DHP) 
     OMMPO=1.35 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCS=VCS/27.0*UPICS 
     COSTCW=VCWT/27.0*UPICW 
     COSTRO=22.96*OXYGEN**0.6531 
     IF(COSTSP.EQ.0.0)COSTSP=800000.0*FMSECI/491.6 
     COSTOE=COSTSP*COSTRO/100.0 
     FIOEC=1.28*COSTOE 
     PRIN=FIOEC*CF 
     CALL AMORT(PRIN,RSSP,RC1) 
     IF(OXYGEN.LE.20.0)GO TO 7 
     COSTRO=14.1*OXYGEN**0.5041 
     IF(COSTSC.EQ.0.0)COSTSC=1900000.0*FMSECI/491.6 
     COSTOE=COSTSC*COSTRO/100.0 
     FIOEC=1.23*COSTOE*N 
     PRIN=FIOEC*CF 
     CALL AMORT(PRIN,RSCR,RC1) 
   7 IF(SSXSA.EQ.0.0)SSXSA=16300.0*FMSECI/491.6 
     RSXSA=0.2148*HPS**0.513 
     FIMH=39.0+0.55*HPS 
     IF(HPS.GT.60.0)FIMH=61.3+0.18*HPS 
     CH=0.1*FIMH 
     PMINC=23.0 
     CSXSA=SSXSA*RSXSA 
     FIAEC=(CSXSA*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR)*NB*NT*NS 
     CC=(COSTE+COSTCS+COSTCW+FIOEC+FIAEC)*CF 
     PRIN=CF*(COSTE+COSTCS+COSTCW) 
     CALL AMORT(PRIN,RSST,RC2) 
     PRIN=CF*FIAEC 
     CALL AMORT(PRIN,RSSA,RC3) 
     OMMC=(OMMPA*FIAEC+OMMPO*FIOEC)/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL PUREQU(ECFAT,V,VD,NB,NT,NS,T,Z,VEW,VCS, 
    >VCWT,THP,FKWH,OMH,DHP,FMMH,OMMPA,ECFAS,OXYGEN,GHP) 
     RETURN 
     END 
     SUBROUTINE PUREQU(ECFAT,V,VD,NB,NT,NS,T,Z,VEW,VCS,VCWT,THP,FKWH, 
    >OMH,DHP,FMMH,OMMP,ECFAS,OXYGEN,GHP) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR PURE OXYGEN ACTIVATED SLUDGE SYSTEM') 
     WRITE(6,2)ECFAT 
   2 FORMAT('0EXCESSIVE CAPACITY FACTOR - AERATION',T45,E9.3) 
     WRITE(6,3)ECFAS 
   3 FORMAT(' EXCESSIVE CAPACITY FACTOR  - OXYGENATION',T45,E9.3) 
     WRITE(6,4)VD 
4    FORMAT(' VOLUME AERATION TANK',T45,E9.3,' CU FT') 
     WRITE(6,41)OXYGEN 
  41 FORMAT(' DESIGN CAPACITY OXYGENATION SYSTEM',T45,E9.3,' TONS/DAY') 
     WRITE(6,5)NB 
5    FORMAT(' NUMBER BATTERIES',T45,I9) 
     WRITE(6,6)NT 
6    FORMAT(' NUMBER REACTOR TRAINS',T45,I9) 
     WRITE(6,7)NS 
7    FORMAT(' NUMBER STAGES PER TRAIN',T45,I9) 
     WRITE(6,8)T 
8    FORMAT(' LENGTH ONE AERATION STAGE',T45,E9.3,' FEET') 
     WRITE(6,9)Z 
9    FORMAT(' TOTAL DEPTH AERATION TANK',T45,E9.3,' FEET') 
     WRITE(6,10)VEW 
10   FORMAT(' TOTAL EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,11)VCS 
11   FORMAT(' REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,12)VCWT 
12   FORMAT(' REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,16)DHP 
16   FORMAT(' DISSOLUTION HORSEPOWER',T45,E9.3,' HP') 
     WRITE(6,161)GHP 
 161 FORMAT(' PURE OXYGEN HORSEPOWER',T45,E9.3,' HP') 
     WRITE(6,13)THP 
13   FORMAT(' TOTAL HORSEPOWER',T45,E9.3,' HP') 
     WRITE(6,14)FKWH 
14   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,15)OMH 
15   FORMAT(' OPERATION MANPOWER',T45,E9.3,' MAN-HOUR/YR') 
     WRITE(6,17)FMMH 
17   FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOUR/YR') 
     WRITE(6,18)OMMP 
  18 FORMAT(' O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     RETURN 
     END 
     SUBROUTINE RAPIEX(RR) 
     DIMENSION RR(1),USE(20) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),RSFN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),ISTOR),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),XXX), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),YYYY),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),COSTSP),(QQ(58),COSTSV),(QQ(59),UPIPP),(QQ(60),COSTSC), 
    >(QQ(61),UPIMW),(QQ(62),NW),(QQ(63),WDIA),(QQ(64),DW), 
    >(QQ(65),RSSP),(QQ(66),COSTPS),(QQ(67),RSBV),(QQ(68),RSPP), 
    >(QQ(69),RSCP),(QQ(70),RSWW),(QQ(71),RSRW),(QQ(72),RSPS) 
     EQUIVALENCE (USE(1),QMIN) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,72) 
     FAP=52.0 
     CN=TKN+ANO2+ANO3 
     FLN=CN*FLW*13.20 
     WP=FLW+PR-ET 
     FLT=0.5*PR*13.20+FLN 
     U=0.0 
     D=DF*FLT/100.0 
     AV=AVF*FLT/100.0 
     SUMNTR=U+D+AV 
     IF(SUMNTR.GT.0.80*FLT)SUMNTR=0.80*FLT 
     CPN=(FLT-SUMNTR)/WP/13.20 
     TA=QAVE*36.84*WWGP/FLW/FAP 
     STORC=(WWGP-7.0*FAP)*QAVE*10.0**6/7.48/43560.0 
     IF(WWGP-7.0*FAP.LT.7.0)STORC=0.0 
     FLP=PO4*FLW*13.20 
     UP=94.544-0.0041*FLP 
     CPPO4=(FLP-UP)/WP/13.20 
     IF(CPPO4.LT.0.10*PO4)CPPO4=0.10*PO4 
     QAVE=WP/12.0/7.0*TA*43560.00*7.48/10.0**6 
     WPOUT=QAVE 
     QMIN=QAVE 
     QMAX=QAVE 
     SOLIDS=SOLIDS-0.99*SOLIDS 
     COD=(COD-BOD5)*0.50+0.01*BOD5 
     CODS=(CODS-BOD5S)*0.50+0.01*BOD5S 
     BOD5=BOD5-0.99*BOD5 
     BOD5S=BOD5S-0.99*BOD5S 
     ANO2=0.0 
     ANO3=CPN*0.4 
     FNH3=CPN*35.0 
     TKN=CPN*60.0 
     OAG=0.0 
     PSS=SOLIDS 
     SETSO=0.0 
     PVSS=VOLAT 
     PBOD5=BOD5 
     PSBOD5=BOD5S 
     PCOD=COD 
     PSCOD=CODS 
     PNO2=ANO2 
     PNO3=ANO3 
     PTKN=TKN 
     POAG=OAG 
     PPO4=CPPO4 
     PO4=CPPO4 
     PNH3=FNH3 
   3 CALL RAPIPR(TA,QAVE,WWGP,FLW,FAP,COSTSP,COSTSV,UPIPP, 
    > COSTPS,COSTSC,UPIMW,0,IRECOV,NW,WDIA,DW,NOWEL, 
    > DEPTH,BUFF,COSFEN,RSSP,RSBV,RSPP,RSCP,RSWW,RSRW,RSST,RSFN) 
     CALL USEREX(55) 
     CALL PUMPPR(1.0,QAVE,QMAX,1,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(55) 
   4 IF(IRECOV.NE.0)GO TO 2 
     DO 1 I=1,20 
   1 USE(I)=0.0 
   2 CALL INIT(RR,QQ,72) 
     RETURN 
     END 
     SUBROUTINE RAPIIN(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(27),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),RSFN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),ISTOR),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),XXX ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),SRF),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),COSTSP),(QQ(58),COSTSV),(QQ(59),UPIPP),(QQ(60),COSTSC), 
    >(QQ(61),UPIMW),(QQ(62),NW),(QQ(63),WDIA),(QQ(64),DW), 
    >(QQ(65),RSSP),(QQ(66),COSTPS),(QQ(67),RSBV),(QQ(68),RSPP), 
    >(QQ(69),RSCP),(QQ(70),RSWW),(QQ(71),RSRW),(QQ(72),RSPS) 
     DATA LIST/'REPL','XXXX','APPL','PREC','EVAP','XXXX','WAST', 
    >'XXXX','ESTI','XXXX','XXXX','XXXX','XXXX','XXXX','UNDE','NO R', 
    >'BUFF','XXXX','XXXX','MONI','FENC','FRAC','AMMO','END','XXXX', 
    > 'XXXX','RECO'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,72) 
  50 READ(5,51)KTYP,IXX,KLM 
     WRITE(6,951)KTYP,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,27 
     IF(KTYP.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYP 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, 
    >21,22,23,24,25,26,27),I 
   1 RSSP=VALUE(1) 
     RSBV=VALUE(2) 
     RSPP=VALUE(3) 
     RSCP=VALUE(4) 
     RSWW=VALUE(5) 
     RSRW=VALUE(6) 
     RSPS=VALUE(7) 
     RSST=VALUE(8) 
     GO TO 50 
   2 GO TO 50 
   3 FLW=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   4 PR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   5 ET=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   6 GO TO 50 
   7 WWGP=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   8 GO TO 50 
   9 COSTSP=VALUE(1) 
     COSTSV=VALUE(2) 
     UPIPP=VALUE(3) 
     COSTSC=VALUE(4) 
     UPIMW=VALUE(5) 
     COSTPS=VALUE(6) 
     GO TO 50 
  10 GO TO 50 
  11 GO TO 50 
  12 GO TO 50 
  13 GO TO 50 
  14 GO TO 50 
  15 IRECOV=1 
     ID(MODT,18)=IA 
     GO TO 50 
  16 IRECOV=0 
     ID(MODT,18)=IA 
     GO TO 50 
  17 BUFF=VALUE(1) 
     ID(MODT,19)=IA 
     GO TO 50 
  18 GO TO 50 
  19 GO TO 50 
  20 NOWEL=VALUE(1) 
     DEPTH=VALUE(2) 
     ID(MODT,24)=IA 
     ID(MODT,25)=IA 
     GO TO 50 
  21 COSFEN=VALUE(1) 
     RSFN=VALUE(2) 
     IF(RSFN.LE.0.0)RSFN=15.0 
     ID(MODT,26)=IA 
     GO TO 50 
  22 DF=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
  23 AVF=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
  24 CALL INIT(RR,QQ,72) 
     RETURN 
  25 GO TO 50 
  26 GO TO 50 
  27 IRECOV=2 
     ID(MODT,18)=IA 
     NW=VALUE(1) 
     WDIA=VALUE(2) 
     DW=VALUE(3) 
     GO TO 50 
     END 
     SUBROUTINE RAPIOT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),RSFN),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),ISTOR),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),D), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),XXX ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),SRF),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),COSTSP),(QQ(58),COSTSV),(QQ(59),UPIPP),(QQ(60),COSTSC), 
    >(QQ(61),UPIMW),(QQ(62),NW),(QQ(63),WDIA),(QQ(64),DW), 
    >(QQ(65),RSSP),(QQ(66),COSTPS),(QQ(67),RSBV),(QQ(68),RSPP), 
    >(QQ(69),RSCP),(QQ(70),RSWW),(QQ(71),RSRW),(QQ(72),RSPS) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,72) 
     CALL TITLE 
     WRITE(6,140)STARDA 
 140 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0RAPID INFILTRATION LAND TREATMENT') 
1020 FORMAT('0',' ',' NO COVER CROP') 
 103 FORMAT(' ',A1,' APPLICATION RATE',T45,E9.3,' IN/WEEK') 
 104 FORMAT(' ',A1,' PRECIPITATION RATE',T45,E9.3,' IN/WEEK') 
 105 FORMAT(' ',A1,' EVAPOTRANSPORATION RATE',T45,E9.3,' IN/WEEK') 
 107 FORMAT(' ',A1,' WASTEWATER GENERATION PERIOD',T45,E9.3,' DAYS/YR') 
 109 FORMAT('   SURFACE FLOODING') 
 110 FORMAT(' ',A1,' RECOVERY WELLS ') 
 116 FORMAT(' ',A1,' UNDERDRAIN RECOVERY SYSTEM') 
 117 FORMAT(' ',A1,' NO RECOVERY SYSTEM') 
 118 FORMAT(' ',A1,' BUFFER ZONE WIDTH',T45,E9.3,' FEET') 
 121 FORMAT(' ',A1,' NUMBER OF MONITORING WELLS',T45,I9,' WELLS') 
 122 FORMAT(' ',A1,' DEPTH OF MONITORING WELLS',T45,E9.3,' FEET') 
 123 FORMAT('   VOLUME OF PERCOLATE',T45,E9.3,' MGD') 
 124 FORMAT('   QUALITY OF PERCOLATE') 
 125 FORMAT('      SUSPENDED SOLIDS',T45,E9.3,' MG/L') 
 126 FORMAT('      VOLATILE SOLIDS',T45,E9.3,' PERCENT ') 
 127 FORMAT('      BOD5',T45,E9.3,' MG/L') 
 128 FORMAT('      BOD5 SOLUBLE',T45,E9.3,' MG/L') 
 129 FORMAT('      COD',T45,E9.3,' MG/L') 
 130 FORMAT('      COD SOLUBLE',T45,E9.3,' MG/L') 
 131 FORMAT('      PO4',T45,E9.3,' MG/L') 
 132 FORMAT('      TKN',T45,E9.3,' MG/L') 
 133 FORMAT('      NO2',T45,E9.3,' MG/L') 
 134 FORMAT('      NO3',T45,E9.3,' MG/L') 
 135 FORMAT('      OIL AND GREASE',T45,E9.3,' MG/L') 
 137 FORMAT(' ',A1,' PERCENT DENITRIFIED',T45,E9.3,' PERCENT') 
 138 FORMAT(' ',A1,' PERCENT AMMONIA VOLATILIZATION',T45,E9.3,' PERCENT 
    >') 
 139 FORMAT('   SOIL UPTAKE OF PHOSPHORUS',T45,E9.3,' LB/ACRE/YEAR') 
 136 FORMAT(' ',A1,' COST OF FENCING',T45,E9.3,' $/FT') 
 141 FORMAT('   TREATMENT AREA REQUIRED',T45,E9.3,' ACRES') 
     WRITE(6,1020) 
     WRITE(6,103)ID(MODT,5),FLW 
     WRITE(6,105)ID(MODT,7),ET 
     WRITE(6,104)ID(MODT,6),PR 
     WRITE(6,137)ID(MODT,2),DF 
     WRITE(6,138)ID(MODT,3),AVF 
     XUP=UP*0.891 
     WRITE(6,139)XUP 
     WRITE(6,107)ID(MODT,9),WWGP 
     WRITE(6,109) 
     IF(IRECOV.EQ.1)WRITE(6,116)ID(MODT,18) 
     IF(IRECOV.EQ.0)WRITE(6,117)ID(MODT,18) 
     IF(IRECOV.EQ.2)WRITE(6,110)ID(MODT,18) 
     WRITE(6,118)ID(MODT,19),BUFF 
     WRITE(6,121)ID(MODT,24),NOWEL 
     WRITE(6,122)ID(MODT,25),DEPTH 
     WRITE(6,136)ID(MODT,26),COSFEN 
     WRITE(6,141)TA 
     WRITE(6,123)WPOUT 
     WRITE(6,124) 
     WRITE(6,125)PSS 
     WRITE(6,126)PVSS 
     WRITE(6,127)PBOD5 
     WRITE(6,128)PSBOD5 
     WRITE(6,129)PCOD 
     WRITE(6,130)PSCOD 
     WRITE(6,131)PPO4 
     WRITE(6,132)PTKN 
     WRITE(6,133)PNO2 
     WRITE(6,134)PNO3 
     WRITE(6,106)PNH3 
 106 FORMAT('      NH3',T45,E9.3,' MG/L') 
     WRITE(6,135)POAG 
     WRITE(6,140)STARDA 
     CALL INIT(RR,QQ,72) 
     CALL RAPIPR(TA,QAVE,WWGP,FLW,FAP,COSTSP,COSTSV, 
    > UPIPP,COSTPS,COSTSC,UPIMW,1,IRECOV,NW,WDIA,DW,NOWEL, 
    > DEPTH,BUFF,COSTEN,RSSP,RSBV,RSPP,RSCP,RSWW,RSRW,RSST,RSFN) 
     CALL PUMPPR(1.0,QAVE,QMAX,1,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE RAPIPR(TA,GF,WWGP,AR,FAP,XOSTSP,XOSTSV,XUPIPP,XOSTPS, 
    >XOSTSC,XUPIMW,IQU,IRECOV,NW,WDIA,DW,NOWEL,DEPTH,BUFF, 
    > COSFEN,RSSP,RSBV,RSPP,RSCP,RSMW,RSRW,RSST,RSFN) 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION DIAM(16) 
     DATA DIAM/2.0,3.0,4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0, 
    >20.0,24.0,30.0,36.0,42.0,48.0/ 
     IF(IQU.NE.0)GO TO 678 
     XGF=GF 
     FNUM=44.0 
     IF(TA.GT.40.0)GO TO 1 
     NIB=4 
     IF(TA.LT.4.0)NIB=2 
     FIBA=TA/NIB 
     IF(FIBA.LT.0.10)FIBA=0.10 
     GO TO 2 
   1 NIB=TA/10.0+0.99 
     FIBA=TA/NIB 
   2 FL=208.71*FIBA**0.5 
     TA=FIBA*NIB 
     VEW=NIB*(352*FL+11968.0) 
     DGF=GF 
     IF(GF.GT.40.0)DGF=GF/2.0 
     PIPE=8.42*GF**0.5 
     DO 3 I=1,16 
     IF(DIAM(I).GT.PIPE)GO TO 4 
   3 CONTINUE 
     I=16 
   4 V=283.6*DGF/DIAM(I)**2 
     IF(I.EQ.1.AND.V.LT.1)GO TO 5 
     IF(I.EQ.16.AND.V.GT.5.0)GO TO 5 
     IF(V.GT.1.0.AND.V.LT.5.0)GO TO 5 
     IF(V.GE.5.0)GO TO 7 
     I=I-1 
     GO TO 4 
   7 I=I+1 
     GO TO 4 
   5 PIPE=DIAM(I) 
     FLPIPE=NIB*FL 
     IF(GF.GT.40.0)FLPIPE=2*NIB*FL 
     FLOW=0.012*AR*FIBA 
     DFLOW=FLOW 
     IF(FLOW.GT.62.0)DFLOW=FLOW/2.0 
     DIA=6.77*DFLOW**0.5 
     DO 13 I=1,16 
     IF(DIAM(I).GT.DIA)GO TO 14 
  13 CONTINUE 
     I=16 
  14 V=183.3*DFLOW/DIAM(I)**2 
     IF(I.EQ.1.AND.V.LT.1)GO TO 15 
     IF(I.EQ.16.AND.V.GT.5.0)GO TO 15 
     IF(V.GT.1.0.AND.V.LT.5.0)GO TO 15 
     IF(V.GE.5.0)GO TO 17 
     I=I-1 
     GO TO 14 
  17 I=I+1 
     GO TO 14 
  15 DIA=DIAM(I) 
     NBV=NIB 
     IF(FLOW.GT.62.0)NBV=2*NIB 
     FLLAT=100.0*NIB 
     IF(FLOW.GT.62.0)FLLAT=200.0*NIB 
     IF(IRECOV.EQ.0)GO TO 20 
     GO TO (21,22),IRECOV 
  21 DPIPE=0.0105*FL*FIBA*AR*NIB 
     CDIA=9.65*DFLOW**0.375 
     DO 211 I=1,16 
     IF(DIAM(I).GE.CDIA)GO TO 212 
 211 CONTINUE 
     I=16 
 212 CDIA=DIAM(I) 
     FLDCH=FL*NIB 
     GO TO 20 
  22 CONTINUE 
  20 OMMHD=128.5*TA**0.6285 
     IF(TA.GT.15.0)OMMHD=78.8*TA**0.8092 
     OMMPD=2.64*TA**(-0.2101) 
     IF(TA.GT.19.0)OMMPD=1.59*TA**(-0.0399) 
     OMMHW=0.0 
     IF(IRECOV.NE.1)GO TO 23 
     OMMHW=54.71*TA**(-0.2414) 
     IF(TA.GT.80.0)OMMHW=10.12*TA**0.6255 
     OMMPU=14.13*TA**(-0.1392) 
     IF(TA.GT.200.0)OMMPU=30.95*TA**(-0.286) 
     GO TO 30 
  23 IF(IRECOV.NE.2)GO TO 30 
     OMMHW=384.64*GF**0.5981 
     OMMPW=1.53*GF**0.657 
     IF(GF.GT.5.0)OMMPW=2.76*GF**0.2894 
     IF(GF.GT.10.0)OMMPW=4.55*GF**0.0715 
  30 OMMHM=0.0 
     IF(NOWEL.LE.0.OR.DEPTH.LE.0.0)GO TO 31 
     OMMHM=6.39*NOWEL*DEPTH**0.2760 
     OMMPM=2.28*DEPTH**0.0497 
  31 FKWH=0.0 
     IF(IRECOV.NE.2)GO TO 32 
     FKWH=12.6*GF*(DW+40.0)*7.0*8.0 
  32 CF=1.18 
     COSTE=VEW*UPIEX/27.0 
     COSTRP=5.48*PIPE**1.1655 
     COSTSP=XOSTSP 
     IF(COSTSP.EQ.0.0)COSTSP=12.80*FMSECI/491.6 
     COSTP=COSTSP*COSTRP/100.0 
     EBF=0.334*PIPE**(-0.6840) 
     IF(PIPE.GT.12.0)EBF=0.061 
     TICHP=(1.0+EBF)*COSTP*FLPIPE 
     COSTRL=5.48*DIA**1.1655 
     COSTLP=COSTSP*COSTRL/100.0 
     EBFL=0.334*DIA**(-0.6840) 
     IF(DIA.GT.12.0)EBFL=0.061 
     TICLP=(1.0+EBFL)*COSTLP*FLLAT 
     COSTRV=3.99*DIA**1.395 
     COSTSV=XOSTSV 
     IF(COSTSV.EQ.0.0)COSTSV=952.10*FMSECI/491.6 
     COSTBV=COSTSV*COSTRV*NBV/100.0 
     TCDS=COSTE+TICHP+TICLP+COSTBV 
     TCUS=0.0 
     IF(IRECOV.NE.1)GO TO 40 
     UPIPP=XUPIPP 
     IF(UPIPP.EQ.0.0)UPIPP=6.94*FMSECI/491.6 
     COSTUL=DPIPE*UPIPP*1.1 
     EBFD=0.392*CDIA**(-0.2871) 
     COSTSC=XOSTSC 
     IF(COSTSC.EQ.0.0)COSTSC=10.20*FMSECI/491.6 
     COSTRC=0.489*CDIA**1.686 
     FICUCH=COSTRC*COSTSC*FLDCH*(1.0+EBFD)/100.0 
     TCUS=COSTUL+FICUCH 
  40 COSTRW=0.0 
     IF(IRECOV.NE.2)GO TO 50 
     RWC=160.4*DW**(-0.7033) 
     IF(WDIA.GT.10.0)RWC=159.8*DW**(-0.6209) 
     IF(WDIA.GT.20.0)RWC=142.7*DW**(-0.5286) 
     IF(WDIA.GT.34.0)RWC=206.5*DW**(-0.4450) 
     COSTRW=RWC*DW*NW*COSTSP 
     COSTPS=XOSTPS 
     IF(XOSTPS.EQ.0.0)COSTPS=17250.0*FMSECI/491.60 
     WPR=0.00077*WDIA**1.7971*DW**0.658 
     COSTWP=COSTPS*WPR*NW 
     COSTRW=COSTWP+COSTRW 
  50 COSTMW=0.0 
     IF(NOWEL.LE.0.OR.DEPTH.LE.0.0)GO TO 60 
     UPIMW=XUPIMW 
     IF(UPIMW.EQ.0.0)UPIMW=8.0*FMSECI/491.6 
     COSTMW=UPIMW*NOWEL*DEPTH 
  60 OMMC=(TCDS*OMMPD+TCUS*OMMPW+COSTRW*OMMPW+COSTMW*OMMPM)/100.0 
     XTA=TA/0.80 
     FENCE=4.0*SQRT(XTA*43560.0) 
     COSTFN=FENCE*COSFEN 
     XL=XTA+4.0*BUFF*(SQRT(XTA*43560.0)+BUFF)/43560.0 
     IXL=XL+0.99 
     XL=IXL 
     TBCC=(TCDS+TCUS+COSTRW+COSTMW+COSTFN)*CF 
     PRIN=COSTE*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*(TICHP+TICLP) 
     CALL AMORT(PRIN,RSSP,RC2) 
     PRIN=CF*COSTBV 
     CALL AMORT(PRIN,RSBV,RC3) 
     PRIN=CF*COSTUL 
     CALL AMORT(PRIN,RSPP,RC4) 
     PRIN=CF*FICUCH 
     CALL AMORT(PRIN,RSCP,RC5) 
     PRIN=CF*COSTRW 
     CALL AMORT(PRIN,RSRW,RC6) 
     PRIN=CF*COSTMW 
     CALL AMORT(PRIN,RSMW,RC7) 
     PRIN=CF*COSTFN 
     CALL AMORT(PRIN,RSFN,RC8) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMMHD+OMMHW 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4+RC5+RC6+RC7+RC8 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL RAPIQU(XGF,NIB,FIBA,FL,VEW,PIPE,FLPIPE,DIA,NBV, 
    > FLLAT,DPIPE,CDIA,FLDCH,NW,WDIA,DW,FKWH,NOWEL,DEPTH,OMMHD,OMMPD, 
    > OMMHW,OMMPW,OMMPU,OMMHM,OMMPM,XL,IRECOV,FENCE) 
     RETURN 
     END 
     SUBROUTINE RAPIQU(GF,NIB,FIBA,FL,VEW,PIPE,FLPIPE,DIA,NBV,FLLAT, 
    > DPIPE,CDIA,FLDCH,NW,WDIA,DW,FKWH,NOWEL,DEPTH,OMMHD,OMMPD, 
    > OMMHW,OMMPW,OMMPU,OMMHM,OMMPM,XL,IRECOV,FENCE) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR RAPID INFILTRATION LAND TREATMENT') 
     WRITE(6,2)GF 
   2 FORMAT('0GENERATED FLOW',T45,E9.3,' MGD') 
     WRITE(6,3)NIB 
   3 FORMAT(' NUMBER OF INFILTRATION BASINS',T45,I9) 
     WRITE(6,4)FIBA 
   4 FORMAT(' AREA OF INDIVIDUAL INFILTRATION BASIN',T45,E9.3,' ACRES') 
     IF(FIBA.LE.0.10)WRITE(6,29) 
  29 FORMAT(70X,' *** TREATMENT AREA ADJUSTED FOR CONSTRUCTION', 
    > ' PURPOSES ***') 
     WRITE(6,5)FL 
   5 FORMAT(' LENGTH OF INDIVIDUAL INFILTRATION BASIN',T45,E9.3, 
    > ' FEET') 
     WRITE(6,6)VEW 
   6 FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,7)PIPE 
   7 FORMAT(' HEADER PIPE DIAMETER',T45,E9.3,' INCHES') 
     WRITE(6,8)FLPIPE 
   8 FORMAT(' LENGTH OF HEADER PIPE REQUIRED',T45,E9.3,' FEET') 
     WRITE(6,9)DIA 
   9 FORMAT(' HEADER PIPE DIAMETER',T45,E9.3,' INCHES') 
     WRITE(6,10)NBV 
  10 FORMAT(' NUMBER OF VALVES REQUIRED',T45,I9) 
     WRITE(6,11)FLLAT 
  11 FORMAT(' LENGTH OF LATERAL PIPE REQUIRED',T45,E9.3,' FEET') 
     IF(IRECOV.EQ.0)GO TO 30 
     IF(IRECOV.NE.1)GO TO 31 
     WRITE(6,12) 
  12 FORMAT(' UNDERDRAIN RECOVERY SYSTEM') 
     WRITE(6,13)DPIPE,CDIA,FLDCH 
  13 FORMAT(5X,'LENGTH OF 6-INCH DRAINAGE PIPE',T45,E9.3,' FT'/5X, 
    > 'COLLECTION HEADER PIPE DIAMETER',T45,E9.3,' INCHES'/5X, 
    > 'LENGTH OF COLLECTION HEADER PIPE',T45,E9.3,' FEET') 
     GO TO 30 
  31 WRITE(6,15) 
  15 FORMAT(' RECOVERY WELLS SYSTEM') 
     WRITE(6,16)NW,WDIA,DW,FKWH 
  16 FORMAT(5X,'NUMBER OF RECOVERY WELLS',T45,I9/5X, 
    > 'DIAMETER OF RECOVERY WELLS',T45,E9.3,' INCHES'/5X, 
    > 'DEPTH OF RECOVERY WELLS',T45,E9.3,' FEET'/5X, 
    > 'ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
  30 IF(NOWEL.EQ.0.OR.DEPTH.LE.0.0)GO TO 14 
     WRITE(6,17) 
  17 FORMAT(' MONITORING WELLS SPECIFIED') 
     WRITE(6,18)NOWEL,DEPTH 
  18 FORMAT(5X,'NUMBER OF MONITORING WELLS',T45,I9/5X, 
    > 'DEPTH OF MONITORING WELLS',T45,E9.3,' FEET') 
  14 WRITE(6,19)OMMHD 
  19 FORMAT(' ANNUAL O & M FOR DISTRIBUTION SYSTEM',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,20)OMMPD 
  20 FORMAT(' MATERIAL COST FOR DISTRIBUTION SYSTEM',T45,E9.3, 
    > ' PERCENT') 
     IF(IRECOV.EQ.0)GO TO 40 
     IF(IRECOV.NE.2)GO TO 41 
     WRITE(6,21)OMMHW 
  21 FORMAT(' ANNUAL O & M FOR RECOVERY WELLS',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,22)OMMPW 
  22 FORMAT(' MATERIAL COSTS FOR RECOVERY WELLS',T45,E9.3, 
    > ' PERCENT') 
     GO TO 40 
  41 WRITE(6,23)OMMHW 
  23 FORMAT(' ANNUAL O & M FOR UNDERDRAIN SYSTEM',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,24)OMMPU 
  24 FORMAT(' MATERIAL COSTS FOR UNDERDRAIN SYSTEM',T45,E9.3, 
    > ' PERCENT') 
  40 IF(NOWEL.LE.0.OR.DEPTH.LE.0.0)GO TO 50 
     WRITE(6,25)OMMHM 
  25 FORMAT(' ANNUAL O & M FOR MONITORING WELLS',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,26)OMMPM 
  26 FORMAT(' MATERIAL COSTS FOR MONITORING WELLS',T45,E9.3, 
    > ' PERCENT') 
  50 WRITE(6,28)FENCE 
  28 FORMAT(' FENCING REQUIRED',T45,E9.3,' FEET') 
     WRITE(6,27)XL 
  27 FORMAT(' LAND REQUIRED (INCLUDING BUFFER AREA)',T45,E9.3,' ACRES') 
     RETURN 
     END 
     SUBROUTINE RAWSEX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),DS),(QQ(2),SH),(QQ(3),N), 
    >(QQ( 4),ITYP  ),(QQ( 5),QPK   ),(QQ( 6),Q     ),(QQ( 7),NVS   ), 
    > (QQ( 8),NCS   ),(QQ( 9),DIAP  ),(QQ(10),TDH   ),(QQ(11),DPUMP ), 
    > (QQ(12),FNS   ),(QQ(13),RPM   ),(QQ(14),RPMS  ),(QQ(15),BHP   ), 
    > (QQ(16),BHPS  ),(QQ(17),WP    ),(QQ(18),FLP   ),(QQ(19),FL    ), 
    > (QQ(20),WD    ),(QQ(21),VOLW  ),(QQ(22),WW    ),(QQ(23),DP    ), 
    > (QQ(24),VCS   ),(QQ(25),VCW   ),(QQ(26),VEW   ),(QQ(27),PBA   ), 
    > (QQ(28),FPC   ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),ATDH  ), 
    > (QQ(32),FKWH  ),(QQ(33),OMMP  ),(QQ(34),DM), 
    > (QQ(35),W),(QQ(36),XOSTPS),(QQ(37),XOSTMS),(QQ(38),XOSTVS) 
    >,(QQ(39),RSPS),(QQ(40),RSMS),(QQ(41),RSVS),(QQ(42),RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION RR(1),PUMPS(17),AMOTOR(26) 
     DATA PUMPS/4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0,20.0, 
    > 24.0,30.0,36.0,42.0,48.0,54.0,60.0,72.0/ 
     DATA AMOTOR/1.0,2.0,3.0,5.0,7.5,10.0,15.0,20.0,25.0,30.0, 
    > 40.0,50.0,60.0,75.0,100.0,125.0,150.0,200.0,250.0,300.0, 
    > 350.0,400.0,450.0,500.0,600.0,700.0/ 
     CALL INIT(QQ,RR,42) 
     QPEAK=3.84*QAVE**0.9098 
     IF(QPEAK.GT.QPK)QPK=QPEAK 
     IF(N.GT.0)GO TO 1 
     N=2 
     IF(QPK.GT.2.0)N=3 
     IF(QPK.GT.10.0)N=4 
     IF(QPK.GT.150.0)N=5 
   1 Q=QPK*10.0**6/1440.0/(N-1) 
     NCS=N 
     NVS=0 
     IF(ITYP.EQ.0)GO TO 2 
     NVS=2 
     NCS=N-2 
   2 DIAP=5.955*QPK**0.50 
     IF(SH.GT.0.0)GO TO 3 
     TDH=70.0 
     IF(QPK.GE.1.0)TDH=70.0-15.0*ALOG10(QPK) 
     IF(QPK.GT.100.0)TDH=40.0 
     GO TO 4 
   3 TDH=SH+6.0+376460.0*QPK**1.85/DIAP**4.8655 
   4 DPUMP=0.1927*Q**0.50 
     DO 5 I=1,17 
     IF(PUMPS(I).GE.DPUMP)GO TO 6 
   5 CONTINUE 
     I=17 
   6 DPUMP=PUMPS(I) 
     RPM=4000.00*TDH**0.75/Q**0.50 
     RPMS=600.0 
     IF(RPM.GT.750.0)RPMS=900.0 
     IF(RPM.GT.1050.0)RPMS=1200.0 
     IF(RPM.GT.1500.0)RPMS=1800.0 
     FNS=RPMS*Q**0.50/TDH**0.75 
     PUMPE=0.63+2.42*10.0**(-5)*Q 
     BHP=Q*TDH/3959.7/PUMPE 
     DO 7 I=1,26 
     IF(AMOTOR(I).GE.BHP)GO TO 8 
   7 CONTINUE 
     I=26 
   8 BHPS=AMOTOR(I) 
     WP=0.20*DPUMP+0.60 
     FLP=0.333*(0.084*DPUMP+6.38)**2 
     FL=N*WP+(N+1)*4 
     WD=FLP+9.0 
     IF(ITYP.EQ.1)GO TO 9 
     CT=10.0 
     IF(BHPS.GT.15.0)CT=15.0 
     IF(BHPS.GT.50.0)CT=30.0 
     IF(BHPS.GT.200.0)CT=60.0 
     IF(BHPS.GT.600.0)CT=120.0 
     VOLW=(Q-QAVE*10.0**6/1440.0)*CT/7.48 
     WW=1.7453*Q**.4881/12.0 
     WWW=VOLW/FLP/6.0 
     IF(WW.LT.8.0)WW=8.0 
     IF(WWW.GT.WW)WW=WWW 
     VOLW=6.0*FLP*WW 
     GO TO 10 
   9 WW=10.0+Q/4200.0 
     VOLW=6.0*WW*FL 
  10 DM=0.0544*SQRT(Q)+2.033 
     DP=DS+DM+6.0 
     W=WW+WD 
     VTS=0.833*FL*W 
     VCW=(1.0+DP/96.0)*DP*(2.0*W+3.0*FL+4.0*(1.0+DP/96.0)) 
     X=2.0*(1.0+DP/96.0) 
     TBS=(0.416*DP*(FL+X)*(W+X)-VTS-VCW)/(FL+8.0)/(W+8.0) 
     VBS=(FL+8.0)*(W+8.0)*TBS 
     VCS=VTS+VBS 
     VEXC=VBS+DP*((FL+8.0)*(W+8.0)+DP/2.0*(W+FL+DP+16.0)) 
     VBF=VEXC-(FL+X)*(W+X)*DP 
     VEW=1.1*(VEXC+VBF) 
     PBA=1.05*WD*FL 
     FPC=Q*0.00144*(N-1) 
     OMH=440.0*FPC**0.1285 
     IF(FPC.GT.7.0)OMH=294.4*FPC**0.3350 
     IF(FPC.GT.30.0)OMH=40.5*FPC**0.8661 
     IF(FPC.GT.80.0)OMH=21.3*FPC**1.012 
     FMMH=360.0*FPC**0.1478 
     IF(FPC.GT.7.0)FMMH=255.2*FPC**0.3247 
     IF(FPC.GT.30.0)FMMH=85.7*FPC**0.6456 
     IF(FPC.GT.80.0)FMMH=30.6*FPC**0.8806 
     ATDH=0.75*TDH 
     IF(SH.GT.0.0)ATDH=SH+3.0+376460.0*QAVE**1.85/DIAP**4.8655 
     FKWH=1352.65*QAVE*ATDH/PUMPE 
     OMMP=0.7 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTPB=PBA*UPIBC 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTRO=0.041*DPUMP**1.152 
     IF(DPUMP.GT.16.0)COSTRO=0.01*DPUMP**1.663 
     COSTPS=XOSTPS 
     IF(COSTPS.EQ.0.0)COSTPS=13630.0*FMSECI/491.6 
     COSTP=COSTRO*COSTPS 
     COSTMS=XOSTMS 
     IF(COSTMS.EQ.0.0)COSTMS=2350.0*FMSECI/491.6 
     COSTM=COSTMS*5.4*(BHPS+5.0)**0.85/RPMS**0.75 
     COSTPM=COSTP+COSTM 
     FIPC=2.379*N*COSTPM 
     COSTV=0.0 
     IF(ITYP.EQ.0)GO TO 11 
      COSTVS=XOSTVS 
      IF(COSTVS.EQ.0.0)COSTVS=11500.0*FMSECI/491.6 
     COSTV=COSTVS*EXP(0.00432*BHPS) 
  11 COSTVI=1.45*COSTV*NVS 
     TBCC=CF*(COSTE+COSTPB+COSTCW+COSTCS+FIPC+COSTVI) 
     PRIN=CF*(COSTE+COSTPB+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTVI 
     CALL AMORT(PRIN,RSVS,RC2) 
     PRIN=CF*COSTP/COSTPM*FIPC 
     CALL AMORT(PRIN,RSPS,RC3) 
     PRIN=CF*COSTM/COSTPM*FIPC 
     CALL AMORT(PRIN,RSMS,RC4) 
     OMMC=TBCC*OMMP/100.0 
     CALL INIT(RR,QQ,42) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=66.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(73) 
     RETURN 
     END 
     SUBROUTINE RAWSIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(9) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),DS),(QQ(2),SH),(QQ(3),N), 
    >(QQ( 4),ITYP  ),(QQ( 5),QPK   ),(QQ( 6),Q     ),(QQ( 7),NVS   ), 
    > (QQ( 8),NCS   ),(QQ( 9),DIAP  ),(QQ(10),TDH   ),(QQ(11),DPUMP ), 
    > (QQ(12),FNS   ),(QQ(13),RPM   ),(QQ(14),RPMS  ),(QQ(15),BHP   ), 
    > (QQ(16),BHPS  ),(QQ(17),WP    ),(QQ(18),FLP   ),(QQ(19),FL    ), 
    > (QQ(20),WD    ),(QQ(21),VOLW  ),(QQ(22),WW    ),(QQ(23),DP    ), 
    > (QQ(24),VCS   ),(QQ(25),VCW   ),(QQ(26),VEW   ),(QQ(27),PBA   ), 
    > (QQ(28),FPC   ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),ATDH  ), 
    > (QQ(32),FKWH  ),(QQ(33),OMMP  ),(QQ(34),DM), 
    > (QQ(35),W),(QQ(36),XOSTPS),(QQ(37),XOSTMS),(QQ(38),XOSTVS) 
    >,(QQ(39),RSPS),(QQ(40),RSMS),(QQ(41),RSVS),(QQ(42),RSST) 
     DATA LIST/'DEPT','STAT','NUMB','VARI','CONS','ESTI','END ','PEAK' 
    >,'REPL'/ 
     DATA IA/'I'/ 
     DATA IBLK/' '/ 
     ID(MODT,3)=IBLK 
     CALL INIT(QQ,RR,42) 
  50 READ(5,51)KTYP,IXX,KLM 
     WRITE(6,951)KTYP,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,9 
     IF(KTYP.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYP 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  53 GO TO(1,2,3,4,5,6,7,8,9),I 
   1 DS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 SH=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 N=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 ITYP=1 
     ID(MODT,4)=IA 
     GO TO 50 
   5 ITYP=0 
     ID(MODT,4)=IA 
     GO TO 50 
   6 XOSTPS=VALUE(1) 
     XOSTMS=VALUE(2) 
     XOSTVS=VALUE(3) 
     GO TO 50 
   7 CALL INIT(RR,QQ,42) 
     RETURN 
   8 QPK=VALUE(1) 
     GO TO 50 
   9 RSPS=VALUE(1) 
     RSMS=VALUE(2) 
     RSVS=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
     END 
     SUBROUTINE RAWSOT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),DS),(QQ(2),SH),(QQ(3),N), 
    >(QQ( 4),ITYP  ),(QQ( 5),QPK   ),(QQ( 6),Q     ),(QQ( 7),NVS   ), 
    > (QQ( 8),NCS   ),(QQ( 9),DIAP  ),(QQ(10),TDH   ),(QQ(11),DPUMP ), 
    > (QQ(12),FNS   ),(QQ(13),RPM   ),(QQ(14),RPMS  ),(QQ(15),BHP   ), 
    > (QQ(16),BHPS  ),(QQ(17),WP    ),(QQ(18),FLP   ),(QQ(19),FL    ), 
    > (QQ(20),WD    ),(QQ(21),VOLW  ),(QQ(22),WW    ),(QQ(23),DP    ), 
    > (QQ(24),VCS   ),(QQ(25),VCW   ),(QQ(26),VEW   ),(QQ(27),PBA   ), 
    > (QQ(28),FPC   ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),ATDH  ), 
    > (QQ(32),FKWH  ),(QQ(33),OMMP  ),(QQ(34),DM), 
    > (QQ(35),W),(QQ(36),XOSTPS),(QQ(37),XOSTMS),(QQ(38),XOSTVS) 
    >,(QQ(39),RSPS),(QQ(40),RSMS),(QQ(41),RSVS),(QQ(42),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,42) 
     CALL TITLE 
     WRITE(6,140)STARDA 
 140 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0RAW SEWAGE PUMPING') 
 101 FORMAT('0',A1,' DEPTH TO INFLUENT SEWER',T45,E9.3,' FEET') 
 102 FORMAT(' ',A1,' STATIC HEAD PUMPED',T45,E9.3,' FEET') 
 103 FORMAT(' ',A1,' NUMBER OF PUMPS',T45,I9) 
 104 FORMAT(' ',A1,' VARIABLE SPEED PUMPS SPECIFIED') 
 105 FORMAT(' ',A1,' CONSTANT SPEED PUMPS SPECIFIED') 
 106 FORMAT('   PEAK CAPACITY OF PUMPS',T45,E9.3,' MGD') 
 107 FORMAT('0  CAPACITY PER PUMP',T45,E9.3,' GPM') 
 108 FORMAT('   NUMBER OF CONSTANT SPEED PUMPS',T45,I9) 
 109 FORMAT('   NUMBER OF VARIABLE SPEED PUMPS',T45,I9) 
 110 FORMAT('   DIAMETER OF DISCHARGE HEADER PIPE',T45,E9.3,' INCHES') 
 111 FORMAT('   TOTAL DYNAMIC HEAD',T45,E9.3,' FEET') 
 112 FORMAT('   SIZE OF SELECTED PUMP',T45,E9.3,' INCHES') 
 113 FORMAT('   SPECIFIC SPEED OF PUMP',T45,E9.3) 
 114 FORMAT('   PUMP ROTATING SPEED',T45,E9.3,' REV/MIN') 
 115 FORMAT('   BRAKE HORSEPOWER',T45,E9.3,' HP') 
 116 FORMAT('   SIZE OF SELECTED MOTOR',T45,E9.3,' HP') 
 117 FORMAT('   WIDTH OF PUMP SYSTEM',T45,E9.3,' FEET') 
 118 FORMAT('   LENGTH OF PUMP SYSTEM',T45,E9.3,' FEET') 
 119 FORMAT('   LENGTH OF THE DRY WELL',T45,E9.3,' FEET') 
 220 FORMAT('   WIDTH OF THE DRY WELL',T45,E9.3,' FEET') 
 121 FORMAT(70X,' ***VARIABLE SPEED PUMPS SHOULD BE USED FOR FLOWS IN'/ 
    > 75X,' EXCESS OF 20.0 MGD***'/70X,' ***CONSTANT SPEED PUMPS MAY', 
    > ' PRODUCE EXCESSIVE WET'/75X,' WELL VOLUMES IN THIS FLOW', 
    > ' RANGE') 
 122 FORMAT('   VOLUME OF WET WELL',T45,E9.3,' CU FT') 
 123 FORMAT('   WIDTH OF WET WELL',T45,E9.3,' FEET') 
 124 FORMAT('   DEPTH OF THE PUMPING STATION',T45,E9.3,' FEET') 
 224 FORMAT('   LENGTH OF THE PUMPING STATION',T45,E9.3,' FEET') 
 225 FORMAT('   WIDTH OF THE PUMPING STATION',T45,E9.3,' FEET') 
 125 FORMAT('   MINIMUM DEPTH OF WATER IN WET WELL',T45,E9.3,' FEET') 
 126 FORMAT('   VOLUME OF REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
 127 FORMAT('   VOLUME OF REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
 128 FORMAT('   VOLUME OF EARTHWORK ',T45,E9.3,' CU FT') 
 129 FORMAT('   AREA OF PUMP BUILDING',T45,E9.3,' SQ FT') 
 130 FORMAT('   FIRM PUMPING CAPACITY',T45,E9.3,' MGD') 
 131 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
 132 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
 133 FORMAT('   TOTAL DYNAMIC HEAD - AVERAGE CONDITIONS',T45,E9.3, 
    > ' FEET') 
 134 FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 135 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     WRITE(6,101)ID(MODT,1),DS 
     IF(SH.GT.0.0)WRITE(6,102)ID(MODT,2),SH 
     WRITE(6,103)ID(MODT,3),N 
     IF(ITYP.EQ.0)WRITE(6,105)ID(MODT,4) 
     IF(ITYP.EQ.1)WRITE(6,104)ID(MODT,4) 
     WRITE(6,106)QPK 
     WRITE(6,140)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,221) 
 221 FORMAT('0QUANTITIES FOR RAW SEWAGE PUMPING') 
     WRITE(6,107)Q 
     WRITE(6,108)NCS 
     WRITE(6,109)NVS 
     WRITE(6,110)DIAP 
     WRITE(6,111)TDH 
     WRITE(6,112)DPUMP 
     WRITE(6,113)FNS 
     WRITE(6,114)RPM 
     WRITE(6,115)BHP 
     WRITE(6,116)BHPS 
     WRITE(6,117)WP 
     WRITE(6,118)FLP 
     WRITE(6,119)FL 
     WRITE(6,220)WD 
     IF(ITYP.EQ.0.AND.QAVE.GE.20.0)WRITE(6,121) 
     WRITE(6,122)VOLW 
     WRITE(6,123)WW 
     WRITE(6,124)DP 
     WRITE(6,224)FL 
     WRITE(6,225)W 
     WRITE(6,125)DM 
     WRITE(6,126)VCW 
     WRITE(6,127)VCS 
     WRITE(6,128)VEW 
     WRITE(6,129)PBA 
     WRITE(6,130)FPC 
     WRITE(6,131)OMH 
     WRITE(6,132)FMMH 
     WRITE(6,133)ATDH 
     WRITE(6,134)FKWH 
     WRITE(6,135)OMMP 
     RETURN 
     END 
     SUBROUTINE RBCEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3),LQADS(80,3),LSADS(20,3) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    >CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    >BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),EBOD),(QQ(2),EBODS),(QQ(3),ESS), 
    >(QQ( 4),FMLSS ),(QQ( 5),RSST ),(QQ( 6),H     ),(QQ( 7),Y     ), 
    >(QQ( 8),HC    ),(QQ( 9),HD    ),(QQ(10),A     ),(QQ(11),AFS   ), 
    >(QQ(12),NST   ),(QQ(13),SLDS  ),(QQ(14),NSH   ),(QQ(15),NFS   ), 
    >(QQ(16),NSS   ),(QQ(17),NMP   ),(QQ(18),NB    ),(QQ(19),NES   ), 
    >(QQ(20),NIS   ),(QQ(21),VEW   ),(QQ(22),VSC   ),(QQ(23),VWC   ), 
    >(QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ), 
    >(QQ(28),XOSTES),(QQ(29),XOSTPS),(QQ(30),RSES),(QQ(31),RSPS) 
     CALL INIT(QQ,RR,31) 
     NUM=NUM+2 
     CALL PUMPPR(1.00,QAVE,QAVE,2,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(47) 
     H=(EBOD-0.06*BOD5S+50.0)/(0.3*BOD5S+1.58) 
     IF(EBOD.GT.29.0)H=(EBOD+9.94)/(0.17*BOD5S-0.37) 
     C=0.0225*(1.8*TEMP+32.0)-0.25 
     HC=C*H 
     SF=1.0+0.143*(QMAX/QAVE-2.5) 
     IF(SF.LT.1.0)SF=1.0 
     HD=HC/SF 
     A=QAVE*10.0**6/HD 
     P=2.09*10.0**(-3)*HC*BOD5S 
     AFS=P*A 
     NST=4 
     IF(EBOD.GT.30.0)NST=3 
     IF(EBOD.GT.50.0)NST=2 
     IF(EBOD.GT.120.0)NST=1 
     Y=2.28-2.08*(BOD5-EBOD)/BOD5 
     SLDS=Y*(BOD5-EBOD)*8.34*QAVE 
     KADD=LQADD(52,MODT) 
     NUM=NUM-2 
     CALL RECOEX(FMLSS,QMAX,SLDS,WS,EBOD,ESS,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SOLIDS=ESS 
     VOLAT=80.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     OAG=0.0 
     SETSO=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     ANO3=ANO3+0.3*TKN 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     ANO2=0.0 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     NSH=A/100000.0 
     NFS=P*NSH+0.95 
     IF(NFS.LT.1)NFS=1 
     NSS=0 
     IF(NST.EQ.1)GO TO 1 
     NSS=0.95+1.0*(NSH-NFS)/(NST-1) 
   1 NMP=NFS+(NST-1)*NSS 
     NB=NMP/8.0+0.95 
     NES=2*NB 
     NIS=NMP-NES 
     VEW=130.0*NES+142.0*NIS 
     VSC=23.0*NES+20.7*NIS 
     VWC=11.5*NES+8.6*NIS 
     FKWH=2.0*NMP*8760.0 
     FLOM=(1.25-0.025*NMP)*52.0*NMP 
     IF(NMP.GE.30)FLOM=26.0*NMP 
     OMH=0.3*FLOM 
     FMMH=0.7*FLOM 
     OMMP=2.0 
     CF=1.18 
     RS=15.0 
     COSTE=VEW*UPIEX 
     COSTCW=VWC*UPICW 
     COSTCS=VSC*UPICS 
     COSTES=XOSTES 
     IF(COSTES.EQ.0.0)COSTES=30500.0*FMSECI/491.60 
     FIEC=1.15*COSTES*NMP 
     TBCC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSES,RC2) 
     OMMC=OMMP*FIEC/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMP 
     SUMMDA(NUM,9)=37.00 
     CALL USEREX(47) 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     NUM=NUM+2 
     CALL INIT(RR,QQ,31) 
     RETURN 
     END 
     SUBROUTINE RBCIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(5) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DATA IA/'I'/ 
     EQUIVALENCE (QQ(1),EBOD),(QQ(2),EBODS),(QQ(3),ESS), 
    >(QQ( 4),FMLSS ),(QQ( 5),RSST ),(QQ( 6),H     ),(QQ( 7),Y     ), 
    >(QQ( 8),HC    ),(QQ( 9),HD    ),(QQ(10),A     ),(QQ(11),AFS   ), 
    >(QQ(12),NST   ),(QQ(13),SLDS  ),(QQ(14),NSH   ),(QQ(15),NFS   ), 
    >(QQ(16),NSS   ),(QQ(17),NMP   ),(QQ(18),NB    ),(QQ(19),NES   ), 
    >(QQ(20),NIS   ),(QQ(21),VEW   ),(QQ(22),VSC   ),(QQ(23),VWC   ), 
    >(QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ), 
    >(QQ(28),XOSTES),(QQ(29),XOSTPS),(QQ(30),RSES),(QQ(31),RSPS) 
     DATA LIST/'DESI','ESTI','CONT','END ','REPL'/ 
     CALL INIT(QQ,RR,31) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5),I 
   1 EBOD=VALUE(1) 
     EBODS=VALUE(2) 
     ESS=VALUE(3) 
     GO TO 50 
   2 XOSTES=VALUE(1) 
     XOSTPS=VALUE(2) 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   4 CALL INIT(RR,QQ,31) 
     RETURN 
   5 RSES=VALUE(1) 
     RSPS=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
     END 
     SUBROUTINE RBCOT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),EBOD),(QQ(2),EBODS),(QQ(3),ESS), 
    >(QQ( 4),FMLSS ),(QQ( 5),RSST ),(QQ( 6),H     ),(QQ( 7),Y     ), 
    >(QQ( 8),HC    ),(QQ( 9),HD    ),(QQ(10),A     ),(QQ(11),AFS   ), 
    >(QQ(12),NST   ),(QQ(13),SLDS  ),(QQ(14),NSH   ),(QQ(15),NFS   ), 
    >(QQ(16),NSS   ),(QQ(17),NMP   ),(QQ(18),NB    ),(QQ(19),NES   ), 
    >(QQ(20),NIS   ),(QQ(21),VEW   ),(QQ(22),VSC   ),(QQ(23),VWC   ), 
    >(QQ(24),FKWH  ),(QQ(25),OMH   ),(QQ(26),FMMH  ),(QQ(27),OMMP  ), 
    >(QQ(28),XOSTES),(QQ(29),XOSTPS),(QQ(30),RSES),(QQ(31),RSPS) 
     COMMON /STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,31) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0ROTATING BIOLOGICAL CONTACTOR') 
 101 FORMAT('0',A1,' CONTACTOR UNDERFLOW SUSPENDED SOLIDS',T45,E9.3, 
    >' MG/L') 
 103 FORMAT('   DESIGN HYDRAULIC LOADING',T45,E9.3,' GAL/DAY/SQFT') 
 104 FORMAT('   MEDIA SURFACE AREA',T45,E9.3,' SQ FT') 
 105 FORMAT('   MEDIA SURFACE AREA IN FIRST STAGE',T45,E9.3,' SQ FT') 
 106 FORMAT('   NUMBER OF STAGES',T45,I9) 
 107 FORMAT('   SLUDGE YIELD FACTOR',T45,E9.3,' LBS/LB BOD') 
 108 FORMAT('0  NUMBER OF SHAFTS',T45,I9) 
 109 FORMAT('   NUMBER OF SHAFTS IN FIRST STAGE',T45,I9) 
 110 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 111 FORMAT('   VOLUME OF REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
 112 FORMAT('   VOLUME OF REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
 114 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
 115 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
 116 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,101)ID(MODT,1),FMLSS 
     WRITE(6,103)HD 
     WRITE(6,104)A 
     WRITE(6,105)AFS 
     WRITE(6,106)NST 
     WRITE(6,107)Y 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,201) 
 201 FORMAT('0QUANTITIES FOR ROTATING BIOLOGICAL CONTACTOR') 
     WRITE(6,108)NSH 
     WRITE(6,109)NFS 
     VEW=VEW*27.0 
     VWC=VWC*27.0 
     VSC=VSC*27.0 
     WRITE(6,110)VEW 
     WRITE(6,111)VSC 
     WRITE(6,112)VWC 
     WRITE(6,114)OMH 
     WRITE(6,115)FMMH 
     WRITE(6,116)OMMP 
     CALL PUMPPR(1.0,QAVE,QAVE,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE RECAEX(RR) 
     COMMON ICTL,KTCK,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT, 
    <BOD5,BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG, 
    <ANO2,ANO3 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     VOL=QAVE*TD/60.0/1440.0 
     CO2R=(7.4*OHM+3.7*CO3)*QAVE/0.116/1440.0 
     PH=7.0 
     CALL PRICE(0.0,0.0,0.0,48,RSST) 
     CALL INIT(RR,QQ,6) 
     RETURN 
     END 
     SUBROUTINE RECAIN(RR) 
     DIMENSION LIST(4) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     DATA LIST/'DETE','ALKA','END','REPL'/ 
     CALL INIT(QQ,RR,6) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4),I 
   1 TD=VALUE(1) 
     GO TO 50 
   2 OHM=VALUE(1) 
     CO3=VALUE(2) 
     GO TO 50 
   3 CALL INIT(RR,QQ,6) 
     RETURN 
   4 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE RECAOT(RR) 
     COMMON/STARCO/STARDA(19) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL TITLE 
     CALL INIT(QQ,RR,6) 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 100 FORMAT('0RECARBONATION') 
     WRITE(6,100) 
     WRITE(6,101)TD 
     WRITE(6,102)OHM 
     WRITE(6,103)CO3 
     WRITE(6,104)CO2R 
     WRITE(6,105)VOL 
     WRITE(6,120)STARDA 
     RETURN 
 101 FORMAT('0DETENTION TIME                     ',E9.3,' MIN') 
 102 FORMAT(' HYDROXIDE ALKALINITY               ',E9.3,' MG/L') 
 103 FORMAT(' CARBONATE ALKALINITY               ',E9.3,' MG/L') 
 104 FORMAT(' CO2 REQUIREMENT                    ',E9.3,' CFM/MGD') 
 105 FORMAT(' VOLUME OF TANK                     ',E9.3,' MG') 
     END 
     SUBROUTINE RECOEX(FMLSS,QQMAX,XSP,XWS,XEBOD,XESS,VVOLAT,EBODS, 
    <QC,QQAVE,RR) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     CALL INIT(QQ,RR,24) 
     SP=XSP 
     ESS=XESS 
     SA=QQAVE*1000000.0/SFR 
     ASLR=QQAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,54.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(53) 
     GO TO 2 
   3 CALL RECTPR(0,54.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(53) 
   2 WL=QQMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     XWS=WS 
     EBOD=XEBOD 
     QC=UC 
     SETSO=0.0 
     CALL INIT(RR,QQ,24) 
     RETURN 
     END 
     SUBROUTINE RECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','XXXX','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,24) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,8,11,12,13),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 GO TO 50 
  10 CALL INIT(RR,QQ,24) 
     RETURN 
   8 COSTES=VALUE(1) 
     GO TO 50 
  13 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  11 RECT=1.0 
     GO TO 50 
  12 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE RECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,24) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR ROTATING BIOLOGICAL CONTACTOR') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,235)SA 
 235 FORMAT('   SURFACE AREA                     ',E9.3,' SQFT') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,54.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,54.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE RECTPR(KPRIM,FNUM,QAVG,SWD,SA,XOSTES,RSMS,RSST,IQU) 
    NOTE  KPRIM = 1 IS A PRIMARY CLARIFIER 
   NOTE  KPRIM = 0 IS A SECONDARY CLARIFIER 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(IQU.EQ.1)GO TO 678 
     COSTES=XOSTES 
     ECF=1.0 
     ASA=SA*ECF 
     N=ASA/260.0/20.0+0.99 
     IF(N.LT.2)N=2 
     L=ASA/20.0/N+0.99 
     FL=L 
     VEW=N*(69.30*FL+4.0/3.0*SQRT(660.0*FL**2+8580.0*FL+19800.0)+988.0) 
     VEWL=(44.7*SWD+134.0)*N 
     VSW=(10.0*SWD+SWD*FL+1.50*FL+30.0)*(N+1) 
     VIEC=220.0*N 
     VTS=(90.0+2.0*FL)*N 
     VCW=VEWL+VSW+VIEC+VTS 
     VCS=N*(22.0*FL+150.0) 
     FMMH=200.0 
     IF(ASA.GT.1000.0)FMMH=30.3*ASA**0.2733 
     IF(ASA.GT.3000.0)FMMH=2.05*ASA**0.6098 
     OMH=350.0 
     IF(ASA.GT.1000.0)OMH=37.1*ASA**0.3247 
     IF(ASA.GT.3000.0)OMH=4.0*ASA**0.6020 
     FKWH=7500.0 
     IF(ASA.GT.1670.0)FKWH=2183.3*ASA**0.1663 
     IF(ASA.GT.16700.0)FKWH=38.4*ASA**0.5818 
     OMMP=1.0 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     IF(COSTES.EQ.0.0)COSTES=42000.0*FMSECI/491.6 
     COSTRO=0.31*FL+63.0 
     COSTCM=COSTES*COSTRO/100.0 
     FIMH=0.978*FL+80.0 
     CH=0.05*FIMH 
     PMINC=15.0 
     FIEC=(COSTCM*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR)*N 
     CC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSMS,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL RECTQU(KPRIM,SA,ECF,ASA,N,FL,VEW,SWD, 
    >VCW,VCS,FMMH,OMH,FKWH) 
     RETURN 
     END 
     SUBROUTINE RECTQU(KPRIM,SA,ECF,ASA,N,FL,VEW,SWD,VCW,VCS,FMMH,OMH, 
    >FKWH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR SEDIMENTATION') 
     WRITE(6,2) 
2    FORMAT('0RECTANGULAR CLARIFIER') 
     IF(KPRIM.EQ.0)WRITE(6,3) 
   3 FORMAT('0SECONDARY CLARIFIER') 
     IF(KPRIM.EQ.1)WRITE(6,31) 
  31 FORMAT('0PRIMARY CLARIFIER') 
     WRITE(6,4)SA 
4    FORMAT(' CALCULATED SURFACE AREA',T45,E9.3,' SQ FT') 
     WRITE(6,5)ECF 
5    FORMAT(' EXCESS CAPACITY FACTOR',T45,E9.3) 
     WRITE(6,6)ASA 
6    FORMAT(' ADJUSTED SURFACE AREA',T45,E9.3,' SQ FT') 
     WRITE(6,7)N 
7    FORMAT(' NUMBER OF RECTANGULAR CLARIFIERS',T45,I9) 
     WRITE(6,8)FL 
8    FORMAT(' LENGTH OF RECTANGULAR CLARIFIER',T45,E9.3,' FEET') 
     WRITE(6,9)VEW 
9    FORMAT(' VOLUME OF EARTHWORK ',T45,E9.3,' CU FT') 
     WRITE(6,10)SWD 
10   FORMAT(' SIDE WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,11)VCW 
11   FORMAT(' TOTAL VOLUME OF R.C. WALL IN-PLACE',T45,E9.3,' CU FT') 
     WRITE(6,12)VCS 
12   FORMAT(' QUANTITY OF R.C. SLAB IN-PLACE',T45,E9.3,' CU FT') 
     WRITE(6,13)FMMH 
13   FORMAT(' MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,14)OMH 
14   FORMAT(' OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,15)FKWH 
15   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE SCAN(NO,VALUE,M7,KLM) 
     DIMENSION VALUE(10),KLM(76),NUM(10) 
     DATA IPOINT,IPLUS,MINUS/'.','+','-'/ 
     DATA NUM/'0','1','2','3','4','5','6','7','8','9'/ 
     K7=M7+1 
     DO 1 I=1,10 
   1 VALUE(I)=0.0 
     NCOL=1 
     N=1 
     KPT=0 
   2 IF(KLM(NCOL).NE.MINUS)GO TO 4 
   3 SGN=-1.0 
     GO TO 5 
   4 IF(KLM(NCOL).NE.IPLUS)GO TO 6 
   7 SGN=1.0 
   5 VALUE(N)=0.0 
     GO TO 8 
   6 IF(KLM(NCOL).NE.IPOINT)GO TO 9 
  10 KPT=1 
     GO TO 7 
   9 K=0 
     ICOMP=NUM(1) 
  11 IF(KLM(NCOL).EQ.ICOMP)GO TO 13 
  12 K=K+1 
     ICOMP=NUM(K+1) 
     IF(K-10)11,14,14 
  14 NCOL=NCOL+1 
  24 IF(NCOL-K7)2,16,16 
  16 NO=N-1 
     RETURN 
  13 SGN=1.0 
     VALUE(N)=K 
   8 NCOL=NCOL+1 
     IF(NCOL-K7)17,18,18 
  17 IF(KLM(NCOL).NE.IPOINT)GO TO 20 
  19 KPT=1 
     GO TO 8 
  20 K=0 
     ICOMP=NUM(1) 
  21 IF(KLM(NCOL).EQ.ICOMP)GO TO 23 
  22 K=K+1 
     ICOMP=NUM(K+1) 
     IF(K-10)21,18,18 
  18 VALUE(N)=VALUE(N)*SGN 
     N=N+1 
     KPT=0 
     GO TO 24 
  23 IF(KPT)25,26,25 
  26 VALUE(N)=VALUE(N)*10.0+K 
     GO TO 8 
  25 VALUE(N)=VALUE(N)+K*10.0**(-KPT) 
     KPT=KPT+1 
     GO TO 8 
     END 
     SUBROUTINE SCRNEX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),TYPE  ),(QQ(3),APRCH ), 
    &(QQ( 4),BSPACE),(QQ( 5),BWIDE ),(QQ( 6),SLOPE ),(QQ( 7),FACTOR), 
    &(QQ( 8),VELMAX),(QQ( 9),VELAVE),(QQ(10),DMAX  ),(QQ(11),DAVE  ), 
    &(QQ(12),WIDTH ),(QQ(13),HLOSS ) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,13) 
     ANGLE=(90-SLOPE)*3.1415926/180.0 
     HLOSS=FACTOR*(BWIDE/(BSPACE-BWIDE))**1.333*APRCH**2 
    <*SIN(ANGLE)**2/64.4 
     WIDTH=QAVE/(DAVE*VELAVE)*1.54 
     DMAX=QMAX/(WIDTH*VELMAX)*1.54 
     CALL INIT(RR,QQ,13) 
     RETURN 
     END 
     SUBROUTINE SCRNIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(5),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),TYPE  ),(QQ(3),APRCH ), 
    &(QQ( 4),BSPACE),(QQ( 5),BWIDE ),(QQ( 6),SLOPE ),(QQ( 7),FACTOR), 
    &(QQ( 8),VELMAX),(QQ( 9),VELAVE),(QQ(10),DMAX  ),(QQ(11),DAVE  ), 
    &(QQ(12),WIDTH ),(QQ(13),HLOSS ) 
     DATA LIST/'MANU','MECH','BARS','VELO','END '/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,13) 
     ENABLE=1.0 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  51 FORMAT(A4,A2,74A1) 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5),I 
   1 TYPE=0.0 
  55 DAVE=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 TYPE=1.0 
     GO TO 55 
   3 BWIDE=VALUE(1) 
     BSPACE=VALUE(2) 
     SLOPE=VALUE(3) 
     FACTOR=VALUE(4) 
     DO 20 I=2,4 
  20 ID(MODT,I)=IA 
     GO TO 50 
   4 APRCH=VALUE(1) 
     VELMAX=VALUE(2) 
     VELAVE=VALUE(3) 
     DO 21 I=5,7 
  21 ID(MODT,I)=IA 
     GO TO 50 
   5 CALL INIT(RR,QQ,13) 
     RETURN 
     END 
     SUBROUTINE SCRNOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ENABLE),(QQ(2),TYPE  ),(QQ(3),APRCH ), 
    &(QQ( 4),BSPACE),(QQ( 5),BWIDE ),(QQ( 6),SLOPE ),(QQ( 7),FACTOR), 
    &(QQ( 8),VELMAX),(QQ( 9),VELAVE),(QQ(10),DMAX  ),(QQ(11),DAVE  ), 
    &(QQ(12),WIDTH ),(QQ(13),HLOSS ) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,13) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 101 FORMAT('0MANUALLY CLEANED BAR SCREEN') 
 102 FORMAT('0MECHANICALLY CLEANED BAR SCREEN') 
 103 FORMAT('0',A1,' BAR SIZE                                ',E9.3, 
    >' INCHES'/ 
    <' ',A1,' BAR SPACING                             ',E9.3,' INCHES'/ 
    <' ',A1,' SLOPE OF BARS FROM HORIZONTAL           ',E9.3,' DEG'/ 
    <'   HEAD LOSS THROUGH SCREEN                ',E9.3,' FEET') 
 104 FORMAT(' ',A1,' APPROACH VELOCITY                       ',E9.3, 
    >' FT/SEC'/ 
    <' ',A1,' AVERAGE FLOW THROUGH VELOCITY           ',E9.3,' FT/SEC'/ 
    <' ',A1,' MAXIMUM FLOW THROUGH VELOCITY           ',E9.3,' FT/SEC'/ 
    <'  ',' SCREEN CHANNEL WIDTH                    ',E9.3,' FEET') 
 105 FORMAT(' ',A1,' AVERAGE CHANNEL DEPTH                   ',E9.3, 
    > ' FEET') 
     IF(TYPE.LT.0.5)WRITE(6,101) 
     IF(TYPE.GT.0.5)WRITE(6,102) 
     WRITE(6,103)ID(MODT,2),BWIDE,ID(MODT,2),BSPACE,ID(MODT,4),SLOPE, 
    > HLOSS 
     WRITE(6,104)ID(MODT,5),APRCH,ID(MODT,6),VELAVE,ID(MODT,7), 
    > VELMAX,WIDTH 
     WRITE(6,105)ID(MODT,1),DAVE 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE SECOEX(FMLSS,QQMAX,XSP,XWS,XEBOD,XESS,FP,VVOLAT,EBODS, 
    <QC,QQAVE,RR) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    .BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     CALL INIT(QQ,RR,24) 
     SP=XSP 
     XESS=ESS 
     SA=QQAVE*1000000.0/SFR 
     ASLR=QQAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,31.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(38) 
     GO TO 2 
   3 CALL RECTPR(0,31.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(38) 
   2 WL=QQMAX*1000000.0/WOFR 
     WS=SP/(SG*UC*8.34)*100.0 
     EBOD=EBODS+0.84*FP*ESS*VVOLAT/100.0 
     XEBOD=EBOD 
     XWS=WS 
     QC=UC 
     SETSO=0.0 
     CALL INIT(RR,QQ,24) 
     RETURN 
     END 
     SUBROUTINE SECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(12),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','END ', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,24) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,8,11,12,13),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 CALL INIT(RR,QQ,24) 
     RETURN 
   8 COSTES=VALUE(1) 
     GO TO 50 
  13 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  11 RECT=1.0 
     GO TO 50 
  12 RECT=0.0 
     GO TO 50 
     END 
     SUBROUTINE SECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/XXCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ) 
    >,(QQ(22),COSTES),(QQ(23),RECT),(QQ(24),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,24) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR ACTIVATED SLUDGE') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,235)SA 
 235 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,31.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,31.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE SLFLEX(SVOLU,PSOLID,PVOLAT,RR) 
     COMMON ICTL,KCTL,IPRT,X,Y,Z,TEMP 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),POLY  ),(QQ(17),CR    ),(QQ(18),R     ),(QQ(19),DTPY), 
    & (QQ(20),COSTES),(QQ(21),SOLVQ),(QQ(22),RSFS) 
     CALL INIT(QQ,RR,22) 
     COIN=PSOLID*10000.0 
     SVOLX=SVOLU 
     QAVE=SVOLU 
     SA=29.2-0.795*TEMP+0.0175*TEMP**2-0.0002*TEMP**3 
 100 P=(PSIG+14.7)/14.7 
     R=AOS*QAVE*COIN/1.3/SA/(0.5*P-1.0) 
     SURFAC=QAVE*COIN*8.34/SOLID/1000000.0 
     S1=(QAVE+R)/HYDRO/60.0/24.0 
     IF(S1.GT.SURFAC)SURFAC=S1 
     VOFLOT=(QAVE+R)*DETENT/7.48/24.0 
     VOPRES=R*TIMEPR/7.48/24.0/60.0 
 200 VSW=QAVE*COIN*REMOV/100.0/(FLOAT/100.0*1.05)/1000000.0 
     TOTAL=VSW 
     TSS=FLOAT 
     SVOLU=TOTAL 
     PSOLID=TSS 
     CR=QAVE*COIN*8.34*POLY/2000.0/1000000.0 
   1 CALL SLFLPR(SURFAC,SVOLX,COIN,COSTES,CR,RSFS,RSST,0) 
     CALL USEREX(1) 
   2 CONTINUE 
     CALL INIT(RR,QQ,22) 
     RETURN 
     END 
     SUBROUTINE SLFLIN(RR,ID,MODT) 
     DIMENSION LIST(12) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),POLY  ),(QQ(17),CR    ),(QQ(18),R     ),(QQ(19),DTPY), 
    & (QQ(20),COSTES),(QQ(21),SOLVQ),(QQ(22),RSFS) 
     DATA LIST/'AIR/','AIR ','DETE','SOLI','HYDR','RECY','PERC','FLOA', 
    >'END ','POLY','ESTI','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,22) 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 53 I=1,12 
     IF(KTYPE.EQ.LIST(I))GO TO 54 
  53 CONTINUE 
     WRITE(6,52)KTYPE 
  52 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  54 GO TO (1,2,3,4,5,6,7,8,9,10,11,12),I 
   1 AOS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 PSIG=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 DETENT=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 SOLID=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 HYDRO=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 CYCLE=1.0 
     TIMEPR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   7 REMOV=VALUE(1) 
     GO TO 50 
   8 FLOAT=VALUE(1) 
     GO TO 50 
   9 IF(SOLID.EQ.0.0)SOLID=10.0 
     CALL INIT(RR,QQ,22) 
     RETURN 
  10 POLY=VALUE(1) 
     IF(SOLID.LE.0.0)SOLID=30.0 
     GO TO 50 
  11 COSTES=VALUE(1) 
     GO TO 50 
  12 RSFS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE SLFLOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),AOS   ),(QQ(3),PSIG  ), 
    &(QQ( 4),DETENT),(QQ( 5),SOLID ),(QQ( 6),HYDRO ),(QQ( 7),CYCLE ), 
    &(QQ( 8),REMOV ),(QQ( 9),FLOAT ),(QQ(10),COIN  ),(QQ(11),SURFAC), 
    &(QQ(12),VOPRES),(QQ(13),VOFLOT),(QQ(14),TIMEPR),(QQ(15),VSW   ), 
    &(QQ(16),POLY  ),(QQ(17),CR    ),(QQ(18),R     ),(QQ(19),DTPY), 
    & (QQ(20),COSTES),(QQ(21),SOLVQ),(QQ(22),RSFS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,22) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0AIR FLOTATION') 
 102 FORMAT('0  SUSPENDED SOLIDS CONCENTRATION   ',E9.3,' MG/L       ') 
 103 FORMAT(' ',A1,' AIR TO SOLIDS RATIO              ',E9.3) 
 104 FORMAT(' ',A1,' AIR PRESSURE                     ',E9.3,' PSIG') 
 105 FORMAT(' ',A1,' SOLIDS LOADING                   ',E9.3, 
    > ' LB/SQFT/DAY') 
 106 FORMAT(' ',A1,' HYDRAULIC LOADING                ',E9.3, 
    > ' GPM/SQFT') 
 107 FORMAT('   RECYCLE FLOW                     ',E9.3,' GAL/DAY') 
 108 FORMAT('   SURFACE AREA                     ',E9.3,' SQ FT') 
 109 FORMAT('   VOLUME OF PRESSURE TANK          ',E9.3,' CU FT') 
 110 FORMAT('   VOLUME OF FLOTATION TANK         ',E9.3,' CU FT') 
 111 FORMAT(' ',A1,' PRESSURE TANK DETENTION TIME     ',E9.3,' MIN') 
 112 FORMAT(' ',A1,' FLOTATION TANK DETENTION TIME    ',E9.3,' HRS') 
 113 FORMAT('   POLYMER REQUIREMENT              ',E9.3,' LB/DAY') 
     WRITE(6,102)COIN 
     WRITE(6,103)ID(MODT,1),AOS 
     WRITE(6,104)ID(MODT,2),PSIG 
     WRITE(6,105)ID(MODT,4),SOLID 
     WRITE(6,106)ID(MODT,5),HYDRO 
     IF(TIMEPR.GT.0.0)WRITE(6,107)R 
     WRITE(6,108)SURFAC 
     IF(TIMEPR.GT.0.0)WRITE(6,109)VOPRES 
     WRITE(6,110)VOFLOT 
     IF(TIMEPR.GT.0.0)WRITE(6,111)ID(MODT,6),TIMEPR 
     WRITE(6,112)ID(MODT,3),DETENT 
     WRITE(6,113)CR 
     WRITE(6,121)STARDA 
     CALL SLFLPR(SURFAC,SVOLX,COIN,COSTES,CR,RSFS,RSST,1) 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,22) 
     RETURN 
     END 
     SUBROUTINE SLFLPR(SA,QS,CO,XOST,CR,RSFS,RSST,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION USAS(13) 
     DATA USAS/40.0,50.0,70.0,100.0,140.0,200.0,280.0,350.0, 
    >450.0,570.0,750.0,960.0,1250.0/ 
     IF(IQU.EQ.1)GO TO 678 
     COSTES=XOST 
     Q=QS/1000000.0 
     NU=SA/1250.0+0.99 
     IF(NU.LT.1)NU=1 
     SAS=SA/NU 
     DO 1 I=1,13 
     IF(USAS(I).GE.SAS)GO TO 2 
   1 CONTINUE 
     I=13 
   2 SAS=USAS(I) 
     DIA=SQRT(4.0*SAS/3.1416) 
     AB=(DIA+2.0)*(DIA+5.0)*NU 
     VEW=1.15*NU*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350) 
     SWD=6.72+0.0476*DIA 
     TS=7.9+0.25*SWD 
     TW=7.0+0.5*SWD 
     VCS=0.825*(DIA+4.0)**2*TS/12.0*NU 
     VCW=3.14*(SWD+1.0)*DIA*TW/12.0*NU 
     FNU=NU 
     VCB=100.0*FNU**1.13 
     VCWT=VCW+VCB 
     VCST=VCS 
     DSTPD=Q*CO*8.34/2000 
     OMH=560.0*DSTPD**0.4973 
     IF(DSTPD.GT.2.3)OMH=496.0*DSTPD**0.5092 
     FMMH=156.0*DSTPD**0.4176 
     IF(DSTPD.GT.3.0)FMMH=124.0*DSTPD**0.6429 
     FKWH=63000.0*DSTPD**0.9422 
     OMMP=1.0 
     CF=1.18 
     COSTB=AB*UPIBC*0.75 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCWT*UPICW/27.0 
     COSTCS=VCST*UPICS/27.0 
     COSTRO=0.3*SAS+25.0 
     IF(SAS.GT.240.0)COSTRO=0.092*SAS+75.0 
     IF(SAS.GT.480.0)COSTRO=0.161*SAS+43.0 
     IF(COSTES.LE.0.0)COSTES=44200.0*FMSECI/491.6 
     COSTFE=COSTES*COSTRO/100.0 
     EIC=0.75*COSTFE 
     FIEC=(COSTFE+EIC)*NU 
     CC=(COSTB+COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTB+COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSFS,RC2) 
     OMMC=CC*OMMP/100.0 
     CRPY=CR*365.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=81.0 
     SUMMDA(NUM,13)=CR 
     SUMMDA(NUM,17)=CRPY 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.NE.0)CALL SLFLQU(SAS,DIA,NU,AB,VEW,SWD,TS,TW,VCWT,VCST, 
    > DSTPD,OMH,FMMH,FKWH) 
     RETURN 
     END 
     SUBROUTINE SLFLQU(SAS,DIA,NU,AB,VEW,SWD,TS,TW,VCWT,VCST,DSTPD,OMH, 
    > FMMH,FKWH) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR SLUDGE FLOTATION') 
     WRITE(6,2)SAS 
2    FORMAT('0SURFACE AREA PER FLOTATION UNIT',T45,E9.3,' SQ FT') 
     WRITE(6,3)DIA 
3    FORMAT(' DIAMETER PER FLOTATION UNIT',T45,E9.3,' FEET') 
     WRITE(6,4)NU 
4    FORMAT(' NUMBER UNITS',T45,I9) 
     WRITE(6,5)AB 
5    FORMAT(' AREA OF FLOTATION BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,6)VEW 
6    FORMAT(' EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,7)SWD 
7    FORMAT(' SIDE WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,8)TS 
8    FORMAT(' SLAB THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,9)TW 
9    FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,10)VCWT 
10   FORMAT(' REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,11)VCST 
11   FORMAT(' REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,12)DSTPD 
12   FORMAT(' DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,13)OMH 
13   FORMAT(' OPERATION LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,14)FMMH 
14   FORMAT(' MAINTENANCE LABOR',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,15)FKWH 
15   FORMAT(' ELECTRICAL ENERGY',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE SLOWEX(RR) 
     DIMENSION RR(1),USE(20) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),R),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),DESN),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),FLX), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),SRF),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),HPD),(QQ(58),DPW) 
    >,(QQ(59),FMAR),(QQ(60),XOSTSP),(QQ(61),XOSTSV),(QQ(62),XOSTEN), 
    > (QQ(63),XOSTPC),(QQ(64),XUPIPP),(QQ(65),XUPICG),(QQ(66),XOSTPS), 
    >(QQ(67),XUPIMW),(QQ(68),RSPS),(QQ(69),RSSP),(QQ(70),RSSV), 
    >(QQ(71),RSEN),(QQ(72),RSMW),(QQ(73),RSPC),(QQ(74),RSPP) 
    >,(QQ(75),RSLL),(QQ(76),RSBA),(QQ(77),RSFN) 
     EQUIVALENCE (USE(1),QMIN) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/CHARCO/ID(9),EPAGO,EPAGLT,EPAG 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,77) 
     CN=TKN+ANO2+ANO3 
     FLN=CN*FLW*13.20 
     WP=FLW+PR-ET-R 
     FLX=FLW 
     TA=QAVE*36.84*WWGP/FLW/FAP 
     FLT=0.5*PR*13.20+FLN 
     IF(ICOVER.EQ.0)U=118.73 + 0.360*FLT 
     IF(ICOVER.EQ.1)U=176.53-0.0476*FLT 
     D=DF*FLT/100.0 
     AV=AVF*FLT/100.0 
     SUMNTR=U+D+AV 
     IF(SUMNTR.GT.0.80*FLT)SUMNTR=0.80*FLT 
     A=118.73 
     B=0.36 
     IF(ICOVER.EQ.1)A=176.53 
     IF(ICOVER.EQ.1)B=-0.0476 
     FWP=(-A+(1.0-B-DF/100.0-AVF/100.0)*(0.5*PR+CN*(-PR+ET+R))*13.2)/ 
    > DESN/13.2/(1.0-CN*(1.0-B-DF/100.0-AVF/100.0)/DESN) 
     TAN=QAVE*36.84*WWGP/FWP/FAP 
     IF(TA.GE.TAN)GO TO 1350 
     TA=TAN 
     FLX=FWP 
     WP=FWP+PR-ET-R 
     FLN=CN*FWP*13.20 
     FLT=0.5*PR*13.20+FLN 
     IF(ICOVER.EQ.0)U=118.73 + 0.360*FLT 
     IF(ICOVER.EQ.1)U=176.53-0.0476*FLT 
     D=DF*FLT/100.0 
     AV=AVF*FLT/100.0 
     SUMNTR=U+D+AV 
     IF(SUMNTR.GT.0.80*FLT)SUMNTR=0.80*FLT 
1350 CPN=(FLT-SUMNTR)/WP/13.20 
     REVNUE=REVNUE+REVOVR*TA 
     EPAG=EPAGLT 
     STORM=STOR 
     STORC=STORM*QAVE*10.0**6/7.48/43560.0 
     FLP=PO4*FLX*13.20 
     SR=SRF*FLP/100.0 
     UP=213.09-36.86*ALOG(FLP) 
     IF(UP.LE.10.0)UP=10.0 
     UP=UP*FLP/100.0 
     CPPO4=(FLP-UP-SR)/WP/13.20 
     IF(CPPO4.LT.0.01*PO4)CPPO4=0.01*PO4 
     QAVG=QAVE 
     QAVE=WP/12.0/7.0*TA*43560.00*7.48/10.0**6 
     WPOUT=QAVE 
     QMIN=QAVE 
     QMAX=QAVE 
     SOLIDS=SOLIDS-0.97*SOLIDS 
     BOD5=BOD5-0.95*BOD5 
     BOD5S=BOD5S-0.95*BOD5S 
     COD=0.05*COD 
     CODS=0.05*CODS 
     ANO2=0.0 
     ANO3=CPN 
     FNH3=0.0 
     TKN=0.0 
     SETSO=0.0 
     OAG=0.0 
     PSS=SOLIDS 
     PVSS=VOLAT 
     PBOD5=BOD5 
     PSBOD5=BOD5S 
     PCOD=COD 
     PSCOD=CODS 
     PNO2=ANO2 
     PNO3=ANO3 
     PTKN=TKN 
     POAG=OAG 
     PPO4=CPPO4 
     PO4=CPPO4 
     PNH3=FNH3 
   4 CALL SLOWPR(TA,QAVG,WWGP,FMAR,FAP,STORC,STOR,IPAP,IRECOV, 
    >BUFF,XOSTSP,XOSTSV,XOSTEN,XOSTPC,XUPIPP,COSFEN,XUPICG, 
    >FOREST,BRUSH,PASTUR,0,DPW,HPD,XUPIMW,NOWEL,DEPTH,FLX,FLOW, 
    >RSST,RSSP,RSSV,RSEN,RSMW,RSPC,RSPP,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     CALL USEREX(56) 
     KASE=DPW*HPD*FAP 
     KASE=KASE*10+1 
     CALL PUMPPR(1.0,FLOW,FLOW,KASE,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(56) 
   3 IF(IRECOV.EQ.1)GO TO 2 
     DO 1 I=1,20 
   1 USE(I)=0.0 
   2 CALL INIT(RR,QQ,77) 
     RETURN 
     END 
     SUBROUTINE SLOWIN(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(29),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/APPA/QAVEI,CP,REVNUE,REVOVR,REVSLO 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),R),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),DESN),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),FLX), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),SRF),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),HPD),(QQ(58),DPW) 
    >,(QQ(59),FMAR),(QQ(60),XOSTSP),(QQ(61),XOSTSV),(QQ(62),XOSTEN), 
    > (QQ(63),XOSTPC),(QQ(64),XUPIPP),(QQ(65),XUPICG),(QQ(66),XOSTPS), 
    >(QQ(67),XUPIMW),(QQ(68),RSPS),(QQ(69),RSSP),(QQ(70),RSSV), 
    >(QQ(71),RSEN),(QQ(72),RSMW),(QQ(73),RSPC),(QQ(74),RSPP) 
    >,(QQ(75),RSLL),(QQ(76),RSBA),(QQ(77),RSFN) 
     DATA LIST/'FORA','CORN','APPL','PREC','EVAP','RUNO','WAST', 
    >'FIEL','SOLI','CENT','STOR','DESI','LINE','EMBA','UNDE','NO R', 
    >'BUFF','CURR','SLOP','MONI','FENC','FRAC','AMMO','END','REMO', 
    >'HOUR','DAYS','ESTI','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,77) 
  50 READ(5,51)KTYP,IXX,KLM 
     WRITE(6,951)KTYP,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,29 
     IF(KTYP.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYP 
  54 FORMAT(' ',A4,2X,' IS AN INVALID CARD - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, 
    >21,22,23,24,25,26,27,28,29),I 
   1 ICOVER=0 
     REVSLO=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   2 ICOVER=1 
     REVSLO=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   3 FLW=VALUE(1) 
     FMAR=VALUE(2) 
     ID(MODT,5)=IA 
     GO TO 50 
   4 PR=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   5 ET=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
   6 R=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   7 WWGP=VALUE(1) 
     ID(MODT,9)=IA 
     GO TO 50 
   8 FAP=VALUE(1) 
     ID(MODT,10)=IA 
     GO TO 50 
   9 IPAP=0 
     ID(MODT,11)=IA 
     GO TO 50 
  10 IPAP=1 
     ID(MODT,11)=IA 
     GO TO 50 
  11 STOR=VALUE(1) 
     ID(MODT,13)=IA 
     GO TO 50 
  12 DESN=VALUE(1) 
     ID(MODT,12)=IA 
     GO TO 50 
  13 LINER=1 
     ID(MODT,14)=IA 
     COSLIN=VALUE(1) 
     RSLL=VALUE(2) 
     IF(RSLL.LE.0.0)RSLL=15.0 
     ID(MODT,15)=IA 
     GO TO 50 
  14 IBANK=1 
     ID(MODT,16)=IA 
     COSBAN=VALUE(1) 
     RSBA=VALUE(2) 
     IF(RSBA.LE.0.0)RSBA=40.0 
     ID(MODT,17)=IA 
     GO TO 50 
  15 IRECOV=1 
     ID(MODT,18)=IA 
     GO TO 50 
  16 IRECOV=0 
     ID(MODT,18)=IA 
     GO TO 50 
  17 BUFF=VALUE(1) 
     ID(MODT,19)=IA 
     GO TO 50 
  18 FOREST=VALUE(1) 
     BRUSH=VALUE(2) 
     PASTUR=VALUE(3) 
     ID(MODT,21)=IA 
     ID(MODT,20)=IA 
     ID(MODT,22)=IA 
     GO TO 50 
  19 SLOPE=VALUE(1) 
     ID(MODT,23)=IA 
     GO TO 50 
  20 NOWEL=VALUE(1) 
     DEPTH=VALUE(2) 
     ID(MODT,24)=IA 
     ID(MODT,25)=IA 
     GO TO 50 
  21 COSFEN=VALUE(1) 
     RSFN=VALUE(2) 
     IF(RSFN.LE.0.0)RSFN=15.0 
     ID(MODT,26)=IA 
     GO TO 50 
  22 DF=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
  23 AVF=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
  24 CALL INIT(RR,QQ,77) 
     RETURN 
  25 SRF=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
  26 HPD=VALUE(1) 
     ID(MODT,27)=IA 
     GO TO 50 
  27 DPW=VALUE(1) 
     ID(MODT,28)=IA 
     GO TO 50 
  28 XOSTPS=VALUE(1) 
     XOSTSP=VALUE(2) 
     XOSTSV=VALUE(3) 
     XOSTEN=VALUE(4) 
     UPICG=VALUE(5) 
     XUPIMW=VALUE(6) 
     XOSTPC=VALUE(7) 
     XUPIPP=VALUE(8) 
     GO TO 50 
  29 RSPS=VALUE(1) 
     RSSP=VALUE(2) 
     RSSV=VALUE(3) 
     RSEN=VALUE(4) 
     RSMW=VALUE(5) 
     RSPC=VALUE(6) 
     RSPP=VALUE(7) 
     RSST=VALUE(8) 
     GO TO 50 
     END 
     SUBROUTINE SLOWOT(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),DF),(QQ(3),AVF),(QQ(4),ICOVER), 
    > (QQ(5),FLW),(QQ(6),PR),(QQ(7),ET),(QQ(8),R),(QQ(9),WWGP), 
    > (QQ(10),FAP),(QQ(11),IPAP),(QQ(12),DESN),(QQ(13),STOR), 
    > (QQ(14),LINER),(QQ(15),COSLIN),(QQ(16),IBANK),(QQ(17),COSBAN), 
    > (QQ(18),IRECOV),(QQ(19),BUFF),(QQ(20),FOREST),(QQ(21),BRUSH), 
    > (QQ(22),PASTUR),(QQ(23),SLOPE),(QQ(24),NOWEL),(QQ(25),DEPTH), 
    > (QQ(26),COSFEN),(QQ(27),GF),(QQ(28),CN),(QQ(29),FLX), 
    >(QQ(30),AV    ),(QQ(31),FLN   ),(QQ(32),WP    ),(QQ(33),FLT   ), 
    >(QQ(34),CPN   ),(QQ(35),TA    ),(QQ(36),U     ),(QQ(37),SR    ), 
    >(QQ(38),CPO4  ),(QQ(39),CPPO4 ),(QQ(40),UP    ),(QQ(41),FLP   ), 
    >(QQ(42),PSS   ),(QQ(43),PVSS  ),(QQ(44),PBOD5 ),(QQ(45),PSBOD5), 
    >(QQ(46),PCOD  ),(QQ(47),PSCOD ),(QQ(48),PNO2  ),(QQ(49),PNO3  ), 
    >(QQ(50),PTKN  ),(QQ(51),POAG  ),(QQ(52),PPO4  ),(QQ(53),PNH3  ), 
    >(QQ(54),SRF),(QQ(55),STORC),(QQ(56),WPOUT) 
    >,(QQ(57),HPD),(QQ(58),DPW) 
    >,(QQ(59),FMAR),(QQ(60),XOSTSP),(QQ(61),XOSTSV),(QQ(62),XOSTEN), 
    > (QQ(63),XOSTPC),(QQ(64),XUPIPP),(QQ(65),XUPICG),(QQ(66),XOSTPS), 
    >(QQ(67),XUPIMW),(QQ(68),RSPS),(QQ(69),RSSP),(QQ(70),RSSV), 
    >(QQ(71),RSEN),(QQ(72),RSMW),(QQ(73),RSPC),(QQ(74),RSPP) 
    >,(QQ(75),RSLL),(QQ(76),RSBA),(QQ(77),RSFN) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,77) 
     CALL TITLE 
     WRITE(6,140)STARDA 
 140 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SLOW INFILTRATION LAND TREATMENT') 
 101 FORMAT(' ',A1,' CORN CROP') 
 102 FORMAT(' ',A1,' FORAGE GRASSES') 
 103 FORMAT(' ',A1,' APPLICATION RATE',T45,E9.3,' IN/WEEK') 
 104 FORMAT(' ',A1,' PRECIPITATION RATE',T45,E9.3,' IN/WEEK') 
 105 FORMAT(' ',A1,' EVAPOTRANSPORATION RATE',T45,E9.3,' IN/WEEK') 
 106 FORMAT(' ',A1,' RUNOFF',T45,E9.3,' IN/WEEK') 
 107 FORMAT(' ',A1,' WASTEWATER GENERATION PERIOD',T45,E9.3,' DAYS/YR') 
 108 FORMAT(' ',A1,' FIELD APPLICATION PERIOD',T45,E9.3,' WEEKS/YR') 
 109 FORMAT(' ',A1,' SOLID SET PIPING AND PUMPING') 
 110 FORMAT(' ',A1,' CENTER PIVOT PIPING AND PUMPING') 
 111 FORMAT(' ',A1,' MINIMUM STORAGE SPECIFIED',T45,E9.3,' DAYS') 
 112 FORMAT(' ','  CALCULATED STORAGE REQUIRED',T45,E9.3,' ACRE-FT') 
 114 FORMAT(' ',A1,' LINER INCLUDED',T45,E9.3,' $/SQ FT') 
 115 FORMAT(' ',A1,' EMBANKMENT PROTECTION INCLUDED',T45,E9.3, 
    > ' $/SQ FT') 
 116 FORMAT(' ',A1,' UNDERDRAIN RECOVERY SYSTEM') 
 117 FORMAT(' ',A1,' NO RECOVERY SYSTEM') 
 118 FORMAT(' ',A1,' BUFFER ZONE WIDTH',T45,E9.3,' FEET') 
 119 FORMAT(' ',A1,' CURRENT GROUND COVER'/'      FOREST',T45,E9.3, 
    > ' PERCENT'/'      BRUSH',T45,E9.3,' PERCENT'/ 
    > '      PASTURE',T45,E9.3,' PERCENT') 
 120 FORMAT(' ',A1,' SLOPE OF SITE',T45,E9.3,' PERCENT') 
 121 FORMAT(' ',A1,' NUMBER OF MONITORING WELLS',T45,I9,' WELLS') 
 122 FORMAT(' ',A1,' DEPTH OF MONITORING WELLS',T45,E9.3,' FEET') 
 123 FORMAT('   VOLUME OF PERCOLATE',T45,E9.3,' MGD') 
 124 FORMAT('   QUALITY OF PERCOLATE') 
 125 FORMAT('      SUSPENDED SOLIDS',T45,E9.3,' MG/L') 
 126 FORMAT('      VOLATILE SOLIDS',T45,E9.3,' PERCENT ') 
 127 FORMAT('      BOD5',T45,E9.3,' MG/L') 
 128 FORMAT('      BOD5 SOLUBLE',T45,E9.3,' MG/L') 
 129 FORMAT('      COD',T45,E9.3,' MG/L') 
 130 FORMAT('      COD SOLUBLE',T45,E9.3,' MG/L') 
 131 FORMAT('      PO4',T45,E9.3,' MG/L') 
 132 FORMAT('      TKN',T45,E9.3,' MG/L') 
 133 FORMAT('      NO2',T45,E9.3,' MG/L') 
 134 FORMAT('      NO3',T45,E9.3,' MG/L') 
 135 FORMAT('      OIL AND GREASE',T45,E9.3,' MG/L') 
 137 FORMAT(' ',A1,' PERCENT DENITRIFIED',T45,E9.3,' PERCENT') 
 138 FORMAT(' ',A1,' PERCENT AMMONIA VOLATILIZATION',T45,E9.3,' PERCENT 
    >') 
 139 FORMAT(' ',A1,' REMOVAL OF PHOSPHORUS',T45,E9.3,' PERCENT') 
 136 FORMAT(' ',A1,' COST OF FENCING',T45,E9.3,' $/FT') 
 141 FORMAT('   TREATMENT AREA REQUIRED',T45,E9.3,' ACRES') 
 142 FORMAT('   CROP UPTAKE OF NITROGEN',T45,E9.3,' LB/ACRE/YEAR') 
 143 FORMAT('   CROP UPTAKE OF PHOSPHORUS',T45,E9.3,' LB/ACRE/YEAR') 
     WRITE(6,150)ID(MODT,27),HPD 
     WRITE(6,151)ID(MODT,28),DPW 
 150 FORMAT('0',A1,' HOURS PER DAY OPERATION',T45,E9.3,' HOURS') 
 151 FORMAT(' ',A1,' DAYS PER WEEK OPERATION',T45,E9.3,' DAYS') 
     IF(ICOVER.EQ.0)WRITE(6,102)ID(MODT,4) 
     IF(ICOVER.EQ.1)WRITE(6,101)ID(MODT,4) 
     WRITE(6,103)ID(MODT,5),FLW 
     WRITE(6,1030)ID(MODT,5),FMAR 
1030 FORMAT(' ',A1,' MAXIMUM APPLICATION RATE',T45,E9.3,' IN/HOUR') 
     WRITE(6,105)ID(MODT,7),ET 
     WRITE(6,104)ID(MODT,6),PR 
     WRITE(6,113)ID(MODT,12),DESN 
 113 FORMAT(' ',A1,' DESIRED NITRATE LOADING (MAXIMUM)',T45, 
    < E9.3,' MG/L') 
     WRITE(6,137)ID(MODT,2),DF 
     WRITE(6,138)ID(MODT,3),AVF 
     WRITE(6,139)ID(MODT,1),SRF 
     WRITE(6,107)ID(MODT,9),WWGP 
     WRITE(6,108)ID(MODT,10),FAP 
     IF(IPAP.EQ.0)WRITE(6,109)ID(MODT,11) 
     IF(IPAP.EQ.1)WRITE(6,110)ID(MODT,11) 
     IF(STOR.NE.0.0)WRITE(6,111)ID(MODT,13),STOR 
     WRITE(6,112)STORC 
     STORR=WWGP-7.0*FAP 
     IF(STOR.LT.STORR)WRITE(6,1130)STORR 
1130 FORMAT(70X,'*** INSUFFICIENT MINIMUM STORAGE ***'/, 
    >70X,'*** INCREASE TO',F7.1,' DAYS/YEAR ***') 
     IF(LINER.EQ.1)WRITE(6,114)ID(MODT,14),COSLIN 
     IF(IBANK.EQ.1)WRITE(6,115)ID(MODT,17),COSBAN 
     IF(IRECOV.EQ.1)WRITE(6,116)ID(MODT,18) 
     IF(IRECOV.EQ.0)WRITE(6,117)ID(MODT,18) 
     WRITE(6,118)ID(MODT,19),BUFF 
     WRITE(6,119)ID(MODT,20),FOREST,BRUSH,PASTUR 
     WRITE(6,120)ID(MODT,23),SLOPE 
     WRITE(6,121)ID(MODT,24),NOWEL 
     WRITE(6,122)ID(MODT,25),DEPTH 
     WRITE(6,136)ID(MODT,26),COSFEN 
     WRITE(6,141)TA 
     IF(FLW.NE.FLX)WRITE(6,144)FLX 
 144 FORMAT(70X,'TREATMENT AREA WILL BE CONTROLLED BY NITROGEN LOADING' 
    > /'   ADJUSTED HYDRAULIC APPLICATION RATE',T45,E9.3,' IN/WEEK') 
     XUP=UP*0.891 
     XU=U*0.891 
     WRITE(6,142)XU 
     WRITE(6,143)XUP 
     WRITE(6,123)WPOUT 
     WRITE(6,124) 
     WRITE(6,125)PSS 
     WRITE(6,126)PVSS 
     WRITE(6,127)PBOD5 
     WRITE(6,128)PSBOD5 
     WRITE(6,129)PCOD 
     WRITE(6,130)PSCOD 
     WRITE(6,131)PPO4 
     WRITE(6,132)PTKN 
     WRITE(6,133)PNO2 
     WRITE(6,134)PNO3 
     WRITE(6,135)POAG 
     WRITE(6,140)STARDA 
     CALL INIT(RR,QQ,77) 
     CALL SLOWPR(TA,QAVE,WWGP,FMAR,FAP,STORC, 
    > STOR,IPAP,IRECOV, 
    >BUFF,XOSTSP,XOSTSV,XOSTEN,XOSTPC,XUPIPP,COSFEN,XUPICG, 
    >FOREST,BRUSH,PASTUR,1,DPW,HPD,XUPIMW,NOWEL,DEPTH,FLW,FLOW, 
    >RSST,RSSP,RSSV,RSEN,RSMW,RSPC,RSPP,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     KASE=DPW*HPD*FAP 
     KASE=KASE*10+1 
     CALL PUMPPR(1.0,QAVE,QAVE,KASE,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE SLOWPR(TA,GF,WWGP,FMAR,FAP,STORC,STOR,IPAP,IRECOV 
    > ,BUFF,XOSTSP,XOSTSV,XOSTEN,XOSTPC,XUPIPP,COSFEN,XUPICG, 
    >FOREST,BRUSH,PASTUR,IQU,DPW,HPD,XUPIMW,NOWEL,DEPTH,FLW,FLOW, 
    >RSST,RSSP,RSSV,RSEN,RSMW,RSPC,RSPP,RSLL,RSBA,RSFN, 
    >IBANK,COSBAN,LINER,COSLIN) 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL 
     COMMON ICTL,KCTL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     DIMENSION DIAM(16) 
     DIMENSION FLDIAH(16),FLCDIA(16) 
     DATA DIAM/2.0,3.0,4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0, 
    >20.0,24.0,30.0,36.0,42.0,48.0/ 
     IF(IQU.NE.0)GO TO 678 
     XGF=GF 
     FLOW=GF*WWGP*24.0/FAP/DPW/HPD 
     OFLOW=FLOW 
     VC=0.0 
     AREAL=0.0 
     VCEP=0.0 
     IF(STORC.LE.0.0)GO TO 4 
     SV=STORC*7.48*43560.0 
     NLC=2 
   1 VPL=SV/NLC 
     IF(VPL.LE.85.0*10.0**6)GO  TO 2 
     NLC=NLC+2 
     GO TO 1 
   2 SVC=SV/NLC/7.48 
     FL=(SQRT(0.615*SVC-1521.0)+60.0)/2.0 
     IF(IBANK.EQ.1)VCEP=4.0*FL*11.0*0.67*NLC/27.0 
     IF(LINER.EQ.1)AREAL=FL**2+6.48*FL+194.4*NLC 
     DC=1.0 
   3 DF=10.0-DC 
     VF=(3.0*DF**2+10.0*DF)*(5.0*NLC/2.0+2.0)*FL 
     VC=1.3*NLC*DC*(FL**2-6.0*DF*FL+12.0*DF**2+120.0*DF-60.0*FL 
    >+1200.0) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 4 
     DC=DC+0.10*PERC/ABS(PERC) 
     GO TO 3 
   4 VLEW=VC 
     FLTA=SQRT(TA*43560.0) 
     IF(IPAP.NE.0.0)GO TO 5 
     NH=1 
     NLH=FLTA/50.0+0.99 
     IF(NLH.LE.0)NLH=1 
  53 FLL=FLTA/NH/2 
     FPS=2500.0*FMAR/96.3 
     NSL=FLL/50.0+0.99 
     IF(NSL.LE.0.0)NLS=1 
     NL=FLTA/50.0+0.99 
     IF(NL.LE.0)NL=1 
     NSH=NL*NSL 
     FPH=FPS*NSH 
     IF(FPH.LE.16000.0)GO TO 54 
     NH=NH+1 
     GO TO 53 
  54 DIAL=0.286*SQRT(NSL*FPS) 
     DO 7 I=1,16 
     IF(DIAL.LE.DIAM(I))GO TO 6 
   7 CONTINUE 
     I=16 
   6 DIAL=DIAM(I) 
     TLL=FLL*NLH*NH 
     FPH=FLOW*10.0**6/NH/1440.0 
     FPL=FPH/NLH 
     DO 11 I=1,16 
  11 FLDIAH(I)=0.0 
     DO 8 I=1,NLH 
     DIAHN=0.286*SQRT(FPH-(I-1)*FPL) 
     DO 9  J=1,16 
     IF(DIAHN.LE.DIAM(J))GO TO 10 
   9 CONTINUE 
     J=16 
  10 FLDIAH(J)=FLDIAH(J)+60.0 
     IF(I.EQ.1)DIAHO=DIAM(J) 
   8 CONTINUE 
     NBV=NH 
     DBV=DIAHO 
     NLV=NLH*NH 
     DLV=DIAL 
     NS=NSL*NLH*NH 
     GO TO 12 
   5 N=2 
  14 SCP=TA*1.1/N 
     V=0.017*FLW*SCP 
     IF(SCP.LT.450.0.AND.V.LT.10.0)GO TO 13 
     N=N+1 
     GO TO 14 
  13 DO 16 K=1,16 
  16 FLCDIA(K)=0.0 
     DO 15 I=1,N 
     FMUL=1.0 
     J=N-I+1 
  88 CDIAHN=0.832*SQRT(J*FLW/FMUL*SCP) 
     DO 17 K=1,16 
     IF(CDIAHN.LE.DIAM(K))GO TO 18 
  17 CONTINUE 
     FMUL=FMUL+1.0 
     GO TO 88 
  18 FLCDIA(K)=FLCDIA(K)+235.5*SCP**0.5*FMUL 
  15 CONTINUE 
  12 FLDP=0.0 
     IF(IRECOV.EQ.0)GO TO 19 
     FLDP=(FLTA/200.0+2.0)*FLTA 
  19 CAGH=FOREST/100.0*TA 
     CAGM=BRUSH*TA/100.0 
     CAGL=PASTUR/100.0*TA 
     TTA=TA*1.1 
     IF(IPAP.EQ.0)TTA=TA*1.05 
     ASL=0.0 
     IF(STORC.LE.0.0)GO TO 32 
     ASL=1.20*NLC*FL**2/43560.0 
  32 ABZ=4.0*BUFF*(SQRT(43560.0*TTA)+BUFF)/43560.0 
     TLA=TTA+ASL+ABZ 
     XL=TLA 
     FLF=834.8*TLA**0.5 
     IF(IPAP.EQ.0)GO TO 20 
     OMMHD=209.86*TA**0.4467 
     IF(TA.GT.100.0)OMMHD=32.77*TA**0.8481 
     GO TO 21 
  20 OMMHD=158.32*TA**0.4217 
     IF(TA.GT.60.0)OMMHD=26.73*TA**0.8561 
  21 OMMHU=0.0 
     IF(IRECOV.EQ.0)GO TO 22 
     OMMHU=54.71*TA**0.2414 
     IF(TA.GT.80.0)OMMHU=10.12*TA**0.6255 
  22 IF(IPAP.EQ.0)OMMPD=0.906*TA**(-0.086) 
     IF(IPAP.EQ.0)GO TO 23 
     OMMPD=1.06*TA**0.0696 
     IF(TA.GT.175.0)OMMPD=2.92*TA**(-0.1261) 
  23 OMMPU=0.0 
     IF(IRECOV.EQ.0)GO TO 24 
     OMMPU=14.13*TA**(-0.1392) 
     IF(TA.GT.200.0)OMMPU=30.95*TA**(-0.2860) 
  24 OMMHM=0.0 
     OMMPM=0.0 
     IF(NOWEL.LE.0.OR.DEPTH.LE.0.0)GO TO 171 
     UPIMW=XUPIMW 
     IF(XUPIMW.EQ.0.0)UPIMW=8.0*FMSECI/491.60 
     COSTMW=UPIMW*NOWEL*DEPTH 
     OMMHM=6.39*NOWEL**0.276 
     OMMPM=2.28*DEPTH**0.0497 
 171 CF=1.18 
     COSTE=VLEW/27.0*UPIEX 
     TCDSS=0.0 
     TCDCP=0.0 
     IF(IPAP.NE.0)GO TO 26 
     TICHP=0.0 
     COSTSP=XOSTSP 
     IF(XOSTSP.EQ.0.0)COSTSP=12.80*FMSECI/491.6 
     DO 25 I=1,16 
     COSTPN=6.842*DIAM(I)**1.2255 
     FICHPN=FLDIAH(I)*COSTPN*COSTSP/100.0 
  25 TICHP=TICHP+FICHPN 
     COSTP=6.842*DIAL**1.2255 
     TICLP=TLL*COSTP*COSTSP/100.0 
     COSTRV=3.99*DBV**1.395 
     COSTSV=XOSTSV 
     IF(XOSTSV.EQ.0.0)COSTSV=952.10*FMSECI/491.6 
     COSTBV=COSTRV*COSTSV*NBV/100.0 
     COSTRL=15.33*DLV**1.053 
     COSTLV=COSTRL*COSTSV*NLV/100.0 
     COSTEN=XOSTEN 
     IF(XOSTEN.EQ.0.0)XOSTEN=61.65*FMSECI/491.6 
     COSTS=1.20*NS*COSTEN 
     TCDSS=TICHP+TICLP+COSTBV+COSTLV+COSTS 
     PRIN=CF*(TICHP+TICLP) 
     CALL AMORT(PRIN,RSSP,RC1) 
     PRIN=CF*(COSTBV+COSTLV) 
     CALL AMORT(PRIN,RSSV,RC2) 
     PRIN=CF*COSTS 
     CALL AMORT(PRIN,RSEN,RC3) 
     GO TO 30 
  26 COSTPC=XOSTPC 
     IF(XOSTPC.EQ.0.0)COSTPC=27690.0*FMSECI/491.6 
     COSTRC=12.25*SCP**0.4559 
     COSTCP=N*COSTRC*COSTPC/100.0 
     TCHPC=0.0 
     DO 27 I=1,16 
     COSTPN=6.842*DIAM(I)**1.2255 
     CHPCN=FLCDIA(I)*COSTPN*COSTSP/100.0 
  27 TCHPC=TCHPC+CHPCN 
     TCDCP=COSTCP+TCHPC 
     PRIN=CF*(COSTCP+TCHPC) 
     CALL AMORT(PRIN,RSPC,RC1) 
     RC2=0.0 
     RC3=0.0 
  30 COSTU=0.0 
     IF(IRECOV.EQ.0)GO TO 31 
     UPIPP=XUPIPP 
     IF(XUPIPP.EQ.0.0)UPIPP=6.94*FMSECI/491.6 
     COSTU=FLDP*UPIPP*1.1 
  31 UPICG=XUPICG 
     IF(XUPICG.EQ.0.0)UPICG=3000.0*FMSECI/491.6 
     COSTCG=(CAGH+0.306*CAGM+0.092*CAGL)*UPICG 
     COSTF=FLF*COSFEN 
     OMMC=(OMMPD*TCDSS+OMMPD*TCDCP+OMMPU*COSTU+OMMPM*COSTMW)/100.0 
     CCLL=AREAL*COSLIN 
     CCEP=VCEP*COSBAN 
     CC=CF*(TCDSS+TCDCP+COSTU+COSTE+COSTCG+COSTF+COSTMW+CCLL+CCEP) 
     PRIN=COSTU*CF 
     CALL AMORT(PRIN,RSPP,RC4) 
     PRIN=CF*(COSTE+COSTCG) 
     CALL AMORT(PRIN,RSST,RC5) 
     PRIN=CF*COSTF 
     CALL AMORT(PRIN,RSFN,RC6) 
     PRIN=CF*COSTMW 
     CALL AMORT(PRIN,RSMW,RC7) 
     PRIN=CCLL*CF 
     CALL AMORT(PRIN,RSLL,RC8) 
     PRIN=CCEP*CF 
     CALL AMORT(PRIN,RSBA,RC9) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=(OMMHD+OMMHU +OMMHM)*0.60 
     SUMMDA(NUM,3)=(OMMHD+OMMHU+OMMHM)*0.40 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4+RC5+RC6+RC7+RC8+RC9 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=45.0 
     RETURN 
 678 IF(KCTL.NE.0)CALL SLOWQU(OFLOW,SVC,NLC,FL,DC,VLEW,NBV,FPH,NLH,FPL, 
    >DIAL,DBV, 
    >FLL,DIAM,FLDIAH,NSL,FBV,FLCDIA,ASL,ABZ,TLA,FLF,OMMHD, 
    >OMMPD,OMMHU,OMMPU,IRECOV,IPAP,OMMHM,OMMPM,STORC, 
    >SCP,FLDP,N,TA) 
     RETURN 
     END 
     SUBROUTINE SLOWQU(GF,SVC,NLC,FL,DC,VLEW,NBV,FPH,NLH,FPL,DIAL,DBV, 
    >FLL,DIAM,FLDIAH,NSL,FBV,FLCDIA,ASL,ABZ,TLA,FLF,OMMHD, 
    >OMMPD,OMMHU,OMMPU,IRECOV,IPAP,OMMHM,OMMPM,STORC, 
    >SCP,FLDP,N,TA) 
     DIMENSION DIAM(1),FLDIAH(1),FLCDIA(1) 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR SLOW INFILTRATION LAND TREATMENT') 
     WRITE(6,2)GF 
     IF(IPAP.EQ.0)WRITE(6,226) 
     IF(IPAP.NE.0)WRITE(6,227) 
 226 FORMAT(' BURIED SOLID SET SPRINKLER DISTRIBUTION SYSTEM') 
 227 FORMAT(' CENTER PIVOT SPRINKLER DISTRIBUTION SYSTEM') 
   2 FORMAT('0APPLIED FLOW',T45,E9.3,' MGD') 
 100 FORMAT(' STORAGE VOLUME PER CELL',T45,E9.3,' GAL') 
 101 FORMAT(' NUMBER OF STORAGE CELLS',T45,I9) 
 102 FORMAT(' LENGTH OF STORAGE CELL',T45,E9.3,' FEET') 
1021 FORMAT(' DEPTH OF CUT FOR STORAGE LAGOONS',T45,E9.3,' FEET') 
 103 FORMAT(' LAGOON EARTHWORK',T45,E9.3,' CU FT') 
 104 FORMAT(' FLOW PER HEADER',T45,E9.3,' GPM') 
 106 FORMAT(' FLOW PER LATERAL',T45,E9.3,' GPM') 
 107 FORMAT(' DIAMETER OF LATERAL PIPE',T45,E9.3,' INCHES') 
 108 FORMAT(' LENGTH PER LATERAL',T45,E9.3,' FEET') 
 109 FORMAT(' LENGTHS AND DIAMETERS OF HEADER PIPE') 
 110 FORMAT(' ',25X,E9.3,' FEET OF ',E9.3,' INCH PIPE') 
 111 FORMAT(' DIAMETER OF BUTTERFLY VALVES',T45,E9.3,' INCHES') 
 112 FORMAT(' NUMBER OF BUTTERFLY VALVES',T45,I9) 
 118 FORMAT(' LENGTH OF SIX INCH DRAIN PIPE',T45,E9.3,' FEET') 
 121 FORMAT(' LAND AREA FOR STORAGE LAGOONS',T45,E9.3,' ACRES') 
 122 FORMAT(' LAND AREA FOR BUFFER ZONES',T45,E9.3,' ACRES') 
 123 FORMAT(' TOTAL LAND AREA',T45,E9.3,' ACRES') 
 124 FORMAT(' TOTAL LENGTH OF FENCE',T45,E9.3,' FEET') 
 125 FORMAT(' ANNUAL O & M FOR DISTRIBUTION SYSTEM',T45,E9.3, 
    > ' MAN-HRS/YR') 
 127 FORMAT(' ANNUAL O & M  UNDERDRAINS RECOVERY SYSTEM', 
    > T45,E9.3,' MAN-HRS/YR') 
 128 FORMAT(' DISTRIBUTION SYSTEM MATERIAL COST', 
    > T45,E9.3,' PERCENT') 
 130 FORMAT(' UNDERDRAINS RECOVERY SYSTEM MATERIAL COST', 
    > T45,E9.3,' PERCENT') 
     IF(STORC.EQ.0.0)GO TO 9 
     WRITE(6,100)SVC 
     WRITE(6,101)NLC 
     WRITE(6,102)FL 
     WRITE(6,1021)DC 
     WRITE(6,103)VLEW 
 201 FORMAT(' NUMBER OF HEADERS',T45,I9) 
   9 IF(IPAP.NE.0)GO TO 21 
     WRITE(6,201)NBV 
     WRITE(6,104)FPH 
     WRITE(6,202)NLH 
 202 FORMAT(' NUMBER OF LATERALS PER HEADER',T45,I9) 
     WRITE(6,106)FPL 
     WRITE(6,107)DIAL 
     WRITE(6,108)FLL 
     WRITE(6,109) 
     DO 3 I=1,16 
     IF(FLDIAH(I).LE.0.0)GO TO 3 
     WRITE(6,110)FLDIAH(I),DIAM(I) 
   3 CONTINUE 
     WRITE(6,105)NSL 
 105 FORMAT(' NUMBER OF SPRINKLERS PER LATERAL',T45,I9) 
     WRITE(6,111)DBV 
     WRITE(6,112)NBV 
     GO TO 90 
  21 WRITE(6,222)N 
     WRITE(6,223)SCP 
     WRITE(6,109) 
     DO 4 I=1,16 
     IF(FLCDIA(I).LE.0.0)GO TO 4 
     WRITE(6,110)FLCDIA(I),DIAM(I) 
   4 CONTINUE 
  90 IF(IRECOV.EQ.0)GO TO 5 
     WRITE(6,118)FLDP 
 222 FORMAT(' NUMBER OF CENTER PIVOT SYSTEMS',T45,I9) 
 223 FORMAT(' COVERAGE PER CENTER PIVOT SYSTEM',T45,E9.3,' ACRES') 
   5 CONTINUE 
     TUW=TLA-ABZ-ASL-TA 
     IF(IPAP.EQ.0)WRITE(6,300)TUW 
     IF(IPAP.NE.0)WRITE(6,301)TUW 
 300 FORMAT(' LAND AREA FOR SERVICE ROADS',T45,E9.3,' ACRES') 
 301 FORMAT(' UNWETTED TREATMENT AREA',T45,E9.3,' ACRES') 
     IF(ASL.NE.0.0)WRITE(6,121)ASL 
     WRITE(6,122)ABZ 
     WRITE(6,123)TLA 
     WRITE(6,124)FLF 
     WRITE(6,125)OMMHD 
     WRITE(6,128)OMMPD 
     WRITE(6,228)OMMHM 
     WRITE(6,229)OMMPM 
 228 FORMAT(' ANNUAL O & M FOR MONITORING WELLS',T45,E9.3, 
    >' MAN-HRS/YR') 
 229 FORMAT(' MONITORING WELL MATERIAL COSTS',T45,E9.3,' PERCENT') 
  91 IF(IRECOV.EQ.0)GO TO 8 
     WRITE(6,127)OMMHU 
     WRITE(6,130)OMMPU 
   8 RETURN 
     END 
     SUBROUTINE SLUMEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,XHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),VR),(QQ(2),PVSD),(QQ(3),CC),(QQ(4),OMH), 
    > (QQ(5),FMMH),(QQ(6),SU),(QQ(7),FKWH),(QQ(8),CHEM),(QQ(9),RSST) 
     CALL INIT(QQ,RR,9) 
     PS=PVOLU*8.34*1.05*PSOLID/100.0 
     PVS=PS*PVOLAT/100.0 
     PSD=PVS*PVSD/100.0 
     PS=PS-PSD 
     PVS=PVS-PSD 
     PVOLAT=PVS/PS*100.0 
     PVOLU=PVOLU*(1.0-VR/100.0) 
     PSOLID=PS/(PVOLU*8.34*1.05)*100.0 
     CALL AMORT(CC,RSST,RC1) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH/UPIPC 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,6)=SU 
     SUMMDA(NUM,8)=CHEM 
     SUMMDA(NUM,9)=95.0 
     SUMMDA(NUM,18)=FKWH 
     CALL USEREX(37) 
     CALL INIT(RR,QQ,9) 
     RETURN 
     END 
     SUBROUTINE SLUMIN(RR) 
     DIMENSION LIST(5),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),VR),(QQ(2),PVSD),(QQ(3),CC),(QQ(4),OMH), 
    > (QQ(5),FMMH),(QQ(6),SU),(QQ(7),FKWH),(QQ(8),CHEM),(QQ(9),RSST) 
     DATA LIST/'VOLU','PERC','COST','END ','REPL'/ 
     CALL INIT(QQ,RR,9) 
     CC=0.0 
     OMH=0.0 
     FMMH=0.0 
     SU=0.0 
     FKWH=0.0 
     RSST=40.0 
     CHEM=0.0 
     VR=0.0 
     PVSD=0.0 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID-CARD IGNORED') 
     GO TO 50 
  52 GO TO(1,2,3,4,5),I 
   1 VR=VALUE(1) 
     GO TO 50 
   2 PVSD=VALUE(1) 
     GO TO 50 
   3 CC=VALUE(1) 
     OMH=VALUE(2) 
     FMMH=VALUE(3) 
     FKWH=VALUE(4) 
     SU=VALUE(5) 
     CHEM=VALUE(6) 
     GO TO 50 
   4 CALL INIT(RR,QQ,9) 
     RETURN 
   5 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE SLUMOT(RR) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     EQUIVALENCE (QQ(1),VR),(QQ(2),PVSD),(QQ(3),CC),(QQ(4),OMH), 
    > (QQ(5),FMMH),(QQ(6),SU),(QQ(7),FKWH),(QQ(8),CHEM),(QQ(9),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,9) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0 USER SPECIFIED SLUDGE PROCESS') 
 201 FORMAT('0I VOLUME REDUCTION',T45,E9.3,' PERCENT') 
 202 FORMAT(' I PERCENT VS DESTROYED',T45,E9.3,' PERCENT') 
     WRITE(6,201)VR 
     WRITE(6,202)PVSD 
     RETURN 
     END 
     SUBROUTINE SMALEX(LQADS,LSADS,BANKDA,MODT,IPRT,ID,NP,L,ILS, 
    >IDAQS,IDASS) 
     DIMENSION LQADS(80,3),LSADS(20,3),BANKDA(1),ID(3,1) 
     DIMENSION IDAQS(1),IDASS(1) 
     COMMON/SSLUCO/SV,SSS,SVS 
     COMMON/PSLUCO/PV,PSS,PVS 
     GO TO (1001,1002),ILS 
1001 GO TO (1,2,3,200,200, 200,200,200,200,200, 
    >11,12,200,200,200, 200,200,200,200,20, 
    >21,22,23,200,25,26,27,200,200,200, 
    >31,200,200,200,200,36,37,38,39,40, 
    >41,42,200,200,200),NP 
 200 WRITE(6,201) 
 201 FORMAT(' *** INVALID PROCESS ON BLOCK CARD FOR SMALL FACILITY', 
    >' - PROCESS IGNORED ***') 
     RETURN 
   1 KADD=LQADS(1,MODT) 
     IADD=IDAQS(1) 
     CALL EQULEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL EQULOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
   2 KADD=LQADS(2,MODT) 
     IADD=IDAQS(2) 
     CALL ZFLOTX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZFLOTO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
   3 KADD=LQADS(3,MODT) 
     IADD=IDAQS(3) 
     CALL ZFILTX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZFILTO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  11 KADD=LQADS(11,MODT) 
     IADD=IDAQS(11) 
     CALL ZCHLOX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZCHLOO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  12 KADD=LQADS(12,MODT) 
     IADD=IDAQS(12) 
     CALL TRICEX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL TRICOT(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADS(33,MODT) 
     IADD=IDAQS(33) 
     IF(IPRT.EQ.1)CALL XECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  20 KADD=LQADS(20,MODT) 
     IADD=IDAQS(20) 
     CALL ZLAGOX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZLAGOO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  21 KADD=LQADS(21,MODT) 
     IADD=IDAQS(21) 
     CALL ZAERAX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZAERAO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  22 KADD=LQADS(57,MODT) 
     IADD=IDAQS(57) 
     CALL ZRAWSX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZRAWSO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  23 KADD=LQADS(23,MODT) 
     IADD=IDAQS(23) 
     CALL ZOXIDX(BANKDA(KADD),MODT) 
     IF(IPRT.EQ.1)CALL ZOXIDO(BANKDA(KADD),ID(1,IADD),MODT) 
     KADD=LQADS(51,MODT) 
     IADD=IDAQS(51) 
     IF(IPRT.EQ.1)CALL OECOOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  25 KADD=LQADS(25,MODT) 
     IADD=IDAQS(25) 
     CALL ZCOAGX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZCOAGO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  26 KADD=LQADS(26,MODT) 
     IADD=IDAQS(26) 
     CALL PRIMEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL PRIMOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  27 KADD=LQADS(28,MODT) 
     IADD=IDAQS(28) 
     CALL ZBAREX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZBAROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  31 KADD=LQADS(36,MODT) 
     IADD=IDAQS(36) 
     CALL POSTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL POSTOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  36 KADD=LQADS(43,MODT) 
     IADD=IDAQS(43) 
     CALL OVEREX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL OVEROT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  37 KADD=LQADS(44,MODT) 
     IADD=IDAQS(44) 
     CALL RAPIEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL RAPIOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  38 KADD=LQADS(45,MODT) 
     IADD=IDAQS(45) 
     CALL SLOWEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL SLOWOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  39 KADD=LQADS(46,MODT) 
     IADD=IDAQS(46) 
     CALL ZSEPTX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZSEPTO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  40 KADD=LQADS(47,MODT) 
     IADD=IDAQS(47) 
     CALL ZACTIX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZACTIO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  41 KADD=LQADS(48,MODT) 
     IADD=IDAQS(48) 
     CALL ZINTEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL ZINTEO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  42 KADD=LQADS(49,MODT) 
     IADD=IDAQS(49) 
     CALL PUMPEX(BANKDA(KADD)) 
     IF(IPRT.EQ.1)CALL PUMPOT(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
1002 GO TO (200,200,200,200,200, 200,87,200,200,200, 
    >200,200,200,200,200,200,200,200,81),NP 
  81 KADD=LSADS(15,MODT) 
     IADD=IDASS(15) 
     IF(L.EQ.2)CALL ZSLUDX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL ZSLUDX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL ZSLUDO(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL ZSLUDO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  87 KADD=LSADS(7,MODT) 
     IADD=IDASS(7) 
     IF(L.EQ.2)CALL ZDRYIX(SV,SSS,SVS,BANKDA(KADD)) 
     IF(L.EQ.3)CALL ZDRYIX(PV,PSS,PVS,BANKDA(KADD)) 
     IF(IPRT.EQ.1.AND.L.EQ.2)CALL ZDRYIO(BANKDA(KADD),ID(1,IADD),MODT) 
     IF(IPRT.EQ.1.AND.L.EQ.3)CALL ZDRYIO(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
 300 RETURN 
     END 
     SUBROUTINE SMALIN(LQADS,LSADS,MODT,BANKDA,ID,NP,ILS,IDAQS,IDASS) 
     DIMENSION IDAQS(1),IDASS(1) 
     DIMENSION LQADS(80,3),LSADS(20,3),BANKDA(1),ID(3,1) 
     DATA KEND/'END'/ 
     GO TO (1001,1002),ILS 
1001 KADD=LQADS(NP,MODT) 
     IADD=IDAQS(NP) 
     GO TO (1,2,3,200,200,200,200,200,200,200, 
    >11,12,200,200,200,200,200,200,200,20, 
    >21,200,23,200,25,26,200,28,200,200, 
    >200,200,33,200,200,36,200,200,200,200, 
    >200,200,43,44,45,46,47,48,49,200,51,200,200,200,200,200,57),NP 
 200 WRITE(6,204) 
 204 FORMAT(' *** INVALID SMALL FACILITY PROCESS ***') 
 201 READ(5,202)ITYPE,IXX,KLM 
     WRITE(6,203)ITYPE,IXX,KLM 
     IF(ITYPE.EQ.KEND)RETURN 
 202 FORMAT(A4,A2,74A1) 
 203 FORMAT(' ',A4,A2,74A1) 
     GO TO 200 
   1 CALL EQULIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
   2 CALL ZFLOTI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
   3 CALL ZFILTI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  11 CALL ZCHLOI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  12 CALL TRICIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  20 CALL ZLAGOI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  21 CALL ZAERAI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  23 CALL ZOXIDI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  25 CALL ZCOAGI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  26 CALL PRIMIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  28 CALL ZBARIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  33 CALL XECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  36 CALL POSTIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  43 CALL OVERIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  44 CALL RAPIIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  45 CALL SLOWIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  46 CALL ZSEPTI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  47 CALL ZACTII(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  48 CALL ZINTEI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  49 CALL PUMPIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  51 CALL OECOIN(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  57 CALL ZRAWSI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
1002 KADD=LSADS(NP,MODT) 
     IADD=IDASS(NP) 
     GO TO (200,200,200,200,200,200,87,200,200,200,200,200,200, 
    >200,81),NP 
  81 CALL ZSLUDI(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
  87 CALL ZDRYII(BANKDA(KADD),ID(1,IADD),MODT) 
     GO TO 300 
 300 RETURN 
     END 
     SUBROUTINE SORTT(NOSAV,NNT,ISCH,FARE,TAB) 
     DIMENSION ISCH(100,5),FARE(100,5),TAB(5) 
     IF(NOSAV.GT.0)GO TO 1 
     DO 2 I=1,5 
     ISCH(1,I)=NNT 
   2 FARE(1,I)=TAB(I) 
     NOSAV=1 
     RETURN 
   1 DO 3 J=1,5 
     DO 4 I=1,NOSAV 
     IF(FARE(I,J).LT.TAB(J))GO TO 4 
     DO 5 K=I,NOSAV 
     M=NOSAV-K+I 
     FARE(M+1,J)=FARE(M,J) 
   5 ISCH(M+1,J)=ISCH(M,J) 
     FARE(I,J)=TAB(J) 
     ISCH(I,J)=NNT 
     GO TO 3 
   4 CONTINUE 
     FARE(NOSAV+1,J)=TAB(J) 
     ISCH(NOSAV+1,J)=NNT 
   3 CONTINUE 
     NOSAV=NOSAV+1 
     RETURN 
     END 
     SUBROUTINE SPCLEX(NP) 
     COMMON/SPCLCO/KNATS(10),KNATL(10),ISPTYP(40),PER(40), 
    >ISPTNK(40),NEXTAD,KNATSS(10),KNATSL(10) 
     COMMON/BANKCO/BANKDA(8000) 
     COMMON ICTL,KCTL,IPRT,USE(22) 
     COMMON/SSLUCO/SSLUDA(3) 
     COMMON/PSLUCO/PSLUDA(3) 
     COMMON/STARCO/STARDA(19) 
     IF(IPRT.EQ.1)CALL TITLE 
     NP=NP/1000 
     NF=ISPTYP(NP) 
     NL=(NF-1)/6+1 
     ITYP=NF-(NL-1)*6 
     PRCNT=PER(NP) 
     NOTNK=ISPTNK(NP) 
     NOTNKO=NOTNK-1 
     IF(NL.EQ.1)KADD=KNATL(NOTNK) 
     IF(NL.GT.1)KADD=KNATS(NOTNK) 
     IF(KADD.EQ.0.AND.ITYP.GE.5)GO TO 1 
     IF(KADD.GT.0)GO TO 5 
     GO TO (3,4,4),NL 
   3 KADD=NEXTAD 
     NEXTAD=NEXTAD+22 
     KNATL(NOTNK)=KADD 
     GO TO 5 
   1 WRITE(6,2)NOTNKO 
   2 FORMAT('0***TANK',I2,' NOT DEFINED - RUN ABORTED') 
     STOP 
   4 KADD=NEXTAD 
     NEXTAD=NEXTAD+3 
     KNATS(NOTNK)=KADD 
   5 IF(ITYP.GE.5)GO TO 6 
     GO TO (7,8,9),NL 
   7 IF(ITYP.GE.3)GO TO 10 
 LIQUID LINE TO EMPTY TANK 
     DO 11 I=4,22 
     M=KADD+I-1 
  11 BANKDA(M)=USE(I) 
     DO 12 I=1,3 
     M=KADD+I-1 
     BANKDA(M)=USE(I)*PRCNT/100.0 
  12 USE(I)=USE(I)*(1.0-PRCNT/100.0) 
     IF(USE(2).LT.0.0001)USE(I)=0.0 
     DO 1212 I=1,22 
     IF(USE(2).EQ.0.0)USE(I)=0.0 
1212 CONTINUE 
 101 FORMAT('0',19A4) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,102)PRCNT,NOTNKO 
 102 FORMAT('0',F5.1,' PERCENT OF LIQUID LINE STORED IN TANK',I2) 
 106 WRITE(6,103)USE(2) 
 103 FORMAT('0',F8.3,' MGD REMAINS IN THE LIQUID LINE') 
     WRITE(6,104)NOTNKO 
 104 FORMAT('0TANK',I2,' NOW CONTAINS:') 
 100 FORMAT(///' ',23X,'LIQUID CHARACTERISTICS'/ 
    <' FLOW      (MGD)     SOLIDS    (MG/L)',11X,'(MG/L)',7X,'(MG/L)'/ 
    <' MAXIMUM',F9.4,4X,'SUSPENDED',F8.2,4X,'BOD5',F9.2,4X,'TKN',F6.2/ 
    <' AVERAGE',F9.4,4X,'VOLATILE',F9.2,' %  ','BOD5S',F8.2,4X,'NH3', 
    <F6.2/ 
    <' MINIMUM',F9.4,4X,'SETTLEABLE',F7.2,4X,'COD',F10.2,4X,'NO2',F6.2/ 
    <' ',41X,'CODS',F9.2,4X,'NO3',F6.2/ 
    <' TEMP',1X,'(W)',F6.1,' C    OIL & GREASE',F7.2,'  PO4',F10.2/ 
    <' TEMP (S)',F6.1,' C',4X,'CATIONS',F12.2/ 
    <' ','PH',1X,F12.1,5X,'ANIONS',F13.2/' ') 
 114 WRITE(6,100)BANKDA(KADD+2),BANKDA(KADD+4),BANKDA(KADD+6), 
    >BANKDA(KADD+13),BANKDA(KADD+1),BANKDA(KADD+5),BANKDA(KADD+7), 
    >BANKDA(KADD+15),BANKDA(KADD),BANKDA(KADD+16),BANKDA(KADD+8), 
    >BANKDA(KADD+18), 
    >BANKDA(KADD+9),BANKDA(KADD+19),BANKDA(KADD+3),BANKDA(KADD+17), 
    >BANKDA(KADD+14),BANKDA(KADD+20),BANKDA(KADD+11),BANKDA(KADD+10) 
    >,BANKDA(KADD+12) 
     WRITE(6,101)STARDA 
     RETURN 
 MIX LIQUID LINE INTO TANK 
  10 DO 13 I=4,22 
     IF(I.EQ.11)GO TO 13 
     M=KADD+I-1 
     BANKDA(M)=(BANKDA(M)*BANKDA(KADD+1)+USE(I)*USE(2))/ 
    >(BANKDA(KADD+1)+USE(2)) 
  13 CONTINUE 
     BANKDA(KADD+10)=EXP((ALOG(BANKDA(KADD+10))*BANKDA(KADD+1)+ 
    >ALOG(USE(11))*USE(2))/(BANKDA(KADD+1)+USE(2))) 
     DO 14 I=1,3 
     M=KADD+I-1 
     BANKDA(M)=BANKDA(M)+USE(I)*PRCNT/100.0 
  14 USE(I)=USE(I)*(1.0-PRCNT/100.0) 
     IF(USE(2).LT.0.0001)USE(2)=0.0 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,105)PRCNT,NOTNKO 
 105 FORMAT('0',F5.1,' PERCENT OF LIQUID LINE MIXED INTO TANK',I2) 
     GO TO 106 
   8 IF(ITYP.GE.3)GO TO 15 
 SECONDARY SLUDGE LINE TO EMPTY TANK 
     BANKDA(KADD+1)=SSLUDA(2) 
     BANKDA(KADD+2)=SSLUDA(3) 
     BANKDA(KADD)=SSLUDA(1)*PRCNT/100.0 
     SSLUDA(1)=SSLUDA(1)*(1.0-PRCNT/100.0) 
     IF(SSLUDA(1).LT.0.01)SSLUDA(1)=0.0 
     IF(SSLUDA(1).NE.0.0)GO TO 16 
     SSLUDA(2)=0.0 
     SSLUDA(3)=0.0 
  16 IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,107)PRCNT,NOTNKO 
 107 FORMAT('0',F5.1,' PERCENT OF SECONDARY SLUDGE LINE STORED' 
    >,' IN SLUDGE TANK',I2) 
 111 WRITE(6,108)SSLUDA(1) 
 108 FORMAT('0',F9.1,' GAL/D REMAINS IN THE SECONDARY SLUDGE LINE') 
     WRITE(6,109)NOTNKO 
 109 FORMAT('0SLUDGE TANK',I2,' NOW CONTAINS:') 
 200 FORMAT('0',25X,'SLUDGE CHARACTERISTICS'/ 
    >' ',25X,'VOLUME (GAL/D)',F14.2/' ',27X,'% SOLIDS',F18.2/ 
    >' ',27X,'% VOLATILE',F16.2) 
     WRITE(6,200)BANKDA(KADD),BANKDA(KADD+1),BANKDA(KADD+2) 
     WRITE(6,101)STARDA 
     RETURN 
 MIX SECONDARY SLUDGE LINE INTO TANK 
  15 BANKDA(KADD+1)=(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(2)*SSLUDA(1))/(BANKDA(KADD)+SSLUDA(1)) 
     BANKDA(KADD+2)=(BANKDA(KADD+2)*BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(3)*SSLUDA(2)*SSLUDA(1))/(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(2)*SSLUDA(1)) 
     BANKDA(KADD)=BANKDA(KADD)+SSLUDA(1)*PRCNT/100.0 
     SSLUDA(1)=SSLUDA(1)*(1.0-PRCNT/100.0) 
     IF(SSLUDA(1).LT.0.01)SSLUDA(1)=0.0 
     IF(SSLUDA(1).NE.0.0)GO TO 17 
     SSLUDA(2)=0.0 
     SSLUDA(3)=0.0 
  17 IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,110)PRCNT,NOTNKO 
 110 FORMAT('0',F5.1,' PERCENT OF SECONDARY SLUDGE LINE MIXED', 
    >' INTO SLUDGE TANK',I2) 
     GO TO 111 
   9 IF(ITYP.GE.3)GO TO 21 
 PRIMARY SLUDGE LINE TO EMPTY TANK 
     BANKDA(KADD+1)=PSLUDA(2) 
     BANKDA(KADD+2)=PSLUDA(3) 
     BANKDA(KADD)=PSLUDA(1)*PRCNT/100.0 
     PSLUDA(1)=PSLUDA(1)*(1.0-PRCNT/100.0) 
     IF(PSLUDA(1).LT.0.01)PSLUDA(1)=0.0 
     IF(PSLUDA(1).NE.0.0)GO TO 22 
     PSLUDA(2)=0.0 
     PSLUDA(3)=0.0 
  22 IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,207)PRCNT,NOTNKO 
 207 FORMAT('0',F5.1,' PERCENT OF PRIMARY SLUDGE LINE STORED' 
    >,' IN SLUDGE TANK',I2) 
 211 WRITE(6,208)PSLUDA(1) 
 208 FORMAT('0',F9.1,' GAL/D REMAINS IN THE PRIMARY SLUDGE LINE') 
     WRITE(6,209)NOTNKO 
 209 FORMAT('0SLUDGE TANK',I2,' NOW CONTAINS:') 
     WRITE(6,200)BANKDA(KADD),BANKDA(KADD+1),BANKDA(KADD+2) 
     WRITE(6,101)STARDA 
     RETURN 
 MIX PRIMARY SLUDGE LINE INTO TANK 
  21 BANKDA(KADD+1)=(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(2)*PSLUDA(1))/(BANKDA(KADD)+PSLUDA(1)) 
     BANKDA(KADD+2)=(BANKDA(KADD+2)*BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(3)*PSLUDA(2)*PSLUDA(1))/(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(2)*PSLUDA(1)) 
     BANKDA(KADD)=BANKDA(KADD)+PSLUDA(1)*PRCNT/100.0 
     PSLUDA(1)=PSLUDA(1)*(1.0-PRCNT/100.0) 
     IF(PSLUDA(1).LT.0.01)PSLUDA(1)=0.0 
     IF(PSLUDA(1).NE.0.0)GO TO 23 
     PSLUDA(2)=0.0 
     PSLUDA(3)=0.0 
  23 IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,210)PRCNT,NOTNKO 
 210 FORMAT('0',F5.1,' PERCENT OF PRIMARY SLUDGE LINE MIXED', 
    >' INTO SLUDGE TANK',I2) 
     GO TO 211 
   6 GO TO (18,19,20),NL 
  18 IF(ITYP.EQ.6)GO TO 24 
 TANK TO LIQUID LINE 
     DO 25 I=1,22 
     M=KADD+I-1 
  25 USE(I)=BANKDA(M) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,112)NOTNKO 
 112 FORMAT('0TANK',I2,' CONTENTS REPLACES LIQUID LINE CONTENTS') 
     WRITE(6,113) 
 113 FORMAT('0LIQUID LINE NOW CONTAINS:') 
     GO TO 114 
 MIX TANK INTO LINE 
  24 DO 26 I=4,22 
     IF(I.EQ.11)GO TO 26 
     M=KADD+I-1 
     USE(I)=(BANKDA(M)*BANKDA(KADD+1)+USE(I)*USE(2))/ 
    >(BANKDA(KADD+1)+USE(2)) 
  26 CONTINUE 
     USE(11)=EXP((ALOG(BANKDA(KADD+10))*BANKDA(KADD+1)+ 
    >ALOG(USE(11))*USE(2))/(BANKDA(KADD+1)+USE(2))) 
     DO 27 I=1,3 
     M=KADD+I-1 
  27 USE(I)=BANKDA(M)+USE(I) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,115)NOTNKO 
     WRITE(6,113) 
 115 FORMAT('0TANK',I2,' MIXED INTO LIQUID LINE') 
     WRITE(6,100)USE(3),USE(5),USE(7),USE(14),USE(2),USE(6), 
    >USE(8),USE(16),USE(1),USE(17),USE(9),USE(19),USE(10),USE(20), 
    >USE(4),USE(18),USE(15),USE(21),USE(12),USE(11),USE(13) 
     WRITE(6,101)STARDA 
     RETURN 
  19 IF(ITYP.EQ.6)GO TO 30 
 SECONDARY TANK TO SECONDARY LINE 
     DO 31 I=1,3 
     M=KADD+I-1 
  31 SSLUDA(I)=BANKDA(M) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,130)NOTNKO 
 130 FORMAT('0SLUDGE TANK',I2,' CONTENTS REPLACES SECONDARY SLUDGE', 
    >' LINE CONTENTS') 
 133 WRITE(6,131) 
 131 FORMAT('0SECONDARY SLUDGE LINE NOW CONTAINS:') 
     WRITE(6,200)(SSLUDA(I),I=1,3) 
     WRITE(6,101)STARDA 
     RETURN 
 MIX TANK INTO SECONDARY SLUDGE LINE 
  30 SSLUDA(2)=(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(2)*SSLUDA(1))/(BANKDA(KADD)+SSLUDA(1)) 
     SSLUDA(3)=(BANKDA(KADD+2)*BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(3)*SSLUDA(2)*SSLUDA(1))/(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >SSLUDA(2)*SSLUDA(1)) 
     SSLUDA(1)=BANKDA(KADD)+SSLUDA(1) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,132)NOTNKO 
 132 FORMAT('0SLUDGE TANK',I2,' MIXED WITH SECONDARY SLUDGE LINE') 
     GO TO 133 
  20 IF(ITYP.EQ.6)GO TO 40 
 PRIMARY TANK TO PRIMARY LINE 
     DO 41 I=1,3 
     M=KADD+I-1 
  41 PSLUDA(I)=BANKDA(M) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,140)NOTNKO 
 140 FORMAT('0SLUDGE TANK',I2,' CONTENTS REPLACES PRIMARY SLUDGE', 
    >' LINE CONTENTS') 
 143 WRITE(6,141) 
 141 FORMAT('0PRIMARY SLUDGE LINE NOW CONTAINS:') 
     WRITE(6,200)(PSLUDA(I),I=1,3) 
     WRITE(6,101)STARDA 
     RETURN 
 MIX TANK INTO PRIMARY SLUDGE LINE 
  40 PSLUDA(2)=(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(2)*PSLUDA(1))/(BANKDA(KADD)+PSLUDA(1)) 
     PSLUDA(3)=(BANKDA(KADD+2)*BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(3)*PSLUDA(2)*PSLUDA(1))/(BANKDA(KADD+1)*BANKDA(KADD)+ 
    >PSLUDA(2)*PSLUDA(1)) 
     PSLUDA(1)=BANKDA(KADD)+PSLUDA(1) 
     IF(IPRT.NE.1)RETURN 
     WRITE(6,101)STARDA 
     WRITE(6,142)NOTNKO 
 142 FORMAT('0SLUDGE TANK',I2,' MIXED WITH PRIMARY SLUDGE LINE') 
     GO TO 143 
     END 
     SUBROUTINE SRECEX(RR) 
     COMMON ICTL,KTCK,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT, 
    <BOD5,BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG, 
    <ANO2,ANO3 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     VOL=QAVE*TD/60.0/1440.0 
     CO2R=(3.7*OHM+3.7*CO3)*QAVE/0.116/1440.0 
     PH=7.0 
     CALL PRICE(QAVE,0.0,0.0,52,RSST) 
     CALL INIT(RR,QQ,6) 
     RETURN 
     END 
     SUBROUTINE SRECIN(RR) 
     DIMENSION LIST(4) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     DATA LIST/'DETE','ALKA','END','REPL'/ 
     CALL INIT(QQ,RR,6) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
  51 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4),I 
   1 TD=VALUE(1) 
     GO TO 50 
   2 OHM=VALUE(1) 
     CO3=VALUE(2) 
     GO TO 50 
   3 CALL INIT(RR,QQ,6) 
     RETURN 
   4 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE SRECOT(RR) 
     COMMON/STARCO/STARDA(19) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TD    ),(QQ(2),OHM   ),(QQ(3),CO3   ), 
    &(QQ( 4),CO2R  ),(QQ( 5),VOL   ),(QQ(6),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,6) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 100 FORMAT('0SECOND STAGE RECARBONATION') 
     WRITE(6,100) 
     WRITE(6,101)TD 
     WRITE(6,102)OHM 
     WRITE(6,103)CO3 
     WRITE(6,104)CO2R 
     WRITE(6,105)VOL 
     WRITE(6,120)STARDA 
     RETURN 
 101 FORMAT('0DETENTION TIME                     ',E9.3,' MIN') 
 102 FORMAT(' HYDROXIDE ALKALINITY               ',E9.3,' MG/L') 
 103 FORMAT(' CARBONATE ALKALINITY               ',E9.3,' MG/L') 
 104 FORMAT(' CO2 REQUIREMENT                    ',E9.3,' CFM/MGD') 
 105 FORMAT(' VOLUME OF TANK                     ',E9.3,' MG') 
     END 
     SUBROUTINE SSIDIN(RR) 
     DIMENSION RR(1),LISTW(4) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     DATA LISTW/'FLOW','SOLI','VOLA','END '/ 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,4 
     IF(KTYPE.EQ.LISTW(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS NOT A VALID SLUDGE SIDE STREAM CARD') 
     GO TO 50 
  51 FORMAT(A4,A2,74A1) 
  53 IF(I.EQ.4)GO TO 4 
     RR(I)=VALUE(1) 
     GO TO 50 
   4 IF(RR(1).EQ.0.0)GO TO 1 
     RETURN 
   1 WRITE(6,2) 
   2 FORMAT('0',70X,'*** ZERO AVERAGE SIDE STREAM FLOW'/ 
    >' ',74X,'MAY CAUSE DIVISION BY ZERO') 
     RETURN 
     END 
     SUBROUTINE STEPEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FKI   ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     FK=FKI 
     QQQ=QAVE 
     NUM=NUM+2 
   1 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,0,RSPS,RSST) 
     CALL OMITEX(21) 
   2 AT=24.0*BOD5/FMLVS/FOM 
     NUM=NUM-2 
     FK=FK*THETA**(TEMP-20.0) 
     AT2=(BOD5-EBODS)/(FK*FMLVS*EBODS) 
     IF(AT2.GT.AT)AT=AT2 
     VOL=QAVE*AT/24.0 
     OREQ=AP*(BOD5-EBODS)*QAVE*8.34+BP*FMLVS*VOL*8.34 
     OBOD=OREQ/QAVE/(BOD5-EBODS)/8.34 
     IF(OBOD.LT.1.25)OREQ=1.25*BOD5*QAVE*8.34 
     IF(OBOD.GT.1.5)OREQ=1.5*BOD5*QAVE*8.34 
     SVOLAT=SOLIDS*VOLAT/100.0 
     SP=A*(BOD5-EBODS)*QAVE*8.34-B*FMLVS*VOL*8.34 
    <+FNDF/100.0*QAVE*SVOLAT*8.34+QAVE*(SOLIDS-SVOLAT)*8.34 
     SPBOD=SP/(BOD5-EBODS)/QAVE/8.34 
     IF(SPBOD.LE.0.6)SP=0.6*BOD5*QAVE*8.34 
     FNR=0.05*(BOD5-EBODS) 
     IF(TKN-FNR.LE.0.0)FNR=0.0 
     PO4R=0.01*(BOD5-EBODS) 
     IF(PO4-PO4R.LE.0.0)PO4R=0.0 
     KADD=LQADD(31,MODT) 
     CALL SECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBODS,UC,QAVE, 
    <BANKDA(KADD)) 
     NUM=NUM-2 
     SRR=FMLSS/(10000.0*UC-FMLSS)*100.0 
     SRT=VOL*FMLSS*8.34/SP 
     VL=QAVE*BOD5*8.34*7.48/VOL/1000.0 
     SOLIDS=ESS 
     VOLAT=FMLVS/FMLSS*100.0 
     BOD5=EBOD 
     BOD5S=EBODS 
     SETSO=0.0 
     OAG=0.0 
     COD=1.5*EBOD 
     CODS=1.5*EBODS 
     TKN=0.7*TKN 
     PO4=PO4*0.7 
     FNH3=TKN 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL AIREX(VOL,OREQ,ALPHA,BETA,STE,OTE,HP,HPR,AF,AFR,TYPE,TEMS) 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,VOL,HP,SSXSA,14.0,0,RSSA,RSST) 
     CALL USEREX(21) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,14.0,0, 
    >RSPD,RSPH,RSST) 
     CALL USEREX(21) 
   4 CALL INIT(RR,QQ,40) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE STEPIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(10) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     DATA LIST/'CONS','F/M ','MIXE','TEMP','EFFL','END ','MECH','DIFF', 
    >'ESTI','REPL'/ 
     DATA IA/'I'/ 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,10 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10),I 
   1 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     FNDF=VALUE(6) 
     FP=VALUE(7) 
     DO 20 I=1,7 
  20 ID(MODT,I)=IA 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,8)=IA 
     GO TO 50 
   3 FMLSS=VALUE(1) 
     FMLVS=VALUE(2) 
     ID(MODT,9)=IA 
     ID(MODT,10)=IA 
     GO TO 50 
   4 THETA=VALUE(1) 
     GO TO 50 
   5 EBODS=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,40) 
     RETURN 
   7 TYPE=0.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   8 TYPE=1.0 
     ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     AFR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,11)=IA 
     GO TO 50 
   9 SSXSA=VALUE(1) 
     COSTPD=VALUE(2) 
     COSTPH=VALUE(3) 
     COSTPS=VALUE(4) 
     GO TO 50 
  10 RSSA=VALUE(1) 
     RSPD=VALUE(2) 
     RSPH=VALUE(3) 
     RSPS=VALUE(4) 
     RSST=VALUE(5) 
     GO TO 50 
     END 
     SUBROUTINE STEPOT(RR,ID,MODT) 
     DIMENSION RR(1) 
     DIMENSION ID(3,1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),FK    ),(QQ(3),A     ), 
    &(QQ( 4),AP    ),(QQ( 5),B     ),(QQ( 6),BP    ),(QQ( 7),FOM   ), 
    &(QQ( 8),FMLSS ),(QQ( 9),FMLVS ),(QQ(10),THETA ),(QQ(11),EBODS ), 
    &(QQ(12),FNDF  ),(QQ(13),FP    ),(QQ(14),AT    ),(QQ(15),VOL   ), 
    &(QQ(16),OREQ  ),(QQ(17),SP    ),(QQ(18),FNR   ),(QQ(19),PO4R  ), 
    &(QQ(20),SRR   ),(QQ(21),EBODT ),(QQ(22),SRT   ),(QQ(23),VL    ), 
    &(QQ(24),ALPHA ),(QQ(25),BETA  ),(QQ(26),TYPE  ),(QQ(27),STE   ), 
    &(QQ(28),OTE   ),(QQ(29),HP    ),(QQ(30),AF    ),(QQ(31),HPR   ), 
    >(QQ(32),AFR),(QQ(33),SSXSA),(QQ(34),COSTPD),(QQ(35),COSTPH), 
    >(QQ(36),COSTPS) 
    >,(QQ(37),RSSA),(QQ(38),RSPD),(QQ(39),RSPH),(QQ(40),RSPS) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,40) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0STEP AERATION ACTIVATED SLUDGE') 
     WRITE(6,201)ID(MODT,1),FK 
 201 FORMAT('0',A1,' REACTION RATE CONSTANT            ',E9.3, 
    > ' L/MG-H') 
     WRITE(6,202)ID(MODT,2),A 
 202 FORMAT(' ',A1,' SLUDGE PRODUCED PER BOD REMOVED   ',E9.3) 
     WRITE(6,2041)ID(MODT,5),BP 
     WRITE(6,204)ID(MODT,3),AP 
 204 FORMAT(' ',A1,' O2 UTILIZED PER BOD REMOVED       ',E9.3) 
     WRITE(6,205)ID(MODT,4),B 
 205 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T38,E9.3, 
    >' /DAY') 
2041 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T38,E9.3, 
    >' /DAY') 
     WRITE(6,206)ID(MODT,6),FNDF 
 206 FORMAT(' ',A1,' INFLUENT NON-DEGRADABLE VSS       ',E9.3) 
     WRITE(6,207)ID(MODT,7),FP 
 207 FORMAT(' ',A1,' EFFLUENT DEGRADABLE VSS           ',E9.3) 
     WRITE(6,211)ID(MODT,8),FOM 
 211 FORMAT(' ',A1,' LB BOD/LB MLSS-DAY                ',E9.3) 
     WRITE(6,212)ID(MODT,9),FMLSS 
 212 FORMAT(' ',A1,' MIXED LIQUOR SS                   ',E9.3,' MG/L') 
     WRITE(6,213)ID(MODT,10),FMLVS 
 213 FORMAT(' ',A1,' MIXED LIQUOR VS                   ',E9.3,' MG/L') 
     WRITE(6,214)AT 
 214 FORMAT('   AERATION TIME                     ',E9.3,' HOURS') 
     WRITE(6,215)VOL 
 215 FORMAT('   VOLUME OF AERATION TANK           ',E9.3,' MG') 
     WRITE(6,216)OREQ 
 216 FORMAT('   OXYGEN REQUIRED                   ',E9.3,' LB/DAY') 
     WRITE(6,217)SP 
 217 FORMAT('   SLUDGE PRODUCED                   ',E9.3,' LB/DAY') 
     IF(FNR.EQ.0.0)GO TO 222 
     WRITE(6,218)FNR 
 218 FORMAT('   NITROGEN REQUIREMENT              ',E9.3,' MG/L') 
     GO TO 226 
 222 WRITE(6,224) 
 224 FORMAT(70X,'****NOTE-SYSTEM IS NITROGEN LIMITED ****') 
 226 IF(PO4R.EQ.0.0)GO TO 228 
     WRITE(6,219)PO4R 
 219 FORMAT('   PHOSPHOROUS REQUIREMENT           ',E9.3,' MG/L') 
     GO TO 232 
 228 WRITE(6,230) 
 230 FORMAT(70X,'****NOTE-SYSTEM IS PHOSPHOROUS LIMITED ****') 
 232 WRITE(6,220)SRR 
 220 FORMAT('   SLUDGE RECYCLE RATIO              ',E9.3,' PERCENT') 
     WRITE(6,122)SRT 
     WRITE(6,123)VL 
 122 FORMAT('   SOLIDS RETENTION TIME             ',E9.3,' DAYS') 
 123 FORMAT('   VOLUMETRIC LOADING                ',E9.3, 
    > ' LB BOD/TCFT') 
     CALL AIROT(TYPE,STE,OTE,HP,AF,ID(MODT,11)) 
 125 WRITE(6,121)STARDA 
   3 IF(TYPE.GT.0.0)GO TO 5 
     CALL MECHPR(4,QAVE,0.0,0.0,VOL,HP,SSXSA,14.0,1,RSSA,RSST) 
     GO TO 4 
   5 CALL DIFFPR(4,QAVE,0.0,0.0,VOL,AF,COSTPD,COSTPH,14.0,1, 
    >RSPD,RSPH,RSST) 
   4 CALL PUMPPR(1.0,QAVE,QMAX,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE THICEX(SVOLU,PSOLID,PVOLAT,RR) 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),Q     ),(QQ(3),CO    ), 
    &(QQ( 4),CU    ),(QQ( 5),FML   ),(QQ( 6),HL    ),(QQ( 7),DT    ), 
    &(QQ( 8),UNITS ),(QQ( 9),UI    ),(QQ(10),HO    ),(QQ(11),HI    ), 
    &(QQ(12),SAPT  ),(QQ(13),VOLUME),(QQ(14),DEPTH ),(QQ(15),VTS   ), 
    &(QQ(16),COSTES),(QQ(17),XVOLU),(QQ(18),RSTS) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     CALL INIT(QQ,RR,18) 
     CO=0.624*PSOLID 
     Q=SVOLU/1000000.0 
     IF(FML.NE.0.0)GO TO 1 
     CI=CO*HO/HI 
     UA=(1.0/CI-1.0/(CU*0.624))/UI 
     FML=-1.0/UA 
   1 CO=PSOLID 
     TSA=Q*CO/FML*8.34*10000.0 
     UNITS=1.0 
     SAPT=TSA/UNITS 
     IF(SAPT.LE.628.0)GO TO 4 
   5 UNITS=UNITS+1.0 
     SAPT=TSA/UNITS 
     IF(SAPT.GT.7850.0)GO TO 5 
   4 IF(SAPT.LT.314.0)SAPT=314.0 
     TSA=SAPT*UNITS 
     HL=Q/TSA*1000000.0 
     VOLUME=TSA*DEPTH 
     DT=VOLUME*7.48*24.0/Q/1000000.0 
   2 CALL THICPR(SAPT,UNITS,SVOLU,CO,DEPTH,COSTES,RSTS,RSST,0) 
     CALL USEREX(4) 
   3 VTS=(Q*CO/(CU/100.0)/1.05)*0.9*10000.0 
     SVOLU=VTS 
     XVOLU=SVOLU 
     PSOLID=CU 
     CALL INIT(RR,QQ,18) 
     RETURN 
     END 
     SUBROUTINE THICIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(11) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),Q     ),(QQ(3),CO    ), 
    &(QQ( 4),CU    ),(QQ( 5),FML   ),(QQ( 6),HL    ),(QQ( 7),DT    ), 
    &(QQ( 8),UNITS ),(QQ( 9),UI    ),(QQ(10),HO    ),(QQ(11),HI    ), 
    &(QQ(12),SAPT  ),(QQ(13),VOLUME),(QQ(14),DEPTH ),(QQ(15),VTS   ), 
    &(QQ(16),COSTES),(QQ(17),XVOLU),(QQ(18),RSTS) 
     DATA LIST/'UNDE','MASS','HYDR','DEPT','REPL','SETT','INIT', 
    >'INTE','END ','ESTI','XXXX'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,18) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,11 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
 100 FORMAT(A4,A2,74A1) 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11),I 
   1 CU=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FML=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 GO TO 50 
   4 DEPTH=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 RSTS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
   6 UI=VALUE(1) 
     FML=0.0 
     GO TO 50 
   7 HO=VALUE(1) 
     GO TO 50 
   8 HI=VALUE(1) 
     GO TO 50 
   9 CALL INIT(RR,QQ,18) 
     RETURN 
  10 COSTES=VALUE(1) 
     GO TO 50 
  11 GO TO 50 
     END 
     SUBROUTINE THICOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),Q     ),(QQ(3),CO    ), 
    &(QQ( 4),CU    ),(QQ( 5),FML   ),(QQ( 6),HL    ),(QQ( 7),DT    ), 
    &(QQ( 8),UNITS ),(QQ( 9),UI    ),(QQ(10),HO    ),(QQ(11),HI    ), 
    &(QQ(12),SAPT  ),(QQ(13),VOLUME),(QQ(14),DEPTH ),(QQ(15),VTS   ), 
    &(QQ(16),COSTES),(QQ(17),SVOLU),(QQ(18),RSTS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,18) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0','GRAVITY THICKENING') 
     WRITE(6,101)Q 
 101 FORMAT('0  AVERAGE SLUDGE FLOW              ',E9.3,' MGD') 
     WRITE(6,102)CO 
 102 FORMAT('   INITIAL CONCENTRATION            ',E9.3,' PERCENT') 
     WRITE(6,103)ID(MODT,1),CU 
 103 FORMAT(' ',A1,' THICKENED CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,104)ID(MODT,2),FML 
 104 FORMAT(' ',A1,' MASS LOADING                     ',E9.3, 
    >' LB/SQFT/DAY') 
     WRITE(6,105)HL 
 105 FORMAT('   HYDRAULIC LOADING                ',E9.3, 
    > ' GAL/DAY/SQFT') 
     IF(HL.LT.600.0)WRITE(6,301) 
 301 FORMAT(70X,' ****NOTE-RECIRCULATION REQUIRED TO PREVENT'/ 
    > 82X,' ANAEROBIC CONDITIONS') 
     IF(HL.GT.800.0)WRITE(6,302) 
 302 FORMAT(70X,' ****NOTE-EXCESSIVE HYDRAULIC LOADING RATE '/ 
    > 82X,'MAY CAUSE SOLIDS CARRYOVER') 
     WRITE(6,106)DT 
 106 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(DT.GT.6.0)WRITE(6,206) 
 206 FORMAT(70X,' ****NOTE-DETENTION TIME GREATER THAN SIX HOURS ') 
     WRITE(6,107)UNITS 
 107 FORMAT('   NUMBER OF UNITS                  ',E9.3) 
     WRITE(6,108)ID(MODT,4),DEPTH 
 108 FORMAT(' ',A1,' DEPTH                            ',E9.3,' FEET') 
     WRITE(6,109)VOLUME 
 109 FORMAT('   VOLUME                           ',E9.3,' CU FT') 
     WRITE(6,110)SAPT 
 110 FORMAT('   SURFACE AREA PER TANK            ',E9.3,' SQ FT') 
     WRITE(6,111)VTS 
 111 FORMAT('   VOLUME OF THICKENED SLUDGE       ',E9.3,' GAL/DAY') 
 130 WRITE(6,121)STARDA 
     CALL THICPR(SAPT,UNITS,SVOLU,CO,DEPTH,COSTES, 
    > RSTS,RSST,1) 
 121 FORMAT('0',19A4) 
     CALL INIT(RR,QQ,18) 
     RETURN 
     END 
     SUBROUTINE THICPR(SAPT,FN,QAVE,CO,SWD,XOSTES,RSTS,RSST,IQU) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,XMIN,XAVE,XMAX 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4) 
     IF(IQU.EQ.1)GO TO 678 
     COSTES=XOSTES 
     DIA=SQRT(4.0*SAPT/3.1416) 
     MD=DIA+0.999 
     DIA=MD 
     VEW=1.15*FN*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     TS=7.9+0.25*SWD 
     VCS=FN*0.825*(DIA+4.0)**2*TS/12.0 
     TW=7.0+0.5*SWD 
     VCWT=3.14*(SWD+1.5)*DIA*TW/12.0 
     VCB=100.0*FN**1.13 
     VCW=VCWT+VCB 
     DSTPD=QAVE*CO*8.34/100.0/2000.0 
     XHR=141.36*DSTPD**0.566 
     IF(DSTPD.GT.2.7.AND.DSTPD.LE.13.0)XHR=164.8*DSTPD**0.4093 
     IF(DSTPD.GT.13.0)XHR=91.08*DSTPD**0.6415 
     OHR=152.0*DSTPD**0.7066 
     IF(DSTPD.GT.2.7.AND.DSTPD.LE.13.0)OHR=184.16*DSTPD**0.5046 
     IF(DSTPD.GT.13.0)OHR=93.12*DSTPD**0.7704 
     FKWH=4500.0*DSTPD**0.301 
     IF(DSTPD.GT.50.0)FKWD=1463.6*DSTPD**0.5881 
     OMMP=1.0 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTRO=2.16*DIA**0.8515 
     IF(COSTES.EQ.0.0)COSTES=82500.0*FMSECI/491.6 
     COSTTM=COSTES*COSTRO/100.0 
     FIMH=2.04*DIA 
     CH=0.1*FIMH 
     PMINC=15.0 
     FIEC=FN*(COSTTM*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR) 
     CC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=(COSTE+COSTCW+COSTCS)*CF 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=FIEC*CF 
     CALL AMORT(PRIN,RSTS,RC2) 
     OMMC=CC*OMMP/100.0 
     NUM=NUM+1.0 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OHR 
     SUMMDA(NUM,3)=XHR 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=84.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     RETURN 
 678 IF(KCTL.EQ.1)CALL THICQU(SAPT,DIA,FN,VEW,SWD,TS,TW,VCW,VCS,DSTPD, 
    >XHR,OHR,FKWH) 
     RETURN 
     END 
     SUBROUTINE THICQU(SAPT,DIA,Z,VEW,SWD,TS,TW,VCW,VCS,DSTPD,FMMH,OMH, 
    >FKWH) 
     N=Z 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR GRAVITY THICKENING') 
     WRITE(6,2)SAPT 
2    FORMAT('0SURFACE AREA PER TANK',T45,E9.3,' SQ FT') 
     WRITE(6,3)DIA 
3    FORMAT(' DIAMETER TANK',T45,E9.3,' FEET') 
     WRITE(6,4)N 
4    FORMAT(' NO UNITS',T45,I9) 
     WRITE(6,5)VEW 
5    FORMAT(' EARTHWORK',T45,E9.3,' CU FT') 
     WRITE(6,6)SWD 
6    FORMAT(' SIDEWATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,7)TS 
7    FORMAT(' THICKNESS SLAB',T45,E9.3,' INCHES') 
     WRITE(6,8)TW 
8    FORMAT(' WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,9)VCW 
9    FORMAT(' WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,10)VCS 
10   FORMAT(' SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,11)DSTPD 
11   FORMAT(' DRY SOLIDS PRODUCED',T45,E9.3,' TON/DAY') 
     WRITE(6,12)FMMH 
12   FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,13)OMH 
13   FORMAT(' OPERATION MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,14)FKWH 
14   FORMAT(' ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE TITLE 
     COMMON/TITLCO/ITLE(44),NNT,KKKK,LLLL,NAMT(6,2) 
     WRITE(6,1)ITLE,NAMT(KKKK,1),NAMT(KKKK,2),LLLL,NNT 
   1 FORMAT('1',44A1,1X,2A4,I4,2X,'TRAIN NO',I4) 
     RETURN 
     END 
     SUBROUTINE TRICEX(RR,MODT) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     DIMENSION RR(1),SAST(13),NTST(13) 
     EQUIVALENCE (QQ(1),SPR),(QQ(2),R),(QQ(3),QO), 
    >(QQ( 4),AP    ),(QQ( 5),ITYP  ),(QQ( 6),XEBOD ),(QQ( 7),XUPFM ), 
    > (QQ( 8),XODAS ),(QQ( 9),FK    ),(QQ(10),Q1    ),(QQ(11),D     ), 
    > (QQ(12),NSG   ),(QQ(13),SA    ),(QQ(14),V     ),(QQ(15),DF    ), 
    > (QQ(16),QPUMP ),(QQ(17),HPUMP ),(QQ(18),SP    ),(QQ(19),SAD   ), 
    > (QQ(20),VD    ),(QQ(21),NTS   ),(QQ(22),N     ),(QQ(23),VN    ), 
    > (QQ(24),DIA   ),(QQ(25),NCP   ),(QQ(26),VCW   ),(QQ(27),VCS   ), 
    > (QQ(28),VEW   ),(QQ(29),FKWH  ),(QQ(30),OMH   ),(QQ(31),FMMH  ), 
    > (QQ(32),OMMP  ),(QQ(33),FLCB  ),(QQ(34),XOSTPS),(QQ(35),QOR) 
    >,(QQ(36),RSFM),(QQ(37),RSAS),(QQ(38),RSPS),(QQ(39),RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     DATA NTST/1,2,3,4,6,8,10,12,14,15,16,18,20/ 
     DATA SAST/2000.0,17700.,35400.,53100.,88500.,123900., 
    > 159300.,194700.,247800.,265500.,283200.,300900., 
    > 10.0E20/ 
     CALL INIT(QQ,RR,39) 
     EBOD=XEBOD 
     FK=1.035**(TEMP-20.0)*0.0022 
     FN=0.91-6.45/AP 
     QOR=QO 
     R=0.004*BOD5-0.60 
     IF(R.LT.0.0)R=0.00 
   2 Q1=QOR*(1.0+R) 
     IF(Q1.GE.0.50)GO TO 1 
     Q1=0.50 
     R=0.50/QOR-1.0 
     IF(R.LT.0.0)R=0.00 
   1 D=-ALOG((EBOD+EBOD*R)/(BOD5+EBOD*R))*Q1**FN/FK/AP 
     NSG=1 
     IF(D.LE.27.0)GO TO 3 
     IF(D.GT.60.0)GO TO 3 
     IF(D.LT.40.0)GO TO 4 
     NSG=2 
     GO TO 3 
   4 QOR=QOR*0.90 
     GO TO 2 
   3 IF(D.LT.8.0)D=8.0 
     SA=QAVE*10.0**6/1440.0/QOR 
     V=SA*D 
     DF=D/NSG 
     QP1=QMAX*FK 
     QP2=(1.0+R)*QAVE 
     QP3=SA*0.50*1440.0/10.0**6 
     QPUMP=QP1 
     IF(QP2.GT.QP1)QPUMP=QP2 
     IF(QP3.GT.QPUMP)QPUMP=QP3 
     OPUMP=QP1 
     IF(QP1.LT.QP3)OPUMP=QP3 
     HPUMP=1.50*DF 
     NPS=NSG 
     SP=8.34*QAVE*BOD5*SPR 
     XR=R 
     KADD=LQADD(33,MODT) 
     NUM=NUM+1 
     CALL XECOEX(FMLSS,QMAX,SP,WS,EBOD,ESS,FP,VOLAT,EBOD5,UC,QAVE, 
    <XR,BANKDA(KADD)) 
     TKN=TKN*0.7 
     PO4=PO4*0.7 
     FNH3=TKN 
     SOLIDS=ESS 
     VOLAT=80.0 
     BOD5=EBOD 
     BOD5S=0.5*EBOD 
     COD=1.5*BOD5 
     CODS=1.5*BOD5S 
     SETSO=0.0 
     PO4=0.7*PO4 
     ANO3=ANO3+0.3*TKN 
     TKN=0.7*TKN 
     FNH3=TKN 
     OAG=0.0 
     TOTAL=SVOLU+WS 
     TSS=(WS*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(WS*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     CALL PUMPPR(1.0,OPUMP,QPUMP,3,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(19) 
     NUM=NUM-3 
     ECF=1.0 
     IF(ECF.LT.1.00)ECF=1.00 
     SAD=SA*ECF 
     VD=V*ECF 
     DO 14 I=1,13 
     IF(SAST(I).GT.SAD)GO TO 5 
  14 CONTINUE 
     I=13 
   5 NTS=NTST(I) 
     N=NTS*NSG 
     VN=VD/N 
     DIA=1.128*SQRT(VN/DF) 
     VCWE=(D+3.00)*3.1416*DIA*0.5 
     NCP=0.00108*DIA**3.08+0.99 
     IF(DIA.GT.40.0)NCP=0.0739*DIA**1.935+0.99 
     VCWP=1.33333*NCP 
     FLCB=0.0119*N*DIA**2.963 
     IF(DIA.GT.40.0)FLCB=0.364*N*DIA**2.035 
     VCSF=0.524*DIA**2 
     VCWD=10.00*DIA 
     IF(DIA.GE.70.0)VCWD=17.0*DIA 
     VCWC=4.0*(D+5.0) 
     IF(DIA.GE.70.0)VCWC=16.0*(D+5.0) 
     VCWR=4.0*3.1416*DIA 
     VEWN=1.15*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     VCW=N*(VCWE+VCWP+VCWD+VCWC+VCWR) 
     VCS=N*VCSF 
     VEW=N*VEWN 
     FKWH=0.0 
     OMH=128.0*QAVE**0.301 
     IF(QAVE.GT.1.0)OMH=128.0*QAVE**0.6088 
     IF(QAVE.GT.10.0)OMH=68.0*QAVE**0.8861 
     FMMH=112.00*QAVE**0.243 
     IF(QAVE.GT.1.0)FMMH=112.0*QAVE**0.6021 
     IF(QAVE.GE.10.0)FMMH=80.0*QAVE**0.7066 
     OMMP=1.0 
     CF=1.25 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     CUPFM=XUPFM 
     IF(XUPFM.EQ.0.0)CUPFM=2.50*FMSECI/491.60 
     COSTFM=VD*CUPFM 
     CODAS=XODAS 
     IF(CODAS.EQ.0.0)CODAS=39000.0*FMSECI/491.6 
     CRIODA=0.367+0.01265*DIA 
     CODA=CODAS*CRIODA 
     FICODA=N*CODA*1.32 
     VPCB=0.5*0.667*FLCB 
     CPCB=5.00*VPCB/27.0*UPICW 
     CC=CF*(COSTE+COSTCW+COSTCS+COSTFM+FICODA+CPCB) 
     PRIN=CF*(COSTE+COSTCW+COSTCS+CPCB) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTFM 
     CALL AMORT(PRIN,RSFM,RC2) 
     PRIN=CF*FICODA 
     CALL AMORT(PRIN,RSAS,RC3) 
     OMMC=OMMP/100.0*(COSTFM+FICODA) 
     CALL INIT(RR,QQ,39) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=12.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(19) 
     NUM=NUM+2 
     RETURN 
     END 
     SUBROUTINE TRICIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(9) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),SPR),(QQ(2),R),(QQ(3),QO), 
    >(QQ( 4),AP    ),(QQ( 5),ITYP  ),(QQ( 6),EBOD  ),(QQ( 7),XUPFM ), 
    > (QQ( 8),XODAS ),(QQ( 9),FK    ),(QQ(10),Q1    ),(QQ(11),D     ), 
    > (QQ(12),NSG   ),(QQ(13),SA    ),(QQ(14),V     ),(QQ(15),DF    ), 
    > (QQ(16),QPUMP ),(QQ(17),HPUMP ),(QQ(18),SP    ),(QQ(19),SAD   ), 
    > (QQ(20),VD    ),(QQ(21),NTS   ),(QQ(22),N     ),(QQ(23),VN    ), 
    > (QQ(24),DIA   ),(QQ(25),NCP   ),(QQ(26),VCW   ),(QQ(27),VCS   ), 
    > (QQ(28),VEW   ),(QQ(29),FKWH  ),(QQ(30),OMH   ),(QQ(31),FMMH  ), 
    > (QQ(32),OMMP  ),(QQ(33),FLCB  ),(QQ(34),XOSTPS),(QQ(35),QOR) 
    >,(QQ(36),RSFM),(QQ(37),RSAS),(QQ(38),RSPS),(QQ(39),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'SOLI','HYDR','REPL','XXXX','XXXX','SURF','ESTI','END ', 
    > 'EFFL'/ 
     CALL INIT(QQ,RR,39) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 SPR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 QO=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 RSFM=VALUE(1) 
     RSAS=VALUE(2) 
     RSPS=VALUE(3) 
     RSST=VALUE(4) 
     GO TO 50 
   4 GO TO 50 
   5 GO TO 50 
   6 ITYP=3 
     AP=VALUE(1) 
     IF(AP.LE.0.0)AP=25.0 
     ID(MODT,3)=IA 
     GO TO 50 
   7 XUPFM=VALUE(1) 
     XODAS=VALUE(2) 
     XOSTPS=VALUE(3) 
     GO TO 50 
   8 CALL INIT(RR,QQ,39) 
     RETURN 
   9 EBOD=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE TRICOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),SPR),(QQ(2),R),(QQ(3),QO), 
    >(QQ( 4),AP    ),(QQ( 5),ITYP  ),(QQ( 6),EBOD  ),(QQ( 7),XUPFM ), 
    > (QQ( 8),XODAS ),(QQ( 9),FK    ),(QQ(10),Q1    ),(QQ(11),D     ), 
    > (QQ(12),NSG   ),(QQ(13),SA    ),(QQ(14),V     ),(QQ(15),DF    ), 
    > (QQ(16),QPUMP ),(QQ(17),HPUMP ),(QQ(18),SP    ),(QQ(19),SAD   ), 
    > (QQ(20),VD    ),(QQ(21),NTS   ),(QQ(22),N     ),(QQ(23),VN    ), 
    > (QQ(24),DIA   ),(QQ(25),NCP   ),(QQ(26),VCW   ),(QQ(27),VCS   ), 
    > (QQ(28),VEW   ),(QQ(29),FKWH  ),(QQ(30),OMH   ),(QQ(31),FMMH  ), 
    > (QQ(32),OMMP  ),(QQ(33),FLCB  ),(QQ(34),XOSTPS),(QQ(35),QOR) 
    >,(QQ(36),RSFM),(QQ(37),RSAS),(QQ(38),RSPS),(QQ(39),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     CALL INIT(QQ,RR,39) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0TRICKLING FILTRATION') 
 101 FORMAT('0',A1,' SOLID PRODUCTION RATE',T45,E9.3,' LB/LB BOD5') 
 102 FORMAT(' ',A1,' HYDRAULIC  LOADING RATE',T45,E9.3,' GPM/SQFT') 
 103 FORMAT('   ADJUSTED HYDRAULIC LOADING RATE',T45,E9.3,' GPM/SQFT') 
 104 FORMAT(' ',A1,' RASCHIG RINGS MEDIA (1 1/2 INCH)') 
 105 FORMAT(' ',A1,' SLAG MEDIA (2 1/2 INCH)') 
 106 FORMAT(' ',A1,' GRAVEL MEDIA (1 TO 3 INCH)') 
 107 FORMAT(' ',A1,' SURFPAC MEDIA') 
 108 FORMAT(' ',A1,' SPECIFIC SURFACE AREA',T45,E9.3,' SQFT/CUFT') 
 109 FORMAT('   REACTION RATE CONSTANT',T45,E9.3) 
 110 FORMAT('   RECIRCULATION RATIO',T45,E9.3) 
 111 FORMAT('   TOTAL HYDRAULIC LOADING RATE',T45,E9.3,' GPM/SQFT') 
 112 FORMAT('   DEPTH OF FILTER TOWER',T45,E9.3,' FEET') 
 113 FORMAT('   NUMBER OF STAGES',T45,I9) 
 114 FORMAT('   SURFACE AREA OF FILTER',T45,E9.3,' SQ FT') 
 115 FORMAT('   MEDIA VOLUME',T45,E9.3,' CU FT') 
     WRITE(6,101)ID(MODT,1),SPR 
     WRITE(6,102)ID(MODT,2),QO 
     IF(QO.NE.QOR)WRITE(6,103)QOR 
     IF(ITYP.EQ.0)WRITE(6,104)ID(MODT,3) 
     IF(ITYP.EQ.1)WRITE(6,105)ID(MODT,3) 
     IF(ITYP.EQ.2)WRITE(6,106)ID(MODT,3) 
     IF(ITYP.EQ.3)WRITE(6,107)ID(MODT,3) 
     WRITE(6,108)ID(MODT,3),AP 
     WRITE(6,109)FK 
     WRITE(6,110)R 
     WRITE(6,111)Q1 
     WRITE(6,112)DF 
     WRITE(6,113)NSG 
     WRITE(6,114)SA 
     WRITE(6,115)V 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR TRICKLING FILTER') 
     WRITE(6,2)N 
2    FORMAT('0  NUMBER OF TOWERS',T45,I9) 
     WRITE(6,3)VN 
3    FORMAT('   VOLUME PER FILTER TOWER',T45,E9.3,' CU FT') 
     WRITE(6,5)DIA 
5    FORMAT('   DIAMETER OF FILTER TOWER',T45,E9.3,' FEET') 
     WRITE(6,6)NCP 
6    FORMAT('   TOTAL NUMBER OF POSTS',T45,I9) 
     WRITE(6,7)FLCB 
7    FORMAT('   TOTAL LENGTH OF PRECAST BEAMS',T45,E9.3,' FEET') 
     WRITE(6,8)VCW 
8    FORMAT('   TOTAL REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,9)VCS 
9    FORMAT('   TOTAL REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
     WRITE(6,10)VEW 
10   FORMAT('   TOTAL EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,13)OMH 
13   FORMAT('   OPERATIONAL MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,14)FMMH 
14   FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
     CALL PUMPPR(1.0,QPUMP,QPUMP,3,XOSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE UNITIN(COSTSB,ID) 
     DIMENSION ID(3,1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/STESPE/FOUN,EFPU,EFOT,EFDI,FMOB,SITE,ELEC,FIAC,FMYRP, 
    >PUMP,FLABM,GRAV 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/PERCCO/FLAND,PMISC,PADMI,P201,PINSP,PCONT,PPROF,PTECH 
    >,IFOUN,IEFPU,IEFDI,IEFOT,XL,IMOB,ISITE,IELEC,IIAC,IMYRP,IPUMP, 
    > ILABM,IGRAV 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/EPACCI/EPACI,DIVSOR 
     DIMENSION LIST(40),COSTSB(6) 
     DATA LIST/'BUIL','EXCA','WALL','SLAB','MARS','CRAN','SMAL', 
    > 'CANO','LABO','OPER','ELEC','CHEM','ENGI','HAND','PIPE', 
    > 'EIGH','REPL','END ','LARG','BLOW', 
    >'LAND','MISC','ADMI','201 ','INSP','CONT','PROF','TECH', 
    >'SPEC','PUMP','OCEA','DIFF','MOBI','CLEA','SITE','INST','YARD', 
    > 'RAW ','LAB ','EFFL'/ 
     DATA IA/'I'/ 
     DO 49 I=1,3 
  49 COSTSB(I)=0.0 
     DO 48 I=4,6 
  48 COSTSB(I)=40.0 
     UPILL=0.0 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,40 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID UNIT PRICE CARD - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20, 
    >21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40),I 
   1 UPIBC=VALUE(1) 
     ID(1,1)=IA 
     GO TO 50 
   2 UPIEX=VALUE(1) 
     ID(1,2)=IA 
     GO TO 50 
   3 UPICW=VALUE(1) 
     ID(1,3)=IA 
     GO TO 50 
   4 UPICS=VALUE(1) 
     ID(1,4)=IA 
     GO TO 50 
   5 FMSECI=VALUE(1) 
     ID(1,5)=IA 
     GO TO 50 
   6 UPICR=VALUE(1) 
     ID(1,6)=IA 
     GO TO 50 
   7 EPACI=VALUE(1) 
     ID(1,7)=IA 
     DIVSOR=121.0 
     GO TO 50 
   8 UPIR=VALUE(1) 
     ID(1,8)=IA 
     GO TO 50 
   9 FLABRI=VALUE(1) 
     ID(1,9)=IA 
     GO TO 50 
  10 SALOP=VALUE(1) 
     ID(1,10)=IA 
     GO TO 50 
  11 UPIPC=VALUE(1) 
     ID(1,11)=IA 
     GO TO 50 
  12 DO 60 J=1,4 
  60 CHEM(J)=VALUE(J) 
     ID(1,12)=IA 
     GO TO 50 
  13 ENRCCI=VALUE(1) 
     ID(1,13)=IA 
     GO TO 50 
  14 UPIHR=VALUE(1) 
     ID(1,14)=IA 
     GO TO 50 
  15 CEPCIP=VALUE(1) 
     FLABII=VALUE(2) 
     ID(1,15)=IA 
     ID(1,16)=IA 
     GO TO 50 
  16 CCIPS=VALUE(1) 
     CCRS=VALUE(2) 
     COTS=VALUE(3) 
     CCPUS=VALUE(4) 
     ID(1,17)=IA 
     ID(1,18)=IA 
     ID(1,19)=IA 
     ID(1,20)=IA 
     GO TO 50 
  17 DO 217 J=1,3 
 217 COSTSB(J+3)=VALUE(J) 
     GO TO 50 
  18 XEPACI=EPACI 
     IF(CCIPS.EQ.0.0)CCIPS=7.41*CEPCIP/241.0 
     IF(CCRS.EQ.0.0)CCRS=70.88*CEPCIP/241.0 
     IF(COTS.EQ.0.0)COTS=104.90*CEPCIP/241.0 
     IF(CCPUS.EQ.0.0)CCPUS=1099.0*CEPCIP/241.0 
     RETURN 
  19 EPACI=VALUE(1) 
     ID(1,7)=IA 
     DIVSOR=132.0 
     GO TO 50 
  20 DO 200 I=1,3 
 200 COSTSB(I)=VALUE(I) 
     GO TO 50 
  21 FLAND=VALUE(1) 
     GO TO 50 
  22 PMISC=VALUE(1) 
     GO TO 50 
  23 PADMI=VALUE(1) 
     GO TO 50 
  24 P201=VALUE(1) 
     GO TO 50 
  25 PINSP=VALUE(1) 
     GO TO 50 
  26 PCONT=VALUE(1) 
     GO TO 50 
  27 PPROF=VALUE(1) 
     GO TO 50 
  28 PTECH=VALUE(1) 
     GO TO 50 
  29 IFOUN=1 
     FOUN=VALUE(1) 
     GO TO 50 
  30 IEFPU=1 
     EFPU=VALUE(1) 
     GO TO  50 
  31 IGRAV=2 
     GRAV=VALUE(1) 
     GO TO 50 
  32 IEFDI=1 
     EFDI=VALUE(1) 
     GO TO 50 
  33 IMOB=1 
     FMOB=VALUE(1) 
     GO TO 50 
  34 ISITE=1 
     SITE=VALUE(1) 
     GO TO 50 
  35 IELEC=1 
     ELEC=VALUE(1) 
     GO TO 50 
  36 IIAC=1 
     FIAC=VALUE(1) 
     GO TO 50 
  37 IMYRP=1 
     FMYRP=VALUE(1) 
     GO TO 50 
  38 IPUMP=1 
     PUMP=VALUE(1) 
     GO TO 50 
  39 ILABM=1 
     FLABM=VALUE(1) 
     GO TO 50 
  40 IGRAV=1 
     GRAV=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE USEREX(NO) 
     COMMON/USERCO/NOUSER,USERDA(30,9),MODT 
     COMMON/COSTS/CAPCOS,OPMCOS,AMRCOS,RATE,NOPER,WAGE 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     IF(NOUSER.EQ.0)RETURN 
     DO 1 I=1,NOUSER 
     MODNO=USERDA(I,1) 
     ITYP=USERDA(I,9) 
     IF(ITYP.NE.NO.OR.MODNO.NE.MODT)GO TO 1 
     IF(USERDA(I,2).EQ.-1)GO TO 3 
     SUMMDA(NUM,1)=USERDA(I,2) 
     IF(USERDA(I,8).LE.0.0)USERDA(I,8)=NOPER 
     CALL AMORT(USERDA(I,2),USERDA(I,8),SUMMDA(NUM,5)) 
   3 IF(USERDA(I,3).NE.-1)SUMMDA(NUM,2)=USERDA(I,3) 
     IF(USERDA(I,4).NE.-1)SUMMDA(NUM,3)=USERDA(I,4) 
     IF(USERDA(I,5).NE.-1)SUMMDA(NUM,4)=USERDA(I,5)/UPIPC 
     IF(USERDA(I,5).NE.-1)SUMMDA(NUM,18)=USERDA(I,5) 
     IF(USERDA(I,6).NE.-1)SUMMDA(NUM,6)=USERDA(I,6) 
     IF(USERDA(I,7).EQ.-1)GO TO 2 
     SUMMDA(NUM,8)=USERDA(I,7) 
     DO 4 J=10,17 
   4 SUMMDA(NUM,8)=0.0 
     GO TO 2 
   1 CONTINUE 
   2 RETURN 
     END 
     SUBROUTINE USERIN 
     DIMENSION LIST(73) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/USERCO/NOUSER,USERDA(30,9),MODX 
     DATA LEND/'END'/ 
     DATA LIST/'AIR ','AERO','ANAE','GRAV','VACU','CENT','DRYI', 
    > 'EQUA','FLOT','FILT','MICR','CARB','COUN','CROS','CATI','ANIO', 
    > 'NEUT','CHLO','TRIC','COMP','STEP','PLUG','HIGH','PURE','EXTE', 
    > 'CONT','LAGO','AERA','CLAR','OXID','NITR','XXXX','PRIM','GRIT', 
    > 'SCRE','SLUD','XXXX','A SE','N SE','T SE','DENI','XXXX', 
    > 'XXXX','PUMP','DUMM','POST','RBC ','RECA','FLOC','L PR', 
    > 'FIRS','SECO','R SE','OVER','RAPI','SLOW','SEPT','ACTI','INTE', 
    > 'P SE','O SE','HAUL','MULT','FLUI','FLTR','BELT','WET ', 
    >'COAG','D SE','ATTA','N RB','N TR','RAW '/ 
   1 FORMAT(A4,A2,74A1) 
 100 READ(5,1)IPROC,IXXX,KLM 
     WRITE(6,951)IPROC,IXXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     IF(IPROC.EQ.LEND)RETURN 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 2 I=1,73 
     IF(IPROC.EQ.LIST(I))GO TO 4 
   2 CONTINUE 
     WRITE(6,3)IPROC 
   3 FORMAT(' ',A4,2X,' IS INVALID COST CARD - CARD IGNORED') 
     GO TO 100 
   4 MODT=VALUE(1)+1.001 
     IF(MODT.LT.1.OR.MODT.GT.3)GO TO 6 
     NOUSER=NOUSER+1 
     USERDA(NOUSER,1)=MODT 
     DO 5 K=2,8 
   5 USERDA(NOUSER,K)=VALUE(K) 
     USERDA(NOUSER,9)=I 
     GO TO 100 
   6 WRITE(6,7)MODT 
   7 FORMAT(' MOD NUMBER OF ',I3,' IS INCORRECT - CARD IGNORED') 
     GO TO 100 
     END 
     SUBROUTINE VACUEX(SVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),KHEM  ),(QQ(3),XX  ), 
    &(QQ( 4),XXX  ),(QQ( 5),RSSF  ),(QQ( 6),T     ),(QQ( 7),FMU   ), 
    &(QQ( 8),CD    ),(QQ( 9),DPW   ),(QQ(10),HPD   ),(QQ(11),UNITS ), 
    &(QQ(12),FLR   ),(QQ(13),TFA   ),(QQ(14),CR    ),(QQ(15),APF   ), 
    &(QQ(16),CI    ),(QQ(17),COSTSF),(QQ(18),V) 
     CALL INIT(QQ,RR,18) 
     CI=100.0-PSOLID 
     V=SVOLU 
   1 TFA=V*PSOLID*8.34*7.0/(FLR*100.0*HPD*DPW)*(1.0+CD/100.0) 
     CR=CD/100.0*V*7.0*8.34*PSOLID/(HPD*DPW*100.0) 
     CR=CR*1.05 
   3 CALL VACUPR(TFA,QAVE,V,CI,COSTSF,0,UNITS,CR,KHEM,DPW,HPD, 
    >CD,DS,RSSF,RSST) 
     CALL USEREX(5) 
   4 APF=TFA/UNITS 
     PVOLAT=SVOLU*PSOLID*PVOLAT/10000.0/DS 
     SVOLU=DS/0.69/8.34*0.9 
     PSOLID=31.0 
     CALL INIT(RR,QQ,18) 
     RETURN 
     END 
     SUBROUTINE VACUIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(13) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),KHEM  ),(QQ(3),XX  ), 
    &(QQ( 4),XXX  ),(QQ( 5),RSSF  ),(QQ( 6),T     ),(QQ( 7),FMU   ), 
    &(QQ( 8),CD    ),(QQ( 9),DPW   ),(QQ(10),HPD   ),(QQ(11),UNITS ), 
    &(QQ(12),FLR   ),(QQ(13),TFA   ),(QQ(14),CR    ),(QQ(15),APF   ), 
    &(QQ(16),CI    ),(QQ(17),COSTSF),(QQ(18),V) 
     DATA LIST/'REPL','XXXX','XXXX','XXXX','LIME','IRON','POLY','DAYS', 
    >'HOUR','LOAD','XXXX','END ','ESTI'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,18) 
  50 READ(5,100)KTYPE,KLM 
     WRITE(6,951)KTYPE,KLM 
 951 FORMAT(' ',A4,2X,74A1) 
 100 FORMAT(A4,2X,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13),I 
   1 RSSF=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
   2 GO TO 50 
   3 GO TO 50 
   4 GO TO 50 
   5 CD=VALUE(1) 
     ID(MODT,4)=IA 
     KHEM=0 
     GO TO 50 
   6 CD=VALUE(1) 
     ID(MODT,4)=IA 
     KHEM=2 
     GO TO 50 
   7 CD=VALUE(1) 
     ID(MODT,4)=IA 
     KHEM=3 
     GO TO 50 
   8 DPW=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   9 HPD=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
  10 FLR=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
  11 GO TO 50 
  12 CALL INIT(RR,QQ,18) 
     RETURN 
  13 COSTSF=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE VACUOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),KHEM  ),(QQ(3),XX  ), 
    &(QQ( 4),XXX  ),(QQ( 5),RSSF  ),(QQ( 6),T     ),(QQ( 7),FMU   ), 
    &(QQ( 8),CD    ),(QQ( 9),DPW   ),(QQ(10),HPD   ),(QQ(11),UNITS ), 
    &(QQ(12),FLR   ),(QQ(13),TFA   ),(QQ(14),CR    ),(QQ(15),APF   ), 
    &(QQ(16),CI    ),(QQ(17),COSTSF),(QQ(18),V) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,18) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0VACUUM FILTRATION') 
     WRITE(6,201)ID(MODT,7),FLR 
 201 FORMAT('0',A1,' LOADING RATE                     ',E9.3, 
    > ' LB/SQFT/HR') 
     WRITE(6,202)TFA 
 202 FORMAT('   TOTAL FILTER AREA                ',E9.3,' SQ FT') 
     WRITE(6,203)CR 
 203 FORMAT('   CHEMICAL REQUIREMENTS            ',E9.3,' LBS/HR') 
     WRITE(6,208)ID(MODT,4),CD 
 208 FORMAT(' ',A1,' CHEMICAL DOSE                    ',E9.3, 
    > ' PERCENT') 
     IF(KHEM.EQ.0)WRITE(6,100)ID(MODT,4) 
 100 FORMAT(' ',A1,' LIME') 
     IF(KHEM.EQ.2)WRITE(6,101)ID(MODT,4) 
 101 FORMAT(' ',A1,' IRON SALTS') 
     IF(KHEM.EQ.3)WRITE(6,102)ID(MODT,4) 
 102 FORMAT(' ',A1,' POLYMER') 
     WRITE(6,204)CI 
 204 FORMAT('   INITIAL MOISTURE CONTENT         ',E9.3,' PERCENT') 
     WRITE(6,210)ID(MODT,6),HPD 
 210 FORMAT(' ',A1,' HOURS OPERATION PER DAY          ',E9.3,' HOURS') 
     WRITE(6,211)ID(MODT,5),DPW 
 211 FORMAT(' ',A1,' DAYS OPERATION PER WEEK          ',E9.3,' DAYS') 
     WRITE(6,212)APF 
 212 FORMAT('   AREA PER FILTER                  ',E9.3,' SQ FT') 
     WRITE(6,213)UNITS 
 213 FORMAT('   NUMBER OF UNITS                  ',E9.3,' UNITS') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     CALL VACUPR(TFA,QAVE,V,CI,COSTSF,1,UNITS, 
    >CR,KHEM,DPW,HPD,CD,DS,RSSF,RSST) 
     RETURN 
     END 
     SUBROUTINE VACUPR(TFA,QAVE,V,CI,XOSTSF,IQU,UNITS,CR,KHEM, 
    > DPW,HPD,CD,DS,RSSF,RSST) 
     DIMENSION FAA(14) 
     DATA FAA/60.0,85.0,100.0,125.0,150.0,200.0,250.0,300.0,360.0, 
    >430.0,500.0,575.0,675.0,750.0/ 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4) 
     IF(IQU.NE.0)GO TO 678 
     COSTSF=XOSTSF 
     ECF=1.0 
     ATFA=TFA*ECF 
     NF=ATFA/750.0+0.99 
     IF(NF.LT.1)NF=1 
   3 AF=ATFA/NF 
     DO 1 I=1,14 
     IF(FAA(I).GE.AF)GO TO 2 
   1 CONTINUE 
     NF=NF+1 
     GO TO 3 
   2 FAS=FAA(I) 
   4 AB=(190.0+1.2*FAS)*NF 
     DS=V*(100.0-CI)*8.34/100.0/2000.0*(1.0+CD/100.0) 
     OHR=520.0 
     IF(DS.GT.0.09)OHR=1760.0*DS**0.504 
     IF(DS.GT.9.0)OHR=1200.0*DS**0.734 
     XHR=64.0 
     IF(DS.GT.0.09)XHR=240.0*DS**0.548 
     IF(DS.GT.9.0)XHR=136.0*DS**0.808 
     FKWH=28000.0*DS**0.933 
     OMMP=5.0 
     COSTR=52.0+0.16*FAS 
     IF(COSTSF.EQ.0.0)COSTSF=150000.0*FMSECI/491.6 
     COSTF=COSTSF*COSTR*NF/100.0 
     FIL=(544.0+0.32*FAS)*NF 
     IF(FAS.GT.400.0)FIL=(476.0+0.48*FAS)*NF 
     FICOST=FIL*FLABRI 
     OICOST=0.6*COSTF 
     FIEC=COSTF+FICOST+OICOST 
     COSTB=AB*UPIBC 
     CC=FIEC+COSTB 
     CALL AMORT(COSTB,RSST,RC1) 
     CALL AMORT(FIEC,RSSF,RC2) 
     OMMC=FIEC*OMMP/100.0 
     XCHEM=CR*HPD*DPW*52.0 
     MHEM=KHEM+10 
     NUM=NUM+1 
     SUMMDA(NUM,1)=CC 
     SUMMDA(NUM,2)=OHR 
     SUMMDA(NUM,3)=XHR 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=85.0 
     SUMMDA(NUM,MHEM)=CR*HPD 
     SUMMDA(NUM,MHEM+4)=XCHEM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     UNITS=NF 
     RETURN 
 678 IF(KCTL.NE.0)CALL VACUQU(ATFA,NF,AF,FAS,AB,V,CI,DS,OHR, 
    >XHR,FKWH) 
     RETURN 
     END 
     SUBROUTINE VACUQU(AFTA,NF,AF,FAS,AB,V,CI,DS,OMH,FMMH,FKWH) 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR VACUUM FILTRATION') 
     WRITE(6,2)AFTA 
2    FORMAT('0ACTUAL TOTAL FILTER AREA',T45,E9.3,' SQ FT') 
     WRITE(6,4)NF 
4    FORMAT(' NUMBER OF FILTERS',T45,I9) 
     WRITE(6,5)AF 
5    FORMAT(' CALCULATED AREA FOR SINGLE FILTER',T45,E9.3,' SQ FT') 
     WRITE(6,6)FAS 
6    FORMAT(' AREA OF THE COMMERCIAL UNIT SELECTED',T45,E9.3,' SQ FT') 
     WRITE(6,7)AB 
7    FORMAT(' AREA OF BUILDING',T45,E9.3,' SQ FT') 
     WRITE(6,8)V 
8    FORMAT(' VOLUME OF SLUDGE',T45,E9.3,' GPD') 
     WRITE(6,9)CI 
9    FORMAT(' INITIAL MOISTURE CONTENT OF SLUDGE',T45,E9.3,' PERCENT') 
     WRITE(6,10)DS 
10   FORMAT(' DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,11)OMH 
11   FORMAT(' OPERATION MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,12)FMMH 
12   FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,13)FKWH 
13   FORMAT(' ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     RETURN 
     END 
     SUBROUTINE WASTIN(LITTLE) 
     REAL LIQUDA 
     DIMENSION LISTW(22) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/LIQUID/LIQUDA(21) 
     DATA LISTW/'MINI','AVER','MAXI','TEMP','SUSP','VOLA','BOD5', 
    >'SBOD','COD ','SCOD','PH  ','CATI','ANIO','TKN ','PO4 ', 
    >'NH3 ','SETT','OIL ','NO2 ','NO3 ','DESI','END'/ 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,22 
     IF(KTYPE.EQ.LISTW(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS NOT A VALID WASTE SPECIFICATION CARD') 
     GO TO 50 
  51 FORMAT(A4,A2,74A1) 
  53 IF(I.GE.21)GO TO 55 
     LIQUDA(I)=VALUE(1) 
     IF(I.EQ.2)LIQUDA(22)=VALUE(2) 
     IF(I.NE.4)GO TO 50 
     LIQUDA(21)=VALUE(1) 
     LIQUDA(4)=VALUE(2) 
     IF(VALUE(2).EQ.0.0)LIQUDA(21)=VALUE(1) 
     GO TO 50 
  55 IF(LIQUDA(2).LE.0.0)GO TO 1111 
     IF(LIQUDA(3).EQ.0.0.OR.LIQUDA(3).LT.LIQUDA(2))LIQUDA(3)=LIQUDA(2) 
 DISCLAIMER FOR DESIGN 
     IF(LIQUDA(2).LE.0.5.AND.LITTLE.EQ.0)WRITE(6,100)LIQUDA(2) 
     IF(LIQUDA(2).GT.0.50.AND.LITTLE.EQ.1)WRITE(6,500)LIQUDA(2) 
 100 FORMAT('1',//////////////////////,52X,'**** NOTE ****'// 
    <40X,'THE SPECIFIED AVE. FLOW OF',F7.4,' MGD IS BELOW THE DESIGN'/, 
    <40X,'LIMITS OF LARGE CAPDET.'/ 
    <40X,'IT IS RECOMMENDED THAT SMALL CAPDET  BE INVESTIGATED.') 
 500 FORMAT('1',//////////////////////,52X,'**** NOTE ****'// 
    <40X,'THE SPECIFIED AVE. FLOW OF',F7.4,' MGD IS ABOVE THE DESIGN'/, 
    <40X,'LIMITS OF SMALL CAPDET.'/ 
    <40X,'IT IS RECOMMENDED THAT LARGE CAPDET  BE INVESTIGATED.') 
     IF(LIQUDA(2).GE.500.0)WRITE(6,1010)LIQUDA(2) 
     IF(LIQUDA(1).GT.LIQUDA(2).OR.LIQUDA(1).LE.0.0)LIQUDA(1)=LIQUDA(2) 
     IF(LIQUDA(11).EQ.0.0)WRITE(6,200) 
 200 FORMAT(/////,45X,'**** PH INPUT MISSING-SET TO 7.0 ****') 
     IF(LIQUDA(11).EQ.0.0)LIQUDA(11)=7.0 
     IF(LIQUDA(4).LE.0.0)WRITE(6,300) 
 300 FORMAT(/////,45X,'**** TEMP. INPUT MISSING-SET TO 20.0 C ****') 
     IF(LIQUDA(4).LE.0.0)LIQUDA(4)=20.0 
     IF(LIQUDA(21).LE.0.0)LIQUDA(21)=20.0 
1010 FORMAT('1',//////////////////////,52X,'**** NOTE ****'// 
    <40X,'THE SPECIFIED AVE. FLOW OF',F7.4,' MGD IS ABOVE THE DESIGN'/, 
    <40X,'AND COST DATA OF CAPDET. SOLUTIONS MAY BE INACCURATE.') 
1112 FORMAT(/////////,50X,'AVE. FLOW NOT SPECIFIED IN WASTE', 
    <' CHARACTERISTIC LIST ') 
     IF(LIQUDA(7).LE.0.0)WRITE(6,400) 
 400 FORMAT('1',//////////////////////,52X,'****NOTE****'/, 
    <40X,' BOD5 INPUT IS MISSING, THIS COULD HAVE MAJOR IMPACT'/, 
    <40X,' ON BIOLOGICAL TREATMENT PROCESSES.') 
     IF(LIQUDA(22).EQ.0.0)LIQUDA(22)=LIQUDA(2) 
     RETURN 
1111 WRITE(6,1112) 
     STOP 
     END 
     SUBROUTINE WASTOT 
     COMMON/SSLUCO/SSLUDA(3) 
     COMMON/PSLUCO/PSLUDA(3) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3,TEMS 
 100 FORMAT(///' ',23X,'LIQUID CHARACTERISTICS'/ 
    <' FLOW      (MGD)     SOLIDS    (MG/L)',11X,'(MG/L)',7X,'(MG/L)'/ 
    <' MAXIMUM',F9.4,4X,'SUSPENDED',F8.2,4X,'BOD5',F9.2,4X,'TKN',F6.2/ 
    <' AVERAGE',F9.4,4X,'VOLATILE',F9.2,' %  ','BOD5S',F8.2,4X,'NH3', 
    <F6.2/ 
    <' MINIMUM',F9.4,4X,'SETTLEABLE',F7.2,4X,'COD',F10.2,4X,'NO2',F6.2/ 
    <' ',41X,'CODS',F9.2,4X,'NO3',F6.2/ 
    <' TEMP',1X,'(W)',F6.1,' C    OIL & GREASE',F7.2,'  PO4',F10.2/ 
    <' TEMP (S)',F6.1,' C',4X,'CATIONS',F12.2/ 
    <' ','PH',1X,F12.1,5X,'ANIONS',F13.2/' ') 
     WRITE(6,100)QMAX,SOLIDS,BOD5,TKN,QAVE,VOLAT,BOD5S,FNH3,QMIN, 
    <SETSO,COD,ANO2,CODS,ANO3,TEMP,OAG,PO4,TEMS,CIC,PH,CAC 
 200 FORMAT('0',25X,'SLUDGE CHARACTERISTICS'/ 
    <' ',24X,' PRIMARY        SECONDARY'/ 
    <' ',3X,'VOLUME (GAL/D)',F14.2,F17.2/ 
    <' ',5X,'% SOLIDS',F18.2,F17.2/ 
    <' ',5X,'% VOLATILE',F16.2,F17.2) 
     WRITE(6,200)(PSLUDA(I),SSLUDA(I),I=1,3) 
     RETURN 
     END 
     SUBROUTINE WETOEX(PVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),COD),(QQ(2),A),(QQ(3),SAT),(QQ(4),PS), 
    >(QQ(5),VS),(QQ(6),T),(QQ(7),PT),(QQ(8),RT),(QQ(9),VR), 
    >(QQ(10),CODR),(QQ(11),HW),(QQ(12),HG),(QQ(13),RSST) 
     CALL INIT(QQ,RR,13) 
     A=COD/27.8 
     SAT=8.34/0.8/A 
     PT=53.3*(T+460.0)/(144.0*SAT*VS+PS) 
     VR=8.34*PVOLU*VS*RT/24.0 
     HW=50.0*CODR 
     HE=250.0*PVOLU 
     HG=1500-HW-HE 
     IF(HG.LE.0.0)HG=0.0 
     CALL PRICE(PVOLU,0.0,0.0,67,RSST) 
     CALL INIT(RR,QQ,13) 
     RETURN 
     END 
     SUBROUTINE WETOIN(RR) 
     DIMENSION RR(1),LIST(8) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),COD),(QQ(2),A),(QQ(3),SAT),(QQ(4),PS), 
    >(QQ(5),VS),(QQ(6),T),(QQ(7),PT),(QQ(8),RT),(QQ(9),VR), 
    >(QQ(10),CODR),(QQ(11),HW),(QQ(12),HG),(QQ(13),RSST) 
     DATA LIST/'SLUD','SATU','SPEC','RETE','COD ','END ', 
    >'TEMP','REPL'/ 
 101 FORMAT(A4,A2,74A1) 
     CALL INIT(QQ,RR,13) 
     WRITE(6,950) 
 950 FORMAT(' * WARNING - COST ESTIMATES WILL BE FROM ' 
    >'PARAMETRIC EQUATIONS') 
  50 READ(5,101)IDENT,IXX,KLM 
     WRITE(6,951)IDENT,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(IDENT.EQ.LIST(I))GO TO 53 
  51 CONTINUE 
     WRITE(6,52)IDENT 
  52 FORMAT(' ',A4,2X,' IS NOT A VALID KEYWORD') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6,7,8),I 
   1 COD=VALUE(1) 
     GO TO 50 
   2 PS=VALUE(1) 
     GO TO 50 
   3 VS=VALUE(1) 
     GO TO 50 
   4 RT=VALUE(1) 
     GO TO 50 
   5 CODR=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,13) 
     RETURN 
   7 T=VALUE(1) 
     GO TO 50 
   8 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE WETOOT(RR) 
     DIMENSION RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),COD),(QQ(2),A),(QQ(3),SAT),(QQ(4),PS), 
    >(QQ(5),VS),(QQ(6),T),(QQ(7),PT),(QQ(8),RT),(QQ(9),VR), 
    >(QQ(10),CODR),(QQ(11),HW),(QQ(12),HG),(QQ(13),RSST) 
     CALL INIT(QQ,RR,13) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0WET OXIDATION') 
 101 FORMAT('0AIR REQUIREMENTS                  ',E9.3,' LBS/GAL') 
 102 FORMAT(' REACTOR PRESSURE                  ',E9.3,' PSIA') 
 103 FORMAT(' REACTOR TEMPERATURE               ',E9.3,' DEG F') 
 104 FORMAT(' REACTOR VOLUME                    ',E9.3,' CU FT') 
 105 FORMAT(' ADDITIONAL HEAT REQUIRED          ',E9.3,' BTU/GAL') 
     WRITE(6,101)A 
     WRITE(6,102)PT 
     WRITE(6,103)T 
     WRITE(6,104)VR 
     WRITE(6,105)HG 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     RETURN 
     END 
     SUBROUTINE XECOEX(XMLSS,QMAX,XSP,XWS,XEBOD,XESS,FP,VOLAT,EBODS, 
    <QC,QAVE,R,RR) 
     COMMON/XXCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FMLSS ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     CALL INIT(QQ,RR,25) 
     SP=XSP 
     XESS=ESS 
     SA=QAVE*1000000.0/SFR 
     ASLR=QAVE*FMLSS*8.34/SA 
   1 VOLUME=SA*SWD 
     TD=VOLUME/QAVE/1000000.0*7.48*24.0 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,33.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(40) 
     GO TO 2 
   3 CALL RECTPR(0,33.0,QAVE,SWD,SA,COSTES,RSMS,RSST,0) 
     CALL USEREX(40) 
   2 WL=QAVE*(1.0+R)*1000000.0/WOFR 
     WS=FMLSS*QAVE 
     XWS=WS 
     QC=UC 
     XMLSS=FMLSS 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE XECOIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(13) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FMLSS ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     DIMENSION RR(1) 
     DATA LIST/'SOLI','SURF','SPEC','UNDE','WEIR','SIDE','EFFL','END ', 
    >'FILT', 
    >'ESTI','RECT','CIRC','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,13 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,53)KTYPE 
  53 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,7,9,10,11,12,13,14,15),I 
   1 SLR=VALUE(1) 
     GO TO 50 
   2 SFR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 SG=VALUE(1) 
     GO TO 50 
   4 UC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 WOFR=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   7 SWD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   9 ESS=VALUE(1) 
     GO TO 50 
  10 CALL INIT(RR,QQ,25) 
     RETURN 
  12 COSTES=VALUE(1) 
     GO TO 50 
  15 RSMS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
  13 RECT=1.0 
     GO TO 50 
  14 RECT=0.0 
     GO TO 50 
  11 FMLSS=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE XECOOT(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     EQUIVALENCE (QQ(1),RSST),(QQ(2),SLR   ),(QQ(3),SFR   ), 
    &(QQ( 4),SG    ),(QQ( 5),UC    ),(QQ( 6),WOFR  ),(QQ( 7),SWD   ), 
    &(QQ( 8),TD    ),(QQ( 9),ASLR   ),(QQ(10),ESS   ),(QQ(11),FMA   ), 
    &(QQ(12),FMT   ),(QQ(13),SP    ),(QQ(14),EBOD  ),(QQ(15),SA    ), 
    &(QQ(16),VOLUME),(QQ(17),TIME  ),(QQ(18),WL    ),(QQ(19),SRR   ), 
    &(QQ(20),FE    ),(QQ(21),WS    ),(QQ(22),FMLSS ) 
    >,(QQ(23),COSTES),(QQ(24),RECT),(QQ(25),RSMS) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,25) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0SECONDARY CLARIFIER FOR TRICKLING FILTRATION') 
 400 FORMAT('0 CIRCULAR CLARIFIER') 
 401 FORMAT('0 RECTANGULAR CLARIFIER') 
     IF(RECT.EQ.0.0)WRITE(6,400) 
     IF(RECT.NE.0.0)WRITE(6,401) 
     WRITE(6,101)ASLR 
 101 FORMAT('0',' ',' SOLIDS LOADING RATE              ',E9.3, 
    > ' LB/SQFT/DAY') 
     IF(ASLR.GT.SLR)WRITE(6,150)SLR 
 150 FORMAT(70X,' ****NOTE-SOLIDS LOADING RATE EXCEEDS',1X,E9.3, 
    < ' LB/SQFT/DAY') 
     WRITE(6,102)ID(MODT,1),SFR 
 102 FORMAT(' ',A1,' SURFACE OVERFLOW RATE            ',E9.3, 
    > ' GAL/SQFT/DAY') 
     WRITE(6,103)TD 
 103 FORMAT('   DETENTION TIME                   ',E9.3,' HOURS') 
     IF(TD.GT.5.0)WRITE(6,204) 
 204 FORMAT(70X,'*** DETENTION TIME EXCEEDS FIVE HOURS ***') 
     WRITE(6,104)ID(MODT,3),WOFR 
 104 FORMAT(' ',A1,' WEIR OVERFLOW RATE               ',E9.3, 
    > ' GAL/FT/DAY') 
     WRITE(6,105)ID(MODT,4),SWD 
 105 FORMAT(' ',A1,' TANK SIDEWATER DEPTH             ',E9.3,' FEET') 
     WRITE(6,106)WL 
 106 FORMAT('   WEIR LENGTH                      ',E9.3,' FEET') 
     WRITE(6,108)WS 
 108 FORMAT('   VOLUME OF WASTED SLUDGE          ',E9.3,' GAL/DAY') 
     WRITE(6,109)ID(MODT,2),UC 
 109 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION          ',E9.3, 
    > ' PERCENT') 
     WRITE(6,110)SA 
 110 FORMAT('   TOTAL SURFACE AREA               ',E9.3,' SQ FT') 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     IF(ENABLE.EQ.0.0)RETURN 
   4 IF(RECT.GT.0.0)GO TO 3 
     CALL CIRCPR(0,33.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
     GO TO 2 
   3 CALL RECTPR(0,33.0,QAVE,SWD,SA,COSTES,RSMS,RSST,1) 
   2 RETURN 
     END 
     SUBROUTINE ZACTII(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(8),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FKM),(QQ(2),FKS),(QQ(3),FKE), 
    >(QQ( 4),THETA ),(QQ( 5),DT    ),(QQ( 6),DTS   ),(QQ( 7),XDT   ), 
    >(QQ( 8),BOD5E ),(QQ( 9),SSE   ),(QQ(10),TKNE  ),(QQ(11),PO4E  ), 
    >(QQ(12),UC    ),(QQ(13),XOSTSP),(QQ(14),V     ),(QQ(15),FMLSS ), 
    >(QQ(16),FOM   ),(QQ(17),DMT   ),(QQ(18),RRR   ),(QQ(19),DIA   ), 
    >(QQ(20),VCS   ),(QQ(21),OMH   ),(QQ(22),FMMH  ),(QQ(23),FKWH  ), 
    >(QQ(24),OMMP),(QQ(25),RSSP),(QQ(26),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'CONS','DETE','SOLI','DESI','UNDE','ESTI','END ','REPL'/ 
     CALL INIT(QQ,RR,26) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,8 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
  52 GO TO(1,2,3,4,5,6,7,8),I 
   1 FKM=VALUE(1) 
     FKS=VALUE(2) 
     FKE=VALUE(3) 
     THETA=VALUE(4) 
     GO TO 50 
   2 DT=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   3 DTS=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   4 BOD5E=VALUE(1) 
     SSE=VALUE(2) 
     TKNE=VALUE(3) 
     PO4E=VALUE(4) 
     GO TO 50 
   5 UC=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   6 XOSTSP=VALUE(1) 
     GO TO 50 
   7 CALL INIT(RR,QQ,26) 
     RETURN 
   8 RSSP=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZACTIO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FKM),(QQ(2),FKS),(QQ(3),FKE), 
    >(QQ( 4),THETA ),(QQ( 5),DT    ),(QQ( 6),DTS   ),(QQ( 7),XDT   ), 
    >(QQ( 8),BOD5E ),(QQ( 9),SSE   ),(QQ(10),TKNE  ),(QQ(11),PO4E  ), 
    >(QQ(12),UC    ),(QQ(13),XOSTSP),(QQ(14),V     ),(QQ(15),FMLSS ), 
    >(QQ(16),FOM   ),(QQ(17),DMT   ),(QQ(18),RRR   ),(QQ(19),DIA   ), 
    >(QQ(20),VCS   ),(QQ(21),OMH   ),(QQ(22),FMMH  ),(QQ(23),FKWH  ), 
    >(QQ(24),OMMP),(QQ(25),RSSP),(QQ(26),RSST) 
     COMMON /STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,26) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0ACTIVATED SLUDGE') 
 101 FORMAT('0',A1,' HYDRAULIC DETENTION TIME',T45,E9.3,' HOURS') 
 102 FORMAT(' ',A1,' SOLIDS DETENTION TIME',T45,E9.3,' DAYS') 
1010 FORMAT('0  ADJUSTED HYDRAULIC DETENTION TIME',T45,E9.3, 
    > ' HOURS') 
 103 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION',T45,E9.3,' MG/L') 
 104 FORMAT('   VOLUME OF AERATION TANK',T45,E9.3,' MIL GAL') 
 105 FORMAT('   MIXED LIQUOR SUSPENDED SOLIDS',T45,E9.3,' MG/L') 
 106 FORMAT('   FOOD TO MICRO-ORGANISM RATIO',T45,E9.3) 
 107 FORMAT('   SLUDGE PRODUCTION',T45,E9.3,' LBS/DAY') 
 108 FORMAT('   SLUDGE RECYCLE RATIO',T45,E9.3) 
 109 FORMAT('0QUANTITIES FOR ACTIVATED SLUDGE') 
 110 FORMAT('0  DIAMETER OF PACKAGE PLANT',T45,E9.3,' FEET') 
 111 FORMAT('   VOLUME OF REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
 112 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
 113 FORMAT('   ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 114 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
 115 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     IF(DT.EQ.XDT)WRITE(6,101)ID(MODT,1),DT 
     IF(DT.NE.XDT)WRITE(6,1010)XDT 
     WRITE(6,102)ID(MODT,2),DTS 
     WRITE(6,103)ID(MODT,3),UC 
     WRITE(6,104)V 
     WRITE(6,105)FMLSS 
     WRITE(6,106)FOM 
     IF(FOM.GT.0.15.OR.FOM.LT.0.05)WRITE(6,130) 
 130 FORMAT(' ',70X,' F/M RATIO OUT OF REASONABLE RANGE') 
     WRITE(6,107)DMT 
     WRITE(6,108)RRR 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)GO TO 1 
     CALL TITLE 
     WRITE(6,109) 
     WRITE(6,110)DIA 
     WRITE(6,111)VCS 
     WRITE(6,112)OMH 
     WRITE(6,114)FMMH 
     WRITE(6,113)FKWH 
     WRITE(6,115)OMMP 
   1 CALL INIT(RR,QQ,26) 
     RETURN 
     END 
     SUBROUTINE ZACTIX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     EQUIVALENCE (QQ(1),XFKM),(QQ(2),XFKS),(QQ(3),XFKE), 
    >(QQ( 4),THETA ),(QQ( 5),DT    ),(QQ( 6),DTS   ),(QQ( 7),XDT   ), 
    >(QQ( 8),BOD5E ),(QQ( 9),SSE   ),(QQ(10),TKNE  ),(QQ(11),PO4E  ), 
    >(QQ(12),UC    ),(QQ(13),XOSTSP),(QQ(14),V     ),(QQ(15),FMLSS ), 
    >(QQ(16),FOM   ),(QQ(17),DMT   ),(QQ(18),RRR   ),(QQ(19),DIA   ), 
    >(QQ(20),VCS   ),(QQ(21),OMH   ),(QQ(22),FMMH  ),(QQ(23),FKWH  ), 
    >(QQ(24),OMMP),(QQ(25),RSSP),(QQ(26),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,26) 
     XDT=DT 
     FKM=XFKM*THETA**(TEMP-20.0) 
     FKS=XFKS*THETA**(TEMP-20.0) 
     FKE=XFKE*THETA**(TEMP-20.0) 
     V=QAVE*DT/24.0 
     BOD5SE=BOD5/(1.0+FKM*DT) 
   1 FMA=FKS*BOD5SE/(FKE+1.0/24.0/DTS) 
     FME=0.20*FKE*FMA*DTS*24.0 
     SSI=0.40*SOLIDS*VOLAT/100.0 
     FMI=SSI*24.0*DTS/XDT 
     SSII=0.25*SOLIDS 
     FMII=SSII*24.0*DTS/XDT+0.10*(FMA+FME) 
     FMLSS=FMA+FME+FMI+FMII 
     IF(FMLSS.GT.6000.0)GO TO 4 
     FOM=24.0*BOD5/FMLSS/XDT 
     IF(FOM.GE.0.05)GO TO 2 
     XDT=0.90*XDT 
     GO TO 1 
   2 IF(FOM.LE.0.15)GO TO 3 
     XDT=1.10*XDT 
     GO TO 1 
   4 XDT=DT 
     FMLSS=6000.0 
     FOM=24.0*BOD5/FMLSS/XDT 
   3 DMT=FMLSS*V*8.34/DTS 
     PSPBOD=DMT/QAVE/(BOD5-BOD5SE)/8.34 
     FMU=UC*1.03*10000.0 
     RRR=FMLSS/(FMU-FMLSS) 
     BOD5=BOD5SE+0.84*SSE*FMA/FMLSS*0.76 
     SOLIDS=SSE 
     BOD5S=BOD5SE 
     OAG=0.0 
     SETSO=0.0 
     COD=1.50*BOD5 
     CODS=1.5*BOD5S 
     TKN=TKNE 
     PO4=PO4E 
     FNH3=TKN 
     ANO2=0.0 
     UCP=UC/10000.0 
     WS=DMT/1.03/UCP/8.34*100.0 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UCP)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UCP*VOLAT)/(SVOLU*PSOLID+WS*UCP) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SECOND ORDER DESIGN 
     IDIAF=126.4*QAVE**0.4943+0.99 
     IDIAT=114.4*V**0.4957+0.99 
     DIA=IDIAF 
     IF(IDIAT.GT.IDIAF)DIA=IDIAT 
     VCS=0.589*(DIA+3.0)**2 
     OMH=1200.0 
     IF(QAVE.GT.0.10)OMH=1683.0*QAVE**0.1469 
     FMMH=640.0 
     IF(QAVE.GT.0.10)FMMH=1143.0*QAVE**0.2519 
     FKWH=75000.0*QAVE 
     OMMP=1.74*QAVE**(-0.2497) 
     CF=1.11 
     THIRD ORDER DESIGN 
     COSTCS=VCS/27.0*UPICS 
     COSTRO=6.28*DIA**0.8316 
     COSTSP=XOSTSP 
     IF(COSTSP.EQ.0.0)COSTSP=36500.0*FMSECI/491.60 
     COSTPP=COSTSP*COSTRO/100.0 
     OMMC=COSTPP*OMMP/100.0 
     TBCC=(COSTCS+COSTPP)*CF 
     PRIN=CF*COSTCS 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTPP 
     CALL AMORT(PRIN,RSSP,RC2) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=47.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(58) 
     CALL INIT(RR,QQ,26) 
     RETURN 
     END 
     SUBROUTINE ZAERAI(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(14) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),ST    ),(QQ(2),WT    ),(QQ(3),EBOD  ), 
    &(QQ( 4),FK    ),(QQ( 5),A     ),(QQ( 6),AP    ),(QQ( 7),B     ), 
    &(QQ( 8),BP    ),(QQ( 9),THETA ),(QQ(10),DT    ),(QQ(11),XV    ), 
    >(QQ(12),T     ),(QQ(13),V     ),(QQ(14),HPR   ),(QQ(15),THP   ), 
    >(QQ(16),N     ),(QQ(17),K     ),(QQ(18),HPA   ),(QQ(19),DW    ), 
    >(QQ(20),FLW   ),(QQ(21),WW    ),(QQ(22),DC    ),(QQ(23),OMMP  ), 
    >(QQ(24),VLEW  ),(QQ(25),VCW   ),(QQ(26),VCS   ),(QQ(27),VCEP  ), 
    >(QQ(28),AS    ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),FKWH  ), 
    >(QQ(32),SAL   ), 
    >(QQ(33),ALPHA ),(QQ(34),BETA  ),(QQ(35),P   ),(QQ(36),STE   ), 
    >(QQ(37),HDT   ),(QQ(38),COSTSA),(QQ(39),XUPILL),(QQ(40),CL    ), 
    >(QQ(41),ITYP  ),(QQ(42),FMLSS ),(QQ(43),FMLVSS), 
    >(QQ(44),O2R),(QQ(45),FNR),(QQ(46),PO4R),(QQ(47),TEBOD), 
    >(QQ(48),HPB),(QQ(49),RSSA),(QQ(50),RSST),(QQ(51),RSLL) 
     DATA IA/'I'/ 
     DATA LIST/'SUMM','WINT','EFFL','CONS','END ','MECH','DETE', 
    >'ESTI','LINE','MINI','COMP','FACU','MIXE','REPL'/ 
     CALL INIT(QQ,RR,51) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,14 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14),I 
   1 ST=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 WT=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   4 FK=VALUE(1) 
     A=VALUE(2) 
     AP=VALUE(3) 
     B=VALUE(4) 
     BP=VALUE(5) 
     THETA=VALUE(6) 
     P=VALUE(7) 
     ID(MODT,3)=IA 
     GO TO 50 
   3 EBOD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 CALL INIT(RR,QQ,51) 
     RETURN 
   6 ALPHA=VALUE(1) 
     BETA=VALUE(2) 
     HPR=VALUE(3) 
     STE=VALUE(4) 
     ID(MODT,5)=IA 
     GO TO 50 
   7 HDT=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   8 COSTSA=VALUE(1) 
     GO TO 50 
   9 XUPILL=VALUE(1) 
     RSLL=VALUE(2) 
     IF(RSLL.LE.0.0)RSLL=15.0 
     GO TO 50 
  10 CL=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
  11 ITYP=0 
     GO TO 50 
  12 ITYP=1 
     GO TO 50 
  13 FMLSS=VALUE(1) 
     FMLVSS=VALUE(2) 
     ID(MODT,8)=IA 
     GO TO 50 
  14 RSSA=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZAERAO(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),ST    ),(QQ(2),WT    ),(QQ(3),EBOD  ), 
    &(QQ( 4),FK    ),(QQ( 5),A     ),(QQ( 6),AP    ),(QQ( 7),B     ), 
    &(QQ( 8),BP    ),(QQ( 9),THETA ),(QQ(10),DT    ),(QQ(11),XV    ), 
    >(QQ(12),T     ),(QQ(13),V     ),(QQ(14),HPR   ),(QQ(15),THP   ), 
    >(QQ(16),N     ),(QQ(17),K     ),(QQ(18),HPA   ),(QQ(19),DW    ), 
    >(QQ(20),FLW   ),(QQ(21),WW    ),(QQ(22),DC    ),(QQ(23),OMMP    ), 
    >(QQ(24),VLEW  ),(QQ(25),VCW   ),(QQ(26),VCS   ),(QQ(27),VCEP  ), 
    >(QQ(28),AS    ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),FKWH  ), 
    >(QQ(32),SAL   ), 
    >(QQ(33),ALPHA ),(QQ(34),BETA  ),(QQ(35),P   ),(QQ(36),STE   ), 
    >(QQ(37),HDT   ),(QQ(38),COSTSA),(QQ(39),COSLIN),(QQ(40),CL    ), 
    >(QQ(41),ITYP  ),(QQ(42),FMLSS ),(QQ(43),FMLVSS), 
    >(QQ(44),O2R),(QQ(45),FNR),(QQ(46),PO4R),(QQ(47),TEBOD), 
    >(QQ(48),HPB),(QQ(49),RSSA),(QQ(50),RSST),(QQ(51),RSLL) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,51) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     IF(ITYP.EQ.0)WRITE(6,200) 
 200 FORMAT('0 COMPLETE MIX AERATED LAGOONS') 
     IF(ITYP.EQ.1)WRITE(6,301) 
 301 FORMAT('0FACULTATIVE AERATED LAGOONS') 
     WRITE(6,401)ID(MODT,1),ST 
 401 FORMAT('0',A1,' SUMMER TEMPERATURE        ',T45,E9.3,' DEG C') 
     WRITE(6,202)ID(MODT,2),WT 
 202 FORMAT(' ',A1,' WINTER TEMPERATURE        ',T45,E9.3,' DEG C') 
     WRITE(6,203)ID(MODT,4),EBOD 
 203 FORMAT(' ',A1,' EFFLUENT SOLUBLE BOD      ',T45,E9.3,' MG/L') 
     IF(ITYP.EQ.0)WRITE(6,204)ID(MODT,3),FK 
     IF(ITYP.EQ.1)WRITE(6,2004)ID(MODT,3),FK 
 204 FORMAT(' ',A1,' REACTION RATE CONSTANT    ',T45,E9.3,' L/MG-HR') 
2004 FORMAT(' ',A1,' REACTION RATE CONSTANT    ',T45,E9.3,' /DAY') 
     WRITE(6,205)ID(MODT,3),A 
 205 FORMAT(' ',A1,' FRACTION BOD SYNTHESIZED  ',T45,E9.3) 
     WRITE(6,206)ID(MODT,3),AP 
 206 FORMAT(' ',A1,' FRACTION BOD OXIDIZED     ',T45,E9.3) 
     WRITE(6,207)ID(MODT,3),B 
 207 FORMAT(' ',A1,' ENDOGENEOUS RATE  (SLUDGE BASIS)',T45,E9.3, 
    >' /DAY') 
2071 FORMAT(' ',A1,' ENDOGENEOUS RATE  (OXYGEN BASIS)',T45,E9.3, 
    >' /DAY') 
     WRITE(6,2071)ID(MODT,3),BP 
     WRITE(6,208)ID(MODT,3),THETA 
     WRITE(6,308)ID(MODT,3),P 
 308 FORMAT(' ',A1,' PRESSURE CORRECTION COEFFICIENT',T45,E9.3) 
 208 FORMAT(' ',A1,' TEMPERATURE COEFFICIENT   ',T45,E9.3) 
     IF(ITYP.EQ.0)WRITE(6,218)FMLSS 
     IF(ITYP.EQ.0)WRITE(6,217)FMLVSS 
     IF(ITYP.EQ.1)WRITE(6,2180)ID(MODT,8),FMLSS 
     IF(ITYP.EQ.1)WRITE(6,2170)ID(MODT,8),FMLVSS 
     WRITE(6,209)T 
 209 FORMAT('   DETENTION TIME            ',T45,E9.3,' DAYS') 
     WRITE(6,211)V 
 211 FORMAT('   VOLUME                    ',T45,E9.3,' MG') 
     WRITE(6,2110)DW 
2110 FORMAT('   AVERAGE WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,216)AS 
 217 FORMAT('   MIXED LIQUOR VSS',T45,E9.3,' MG/L') 
 218 FORMAT('   MIXED LIQUOR SS',T45,E9.3,' MG/L') 
 216 FORMAT('   SURFACE AREA ',T45,E9.3,' ACRES') 
2180 FORMAT(' ',A1,' MIXED LIQUOR SS',T45,E9.3,' MG/L') 
2170 FORMAT(' ',A1,' MIXED LIQUOR VSS',T45,E9.3,' MG/L') 
     WRITE(6,212)O2R 
 212 FORMAT('   OXYGEN REQUIREMENT        ',T45,E9.3,' LBS/DAY') 
     WRITE(6,213)FNR 
 213 FORMAT('   NITROGEN REQUIREMENT      ',T45,E9.3,' MG/L') 
     WRITE(6,214)PO4R 
 214 FORMAT('   PHOSPHORUS REQUIREMENT    ',T45,E9.3,' MG/L') 
     WRITE(6,215)TEBOD 
 215 FORMAT('   TOTAL EFFLUENT BOD        ',T45,E9.3,' MG/L') 
 125 WRITE(6,121)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
1    FORMAT('0QUANTITIES FOR AERATED LAGOON SYSTEM') 
     WRITE(6,201)N 
 201 FORMAT('0NUMBER OF BASINS',T45,I9) 
     WRITE(6,4)HPB 
4    FORMAT(' AERATOR HORSEPOWER REQUIRED PER BASIN',T45,E9.3,' HP') 
     WRITE(6,5)K 
5    FORMAT(' NUMBER OF AERATORS PER BASIN',T45,I9) 
     WRITE(6,6)HPA 
6    FORMAT(' HORSEPOWER OF INDIVIDUAL AERATORS',T45,E9.3,' HP') 
     WRITE(6,7)DW 
7    FORMAT(' BASIN WATER DEPTH',T45,E9.3,' FEET') 
     WRITE(6,10)FLW 
10   FORMAT(' LENGTH OF BASIN AT WATER LEVEL',T45,E9.3,' FEET') 
     WRITE(6,11)WW 
11   FORMAT(' WIDTH OF BASIN AT WATER LEVEL',T45,E9.3,' FEET') 
     WRITE(6,15)DC 
15   FORMAT(' DEPTH OF CUT',T45,E9.3,' FEET') 
     WRITE(6,18)VLEW 
18   FORMAT(' VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,19)VCW 
19   FORMAT(' TOTAL  WALL CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,20)VCS 
20   FORMAT(' TOTAL  SLAB CONCRETE REQUIRED',T45,E9.3,' CU FT') 
     WRITE(6,21)VCEP 
21   FORMAT(' VOLUME CONCRETE FOR EMBANKMENT PROTECTION',T45,E9.3,' CU 
    >FT') 
     WRITE(6,22)AS 
22   FORMAT(' LAGOON WATER SURFACE',T45,E9.3,' ACRES') 
     WRITE(6,23)OMH 
23   FORMAT(' OPERATION MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,24)FMMH 
24   FORMAT(' MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YR') 
     WRITE(6,26)FKWH 
26   FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,27)SAL 
27   FORMAT(' SURFACE AREA OF LAGOON LINER',T45,E9.3,' SQ FT') 
     WRITE(6,28)OMMP 
28   FORMAT(' OPERATION AND MAINTENANCE MATERIAL COSTS',T45,E9.3,' PERC 
    >ENT') 
     CALL INIT(RR,QQ,51) 
     RETURN 
     END 
     SUBROUTINE ZAERAX(RR) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/PERCCO/DUMMY(12),XL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),ST    ),(QQ(2),WT    ),(QQ(3),EBOD  ), 
    &(QQ( 4),FK    ),(QQ( 5),A     ),(QQ( 6),AP    ),(QQ( 7),B     ), 
    &(QQ( 8),BP    ),(QQ( 9),THETA ),(QQ(10),DT    ),(QQ(11),XV    ), 
    >(QQ(12),T     ),(QQ(13),V     ),(QQ(14),XHPR  ),(QQ(15),THP   ), 
    >(QQ(16),N     ),(QQ(17),K     ),(QQ(18),HPA   ),(QQ(19),DW    ), 
    >(QQ(20),FLW   ),(QQ(21),WW    ),(QQ(22),DC    ),(QQ(23),OMMP  ), 
    >(QQ(24),VLEW  ),(QQ(25),VCW   ),(QQ(26),VCS   ),(QQ(27),VCEP  ), 
    >(QQ(28),AS    ),(QQ(29),OMH   ),(QQ(30),FMMH  ),(QQ(31),FKWH  ), 
    >(QQ(32),SAL   ), 
    >(QQ(33),ALPHA ),(QQ(34),BETA  ),(QQ(35),P   ),(QQ(36),STE   ), 
    >(QQ(37),HDT   ),(QQ(38),XOSTSA),(QQ(39),XUPILL),(QQ(40),CL    ), 
    >(QQ(41),ITYP  ),(QQ(42),FMLSS ),(QQ(43),FMLVSS), 
    >(QQ(44),O2R),(QQ(45),FNR),(QQ(46),PO4R),(QQ(47),TEBOD), 
    >(QQ(48),HPB),(QQ(49),RSSA),(QQ(50),RSST),(QQ(51),RSLL) 
     DIMENSION KK(5) 
     DIMENSION RR(1) 
     DATA KK/2,3,4,6,8/ 
     DIMENSION HPAL(11) 
     DATA HPAL/10.,15.,20.0,25.0,30.0,40.0,50.0,60.0,75.0,100.0,150.0/ 
     CALL INIT(QQ,RR,51) 
     SKT=THETA**(ST-20.0)*FK 
     WKT=THETA**(WT-20.0)*FK 
     CST=14.652-0.41022*ST+0.00799*ST**2-0.000077774*ST**3 
     IF(ITYP.EQ.1)GO TO 1 
     AEROBIC AERATED LAGOON 
     SDT=1.0/(24.0*A*SKT*EBOD-B) 
     WDT=1.0/(24.0*A*WKT*EBOD-B) 
     T=SDT 
     IF(WDT.GT.T)T=WDT 
     IF(HDT.GT.T)T=HDT 
     V=QAVE*T 
     XV=(SOLIDS+A*(BOD5-EBOD))/(1.0+B*T) 
     VOLAT=0.8 
     FMLVSS=XV 
     FMLSS=XV/0.8 
     SOLIDS=XV/0.8 
     IF (SOLIDS.GT.250.0)SOLIDS=250.0 
     O2R=AP*(BOD5-EBOD)*QAVE*8.34+BP*XV*V*8.34 
     OTE=STE/9.17*(CST*BETA*P-CL)*ALPHA*1.02**(ST-20.0) 
     HPR=O2R*1000.0/OTE/24.0/V/10.0**6 
     IF(HPR.LT.XHPR)HPR=XHPR 
     THP=HPR*V*10.0**6/1000.0 
     BOD5=EBOD+0.3*XV 
     BOD5S=EBOD 
     TEBOD=BOD5 
     FNR=TEBOD/20.0 
     PO4R=TEBOD/100.0 
     GO TO 2 
   1 WDT=(BOD5*1.05/EBOD-1.0)/WKT 
      FACULTATIVE 
     SDT=(BOD5*1.20/EBOD-1.0)/SKT 
     T=HDT 
     IF(WDT.GT.T)T=WDT 
     IF(SDT.GT.T)T=SDT 
     V=QAVE*T 
     OTE=STE*(CST*BETA*P-CL)/9.17*ALPHA*1.02**(ST-20.0) 
     SR=BOD5-EBOD 
     O2R=AP*SR*QAVE*8.34*1.2 
     IF(O2R.LT.0.0)O2R=0.0 
     HPR=O2R/OTE/24.0/V/1000.0 
     IF(HPR.LT.0.005)HPR=0.005 
     THP=HPR*V*10.0**6/1000.0 
     SSAL=0.407/HPR-10.7 
     SSOI=25.0 
     SSE=SSAL+SSOI 
     EBOD5=EBOD+0.3*0.85*SSOI+0.12*SSAL 
     SOLIDS=SSE 
     VS=FMLVSS/FMLSS*100.0 
     BOD5=EBOD5 
     BOD5S=EBOD 
     TEBOD=BOD5 
     FNR=TEBOD/20.0 
     PO4R=TEBOD/100.0 
      SECOND ORDER DESIGN 
   2 N=1 
     COD=1.5*BOD5 
     CODS=1.50*BOD5S 
     FNH3=0.25*TKN 
     ANO2=0.0 
     OAG=0.0 
     IF(QAVE.GT.0.5)N=2 
     IF(QAVE.GT.2.0)N=3 
     IF(QAVE.GT.5.0)N=4 
     HPB=THP/N 
     I=11 
     DO 11 J=1,5 
     K=KK(J) 
     HPBOK=HPB/K 
     IF(HPBOK.GT.150.0)GO TO 11 
     DO 4 I=1,11 
     IF(HPAL(I).GT.HPBOK)GO TO 12 
   4 CONTINUE 
     I=11 
  11 CONTINUE 
  12 HPA=HPAL(I) 
     DW=4.82*HPA**0.2467 
     IF(HPA.GT.100.0)DW=15.0 
     R=K 
     IF(K.GT.4)R=K/2.0 
     AA=V*10.0**6/7.48/N/DW 
     FLW=(R*SQRT(4.0/R*AA-6.0/R*(3.0*DW)**2+2.00*(3.0*DW)**2)+3.0*DW* 
    >(1.0+R))/2.0 
     WW=FLW/R 
     IF(N.LE.3)XL=(N*WW+800.0+(N-1)*50.0)*(FLW+800.0)/43560.0 
     IF(N.EQ.4)XL=(2.0*WW+850.0)*(2.0*FLW+850.0)/43560.0 
     IXL=XL+0.99 
     XL=IXL 
     DC=6.0 
  20 DF=DW+2.0-DC 
     FLC=FLW-6.0*(DW-DC) 
     WC=FLC/R 
     VC=1.3*N*DC*(WC*FLC-3.0*DC*WC-3.0*DC*FLC+12.00*DC**2) 
     FLT=FLW+12.0 
     TLW=FLT/R 
     NL=N+1 
     NW=2.0*N 
     VF=(10.0*DF+3.0*DF**2)*(FLT*NL+TLW*NW) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 21 
     DC=DC+0.10*PERC/ABS(PERC) 
     GO TO 20 
  21 VLEW=VC 
     VCWI=81.0 
     VCSI=33.0 
     IF(N.EQ.3)VCWI=97. 
     IF(N.EQ.3)VCSI=43.0 
     IF(N.EQ.4)VCWI=135. 
     IF(N.EQ.4)VCSI=66.0 
     VCWE=81.0*N 
     VCSE=32.0*N 
     VCW=VCWI+VCWE 
     VCS=VCSI+VCSE 
     VCEP=(2.0*FLW+2.0*WW)*11.0*N*0.67 
     AS=N*FLW*WW/43560.0 
     OMH=700.0*AS**0.2571 
     IF(AS.GT.4.0)OMH=539.3*AS**0.4453 
     FMMH=130.0*AS**0.2925 
     IF(AS.GT.4.0)FMMH=105.0*AS**0.4466 
     HPT=HPA*K*N 
     FKWH=HPT*365*24.0*0.9*0.85*0.877 
     SAB=(FLW-6.0*DW)*(WW-6.0*DW) 
     SAE=2.0*(FLT+TLW)*((DW+2.0)/.3159+5.0) 
     SAL=N*(SAB+SAE) 
     OMMP=4.93*HPT**(-0.1827) 
     CF=1.11 
     COSTE=VLEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTEP=VCEP/27.0*0.5*UPICS 
     COSTR=20.7*HPA**0.2686 
     IF(HPA.GT.25.0)COSTR=4.12*HPA**0.7878 
     COSTSA=XOSTSA 
     IF(COSTSA.EQ.0.0)COSTSA=13960.0*FMSECI/491.6 
     COSTA=COSTSA*COSTR*K*N/100.0 
     FIMH=0.633*HPA+40.0 
     AIC=FIMH*K*N*FLABRI 
     EMC=0.589*COSTA*HPA**(-0.1465) 
     FIEC=COSTA+AIC+EMC 
     COSTLL=0.0 
     COSTLL=SAL*XUPILL 
  30 TBCC=(COSTE+COSTCW+COSTCS+COSTEP+COSTLL+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS+COSTEP) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTLL 
     CALL AMORT(PRIN,RSLL,RC2) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSSA,RC3) 
     OMMC=OMMP*FIEC/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=21.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(28) 
     CALL INIT(RR,QQ,51) 
     RETURN 
     END 
     SUBROUTINE ZBAREX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     EQUIVALENCE(QQ(1),QPF),(QQ(2),QP),(QQ(3),RSST), 
    >(QQ( 4),HE    ),(QQ( 5),BS    ),(QQ( 6),BW    ),(QQ( 7),B     ), 
    >(QQ( 8),THETA ),(QQ( 9),XOSTB ),(QQ(10),WC    ),(QQ(11),DC    ), 
    >(QQ(12),FLC   ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),VCS   ), 
    >(QQ(16),OMH   ),(QQ(17),FMMH  ),(QQ(18),FKWH  ),(QQ(19),OMMP  ) 
    >,(QQ(20),RSTB) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     CALL INIT(QQ,RR,20) 
     QP=QPF*QAVE 
     AN1=QMAX*1.547/2.0 
     AN2=QP*1.547/3.0 
     AN=AN1 
     IF(AN2.GT.AN1)AN=AN2 
     AT=AN*(BS+BW)/BS 
     WC=2.0 
     D=AT/2.0 
     DC=D+2.0 
     TH=THETA*3.1416/180.0 
     HEL=B*(BW/BS)**1.33*(1.547*QAVE/2.0/D)**2*SIN(TH)**2/64.4 
     FLC=WC*7.0 
     VEW=(WC+4.0)*(FLC+4.0)*(DC+1.0) 
     VCW=0.75*DC*((FLC+1.5)*2.0+WC*2.0)+WC*6.0*0.75 
     VCS=(WC+1.5)*(FLC+1.5) 
     OMH=46.0*QAVE**1.354 
     FMMH=16.7*QAVE**0.372 
     FKWH=10.0**(3.0803+0.1833*ALOG10(QAVE)-0.0467*(ALOG10(QAVE))**2+ 
    >0.0428*(ALOG10(QAVE))**3) 
     OMMP=2.0 
     CF=1.11 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCW*UPICW/27.0 
     COSTCS=VCS*UPICS/27.0 
     COSTBS=XOSTB 
     IF(COSTBS.EQ.0.0)COSTBS=10350.0*FMSECI/491.6 
     FICS=COSTBS*1.20 
     TBCC=(FICS+COSTE+COSTCW+COSTCS)*CF 
     PRIN=FICS*CF 
     CALL AMORT(PRIN,RSTB,RC1) 
     PRIN=TBCC-PRIN 
     CALL AMORT(PRIN,RSST,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=28.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(35) 
     CALL INIT(RR,QQ,20) 
     RETURN 
     END 
     SUBROUTINE ZBARIN(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(6),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),QPF),(QQ(2),QP),(QQ(3),RSST), 
    >(QQ( 4),HE    ),(QQ( 5),BS    ),(QQ( 6),BW    ),(QQ( 7),B     ), 
    >(QQ( 8),THETA ),(QQ( 9),XOSTB ),(QQ(10),WC    ),(QQ(11),DC    ), 
    >(QQ(12),FLC   ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),VCS   ), 
    >(QQ(16),OMH   ),(QQ(17),FMMH  ),(QQ(18),FKWH  ),(QQ(19),OMMP  ) 
    >,(QQ(20),RSTB) 
     DATA LIST/'WET ','ESTI','BARS','REPL','END ','MAXI'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,20) 
  51 FORMAT(A4,A2,74A1) 
  50 READ(5,51)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 52 I=1,6 
     IF(KTYPE.EQ.LIST(I))GO TO 53 
  52 CONTINUE 
     WRITE(6,54)KTYPE 
  54 FORMAT(' ',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  53 GO TO (1,2,3,4,5,6),I 
   1 QP=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 XOSTB=VALUE(1) 
     GO TO 50 
   3 BS=VALUE(2) 
     BW=VALUE(1) 
     B=VALUE(4) 
     THETA=VALUE(3) 
     ID(MODT,4)=IA 
     GO TO 50 
   4 RSST=VALUE(2) 
     RSTB=VALUE(1) 
     GO TO 50 
   5 CALL INIT(RR,QQ,20) 
     RETURN 
   6 HE=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
     END 
     SUBROUTINE ZBAROT(RR,ID,MODT) 
     DIMENSION RR(1),ID(3,1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),QPF),(QQ(2),QP),(QQ(3),RSST), 
    >(QQ( 4),HE    ),(QQ( 5),BS    ),(QQ( 6),BW    ),(QQ( 7),B     ), 
    >(QQ( 8),THETA ),(QQ( 9),XOSTB ),(QQ(10),WC    ),(QQ(11),DC    ), 
    >(QQ(12),FLC   ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),VCS   ), 
    >(QQ(16),OMH   ),(QQ(17),FMMH  ),(QQ(18),FKWH  ),(QQ(19),OMMP  ) 
    >,(QQ(20),RSTB) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(QQ,RR,20) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
 121 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0BAR SCREENS') 
 101 FORMAT('0',A1,' WET WEATHER FLOW FACTOR',T45,E9.3) 
1010 FORMAT('   WET WEATHER FLOW',T45,E9.3,' MGD') 
 104 FORMAT(' ',A1,' MAXIMUM HEAD LOSS THROUGH SCREENS',T45,E9.3, 
    >' FEET') 
 105 FORMAT(' ',A1,' BAR SPACING',T45,E9.3,' INCHES') 
 106 FORMAT(' ',A1,' WIDTH OF BARS',T45,E9.3,' INCHES') 
 107 FORMAT(' ',A1,' BAR SHAPE FACTOR',T45,E9.3) 
 108 FORMAT(' ',A1,' SLOPE OF BARS',T45,E9.3,' DEGREES') 
 109 FORMAT('   WIDTH OF CHANNEL',T45,E9.3,' FEET') 
 110 FORMAT('   DEPTH OF CHANNEL',T45,E9.3,' FEET') 
 111 FORMAT('0QUANTITIES FOR BAR SCREENS') 
 112 FORMAT('0  LENGTH OF CHANNEL',T45,E9.3,' FEET') 
 113 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 114 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 115 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 116 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 117 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 118 FORMAT('   ENERGY REQUIREMENT',T45,E9.3,' KWHR/YEAR') 
 119 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,101)ID(MODT,1),QPF 
     WRITE(6,1010)QP 
     WRITE(6,104)ID(MODT,3),HE 
     WRITE(6,105)ID(MODT,4),BS 
     WRITE(6,106)ID(MODT,4),BW 
     WRITE(6,107)ID(MODT,4),B 
     WRITE(6,108)ID(MODT,4),THETA 
     WRITE(6,109)WC 
     WRITE(6,110)DC 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,111) 
     WRITE(6,112)FLC 
     WRITE(6,113)VEW 
     WRITE(6,114)VCW 
     WRITE(6,115)VCS 
     WRITE(6,116)OMH 
     WRITE(6,117)FMMH 
     WRITE(6,118)FKWH 
     WRITE(6,119)OMMP 
     RETURN 
     END 
     SUBROUTINE ZCHLOI(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     DIMENSION LIST(7) 
     DIMENSION RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),CT),(QQ(2),RLW),(QQ(3),AS), 
    >(QQ( 4),CD    ),(QQ( 5),SWD   ),(QQ( 6),VCT   ),(QQ( 7),CW    ), 
    >(QQ( 8),CL    ),(QQ( 9),CTL   ),(QQ(10),CTW   ),(QQ(11),CR    ), 
    >(QQ(12),VEW   ),(QQ(13),VCW   ),(QQ(14),NC    ),(QQ(15),SIZE  ), 
    >(QQ(16),BCC   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMMP  ),(QQ(21),CHLCO ),(QQ(22),XOSTCL),(QQ(23),SA), 
    >(QQ(24),VCS),(QQ(25),RSCL),(QQ(26),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'CONT','LENG','REPL','CHEM','SIDE','ESTI','END'/ 
     CALL INIT(QQ,RR,26) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,7 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7),I 
   1 CT=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 RLW=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 RSCL=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
   4 CD=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 SWD=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 CHLCO=VALUE(1) 
     XOSTCL=VALUE(2) 
     GO TO 50 
   7 CALL INIT(RR,QQ,26) 
     RETURN 
     END 
     SUBROUTINE ZCHLOO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     EQUIVALENCE (QQ(1),CT),(QQ(2),RLW),(QQ(3),AS), 
    >(QQ( 4),CD    ),(QQ( 5),SWD   ),(QQ( 6),VCT   ),(QQ( 7),CW    ), 
    >(QQ( 8),CL    ),(QQ( 9),CTL   ),(QQ(10),CTW   ),(QQ(11),CR    ), 
    >(QQ(12),VEW   ),(QQ(13),VCW   ),(QQ(14),NC    ),(QQ(15),SIZE  ), 
    >(QQ(16),BCC   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMMP  ),(QQ(21),CHLCO ),(QQ(22),XOSTCL),(QQ(23),SA), 
    >(QQ(24),VCS),(QQ(25),RSCL),(QQ(26),RSST) 
     COMMON /STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,26) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0CHLORINATION') 
 201 FORMAT('0',A1,' CONTACT TIME AT PEAK FLOW',T45,E9.3,' MINS') 
 202 FORMAT(' ',A1,' LENGTH TO WIDTH RATIO',T45,E9.3) 
 203 FORMAT(' ',A1,' CHLORINE DOSAGE',T45,E9.3,' MG/L') 
 204 FORMAT(' ',A1,' SIDEWATER DEPTH',T45,E9.3,' FEET') 
 205 FORMAT('   VOLUME OF CONTACT TANK',T45,E9.3,' GAL') 
 206 FORMAT('   SURFACE AREA',T45,E9.3,' SQ FT') 
 207 FORMAT('   CHANNEL WIDTH',T45,E9.3,' FEET') 
 208 FORMAT('   CHANNEL LENGTH',T45,E9.3,' FEET') 
 209 FORMAT('   CONTACT TANK LENGTH',T45,E9.3,' FEET') 
 210 FORMAT('   CONTACT TANK WIDTH',T45,E9.3,' FEET') 
 211 FORMAT('   CHLORINE REQUIREMENT',T45,E9.3,' LB/DAY') 
 212 FORMAT('0  VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 213 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 214 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 215 FORMAT('   SIZE OF CHLORINE CYLINDERS',T45,E9.3,' LBS') 
 216 FORMAT('   NUMBER OF CHLORINE CYLINDERS',T45,I9) 
 217 FORMAT('   AREA OF CHLORINATION BUILDING',T45,E9.3,' SQ FT') 
 218 FORMAT('   AREA OF CHLORINE STORAGE BUILDING',T45,E9.3,' SQ FT') 
 219 FORMAT('   OPERATION MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 220 FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HRS/YEAR') 
 221 FORMAT('   ENERGY REQUIREMENT',T45,E9.3,' KWHR/YEAR') 
 222 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     WRITE(6,201)ID(MODT,1),CT 
     WRITE(6,202)ID(MODT,2),RLW 
     WRITE(6,203)ID(MODT,4),CD 
     WRITE(6,204)ID(MODT,5),SWD 
     WRITE(6,205)VCT 
     WRITE(6,206)SA 
     WRITE(6,207)CW 
     WRITE(6,208)CL 
     WRITE(6,209)CTL 
     WRITE(6,210)CTW 
     WRITE(6,211)CR 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,300) 
 300 FORMAT('0QUANTITIES FOR CHLORINATION') 
     WRITE(6,212)VEW 
     WRITE(6,213)VCS 
     WRITE(6,214)VCW 
     WRITE(6,215)SIZE 
     WRITE(6,216)NC 
     WRITE(6,217)BCC 
     WRITE(6,218)AS 
     WRITE(6,219)OMH 
     WRITE(6,220)FMMH 
     WRITE(6,221)FKWH 
     WRITE(6,222)OMMP 
     RETURN 
     END 
     SUBROUTINE ZCHLOX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     EQUIVALENCE (QQ(1),CT),(QQ(2),RLW),(QQ(3),AS), 
    >(QQ( 4),CD    ),(QQ( 5),SWD   ),(QQ( 6),VCT   ),(QQ( 7),CW    ), 
    >(QQ( 8),CL    ),(QQ( 9),CTL   ),(QQ(10),CTW   ),(QQ(11),CR    ), 
    >(QQ(12),VEW   ),(QQ(13),VCW   ),(QQ(14),NC    ),(QQ(15),SIZE  ), 
    >(QQ(16),BCC   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMMP  ),(QQ(21),XHLCO ),(QQ(22),XOSTCL),(QQ(23),SA), 
    >(QQ(24),VCS),(QQ(25),RSCL),(QQ(26),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,26) 
     VCT=QMAX*CT*10.0**6/1440.0 
     SA=VCT/7.48/SWD 
     CW=SQRT(SA/RLW) 
     IF(CW.LT.1.0)CW=1.0 
     CL=SA/CW 
     CTL=CL/5.0+CW 
     CTW=(CW+0.5)*5.0 
     CR=QAVE*CD*8.34 
     VEW=4.0*CTL*CTW+16.0*CTW+16.0*CTL+128.0 
     VCS=(CTL+1.0)*(CTW+1.0)*0.5 
     VCW=(6.0*CTL+2.0*CTW)*0.5*(SWD+2.0) 
     SIZE=150.0 
     NC=CR*30.0/150.0+0.95 
     IF(NC.LT.2)NC=2 
     IF(CR.LE.50.0)GO TO 1 
     SIZE=2000.0 
     NC=CR*30.0/2000.0+0.95 
   1 BCC=220.0 
     AS=16.0*NC 
     IF(CR.GT.50.0)AS=140.0*NC 
     OMH=40.48*CR**0.5316 
     FMMH=15.82*CR**0.3141 
     IF(CR.GT.55.0)FMMH=7.83*CR**0.4914 
     FKWH=118000.0 
     OMMP=6.255*CR**(-0.0797) 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW*UPICW/27.0 
     COSTCS=VCS*UPICS/27.0 
     COSTCC=(COSTE+COSTCS+COSTCW)*CF 
     COSTCB=BCC*UPIBC 
     COSTS=AS*0.5*UPIBC 
     COSTCL=XOSTCL 
     IF(COSTCL.EQ.0.0)COSTCL=2700.0*FMSECI/491.6 
     COSTCE=4.33*COSTCL 
     IF(CR.GT.50.0)COSTCE=5.93*COSTCL 
     FICOST=0.3*COSTCE 
     FIEC=COSTCE+FICOST 
     TBCC=FIEC+COSTCB+COSTS+COSTCC 
     PRIN=COSTCB+COSTS+COSTCC 
     CALL AMORT(PRIN,RSST,RC1) 
     CALL AMORT(FIEC,RSCL,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=11.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CRTYP=CR*365.0/2000.0 
     CHLCO=XHLCO 
     IF(CHLCO.EQ.0.0)CHLCO=100.0*ENRCCI/2470.0 
     SUMMDA(NUM,8)=CHLCO*CRTYP 
     CALL USEREX(18) 
     CALL INIT(RR,QQ,26) 
     RETURN 
     END 
     SUBROUTINE ZCOAGI(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(11) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),TYPE),(QQ(2),CD),(QQ(3),SSEFF), 
    >(QQ( 4),PEFF  ),(QQ( 5),SLR   ),(QQ( 6),XOSTCL),(QQ( 7),CR    ), 
    >(QQ( 8),XT    ),(QQ( 9),QOF   ),(QQ(10),DIA   ),(QQ(11),N     ), 
    >(QQ(12),SWD   ),(QQ(13),VEW   ),(QQ(14),TS    ),(QQ(15),VCS   ), 
    >(QQ(16),TW    ),(QQ(17),VCW   ),(QQ(18),FMHP  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),OMMP  ), 
    >(QQ(23),BODR),(QQ(24),CODR),(QQ(25),TKNR),(QQ(26),OPH), 
    >(QQ(27),UC),(QQ(28),RSCL),(QQ(29),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'LIME','ALUM','IRON','DESI','SURF','ESTI','END ','REMO', 
    > 'OPTI','UNDE','REPL'/ 
     CALL INIT(QQ,RR,29) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,11 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11),I 
   1 TYPE=1.0 
     ID(MODT,2)=IA 
     CD=VALUE(1) 
     GO TO 50 
   2 TYPE=2 
     CD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 TYPE=3.0 
     CD=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   4 SSEFF=VALUE(1) 
     PEFF=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
   5 SLR=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   6 XOSTCL=VALUE(1) 
     GO TO 50 
   7 CALL INIT(RR,QQ,29) 
     RETURN 
   8 BODR=VALUE(1) 
     CODR=VALUE(2) 
     TKNR=VALUE(3) 
     GO TO 50 
   9 OPH=VALUE(1) 
     GO TO 50 
  10 UC=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
  11 RSCL=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZCOAGO(RR,ID,MODT) 
     DIMENSION ID(3,1) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),TYPE),(QQ(2),CD),(QQ(3),SSEFF), 
    >(QQ( 4),PEFF  ),(QQ( 5),SLR   ),(QQ( 6),XOSTCL),(QQ( 7),CR    ), 
    >(QQ( 8),XT    ),(QQ( 9),QOF   ),(QQ(10),DIA   ),(QQ(11),N     ), 
    >(QQ(12),SWD   ),(QQ(13),VEW   ),(QQ(14),TS    ),(QQ(15),VCS   ), 
    >(QQ(16),TW    ),(QQ(17),VCW   ),(QQ(18),FMHP  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),OMMP  ), 
    >(QQ(23),BODR),(QQ(24),CODR),(QQ(25),TKNR),(QQ(26),OPH), 
    >(QQ(27),UC),(QQ(28),RSCL),(QQ(29),RSST) 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,29) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0','COAGULATION') 
     NC=TYPE 
     IF(NC.EQ.1)WRITE(6,101)ID(MODT,2),CD 
     IF(NC.EQ.2)WRITE(6,201)ID(MODT,2),CD 
     IF(NC.EQ.3)WRITE(6,303)ID(MODT,2),CD 
 101 FORMAT('0',A1,' LIME DOSAGE            ',T45,E9.3,' MG/L') 
 201 FORMAT('0',A1,' ALUM DOSAGE            ',T45,E9.3,' MG/L') 
 303 FORMAT('0',A1,' IRON SALT DOSAGE       ',T45,E9.3,' MG/L') 
 102 FORMAT('   DIAMETER',T45,E9.3,' FEET') 
 103 FORMAT('   NUMBER OF UNITS',T45,I9) 
 104 FORMAT('   SIDEWATER DEPTH',T45,E9.3,' FEET') 
 105 FORMAT(' ',A1,' SURFACE LOADING RATE',T45,E9.3,' GAL/DAY/SQFT') 
 106 FORMAT('   TOTAL SLUDGE PRODUCTION',T45,E9.3,' LBS/DAY') 
 107 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
     WRITE(6,102)DIA 
     WRITE(6,103)N 
     WRITE(6,104)SWD 
     WRITE(6,105)ID(MODT,4),SLR 
     WRITE(6,106)XT 
     WRITE(6,206)ID(MODT,1),UC 
 206 FORMAT(' ',A1,' UNDERFLOW CONCENTRATION',T45,E9.3,' PERCENT') 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,200) 
 200 FORMAT('0QUANTITIES FOR CHEMICAL COAGULATION') 
     WRITE(6,10)VEW 
10   FORMAT('0  EARTHWORK REQUIRED ',T45,E9.3,' CU FT') 
     WRITE(6,11)TS 
11   FORMAT('   THICKNESS OF SLAB',T45,E9.3,' INCHES') 
     WRITE(6,12)TW 
12   FORMAT('   WALL THICKNESS',T45,E9.3,' INCHES') 
     WRITE(6,13)VCW 
13   FORMAT('   TOTAL WALL CONCRETE',T45,E9.3, 
    > ' CU FT') 
     WRITE(6,14)VCS 
14   FORMAT('   TOTAL SLAB CONCRETE',T45,E9.3, 
    > ' CU FT') 
     WRITE (6,15)FMHP 
15   FORMAT('   MECHANISM HORSEPOWER  INSTALLED',T45,E9.3,' HP') 
     WRITE(6,16)FKWH 
16   FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
     WRITE(6,17)OMH 
17   FORMAT('   OPERATIONAL MANPOWER',T45,E9.3,' MAN-HOURS/YEAR') 
     WRITE(6,18)FMMH 
     WRITE(6,107)OMMP 
18   FORMAT('   MAINTENANCE MANPOWER',T45,E9.3,' MAN-HOURS/YEAR') 
     RETURN 
     END 
     SUBROUTINE ZCOAGX(RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/PSLUCO/SVOLU,PSOLID,PVOLAT 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     EQUIVALENCE (QQ(1),TYPE),(QQ(2),CD),(QQ(3),SSEFF), 
    >(QQ( 4),PEFF  ),(QQ( 5),SLR   ),(QQ( 6),XOSTCL),(QQ( 7),CR    ), 
    >(QQ( 8),XT    ),(QQ( 9),QOF   ),(QQ(10),DIA   ),(QQ(11),N     ), 
    >(QQ(12),SWD   ),(QQ(13),VEW   ),(QQ(14),TS    ),(QQ(15),VCS   ), 
    >(QQ(16),TW    ),(QQ(17),VCW   ),(QQ(18),FMHP  ),(QQ(19),FKWH  ), 
    >(QQ(20),OMH   ),(QQ(21),FMMH  ),(QQ(22),OMMP  ), 
    >(QQ(23),BODR),(QQ(24),CODR),(QQ(25),TKNR),(QQ(26),OPH), 
    >(QQ(27),UC),(QQ(28),RSCL),(QQ(29),RSST) 
     CALL INIT(QQ,RR,29) 
     CR=CD*QAVE*8.34 
     XS=8.34*QAVE*(SOLIDS-SSEFF) 
     XP=0.0 
     XOH=0.0 
     XCA=0.0 
     IF(TYPE.NE.1.0)GO TO 1 
     XCA=8.34*QAVE*1.5*CD 
     GO TO 3 
   1 IF(TYPE.EQ.3.0)GO TO 2 
     XP=8.34*QAVE*4.0*(PO4-PEFF) 
     AP=(PO4-PEFF)*9.6 
     HOX=8.34*QAVE*0.263*(CD-AP) 
     GO TO 3 
   2 XP=8.34*QAVE*4.90*(PO4-PEFF) 
     FP=(PO4-PEFF)*5.23 
     XOH=8.34*QAVE*0.65*(CD-FP) 
   3 XT=XS+XP+XOH+XCA 
     QOF=SLR 
     IF(QOF.NE.0.0)GO TO 44 
     QOF=630.0 
     IF(TYPE.EQ.2.0)QOF=360.0 
     IF(TYPE.EQ.3.0)QOF=500.0 
  44 N=1 
   4 IDIA=1.13*SQRT(QAVE*10.0**6/QOF/N)+0.99 
     DIA=IDIA 
     IF(DIA.LE.200.0.OR.N.GE.2)GO TO 5 
     N=N+1 
     GO TO 4 
   5 SWD=10.67+0.067*DIA 
     SSI=SOLIDS 
     PO4I=PO4 
     PO4E=PEFF 
     SSE=SSEFF 
     PO4R=0.0 
     IF(PO4.NE.0.0)PO4R=100.0*(1.0-PO4E/PO4) 
     SSR=0.0 
     IF(SOLIDS.NE.0.0)SSR=100.0*(1.0-SSE/SOLIDS) 
     PH=OPH 
     PSP=(QAVE*SSI/100.0*SSR*8.34)*1.5 
     VPSP=PSP/1.05/(UC/100.0)/8.34 
     BODE=BOD5*(1.0-BODR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     CODE=COD*(1.0-CODR/100.0) 
     IF(CODE.LT.CODS)CODE=CODS 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     COD=CODE 
     CODS=COD 
     TKN=TKNE 
     PO4=PO4E 
     BOD5=BODE 
     BOD5S=BOD5 
     SOLIDS=SSE 
     TOTAL=SVOLU+VPSP 
     TSS=(VPSP*UC+SVOLU*PSOLID)/TOTAL 
     VSS=(VPSP*UC*VOLAT+SVOLU*PSOLID*PVOLAT)/(VPSP*UC+SVOLU*PSOLID) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     SETSO=0.0 
     OAG=0.0 
     VEW=1.15*N*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     TS=7.9+0.25*SWD 
     VCS=N*0.825*(DIA+4.0)**2*TS/12.0 
     TW=7.0+0.5*SWD 
     VCW=3.14*N*(SWD+1.5)*DIA*TW/12.0 
     FMHP=1.0 
     IF(DIA.GT.20.0)FMHP=0.0053*DIA**1.75 
     IF(DIA.GT.90.0)FMHP=7.62*DIA**0.1351 
     FKWH=6701.0*N*FMHP 
     OMH=304.0 
     IF(QAVE.GT.0.1)OMH=1093.8*QAVE**0.5561 
     FMMH=128.0 
     IF(QAVE.GT.0.1)FMMH=474.8*QAVE**0.5693 
     OMMP=1.0 
     ANC=CR*365.0 
     CF=1.18 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTRO=0.0164*DIA 
     COSTCL=XOSTCL 
     IF(COSTCL.EQ.0.0)COSTCL=110000.0*FMSECI/491.6 
     COSTCM=COSTCL*COSTRO 
     FIMH=200.0+25.0*DIA 
     CH=0.1*FIMH 
     PMINC=5.0 
     FIEC=(COSTCM*(1.0+PMINC/100.0)+FIMH*FLABRI+CH*UPICR)*N 
     TBCC=(COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSCL,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     ITYP=TYPE 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=60.0 
     SUMMDA(NUM,ITYP+9)=CR 
     SUMMDA(NUM,ITYP+14)=ANC 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(68) 
     CALL INIT(RR,QQ,29) 
     RETURN 
     END 
     SUBROUTINE ZDRYII(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(4) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE 
    >(QQ( 1),SLR   ),(QQ( 2),DSP   ),(QQ( 3),SA    ),(QQ( 4),NS    ), 
    >(QQ( 5),SAN   ),(QQ( 6),FLN   ),(QQ( 7),VEW   ),(QQ( 8),VCW   ), 
    >(QQ( 9),VCS   ),(QQ(10),VS    ),(QQ(11),VG    ),(QQ(12),CPL   ), 
    >(QQ(13),TPD   ),(QQ(14),OMMH  ),(QQ(15),FMMH  ),(QQ(16),COSTCP), 
    >(QQ(17),COGRVL),(QQ(18),COSAND),(QQ(19),RSCP),(QQ(20),RSST) 
     DATA LIST/'SOLI','ESTI','END ','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,20) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4),I 
   1 SLR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 COSTCP=VALUE(1) 
     COSAND=VALUE(2) 
     COGRVL=VALUE(3) 
     GO TO 50 
   3 CALL INIT(RR,QQ,20) 
     RETURN 
   4 RSCP=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZDRYIO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL 
     EQUIVALENCE 
    >(QQ( 1),SLR   ),(QQ( 2),DSP   ),(QQ( 3),SA    ),(QQ( 4),NS    ), 
    >(QQ( 5),SAN   ),(QQ( 6),FLN   ),(QQ( 7),VEW   ),(QQ( 8),VCW   ), 
    >(QQ( 9),VCS   ),(QQ(10),VS    ),(QQ(11),VG    ),(QQ(12),CPL   ), 
    >(QQ(13),TPD   ),(QQ(14),OMMH  ),(QQ(15),FMMH  ),(QQ(16),COSTCP), 
    >(QQ(17),COGRVL),(QQ(18),COSAND),(QQ(19),RSCP),(QQ(20),RSST) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0DRYING BEDS') 
     CALL INIT(QQ,RR,20) 
 101 FORMAT('0',A1,' SOLIDS LOADING RATE',T45,E9.3,' LB/SQFT/YR') 
 102 FORMAT('   SURFACE AREA',T45,E9.3,' SQ FT') 
 103 FORMAT('   NUMBER OF SECTIONS',T45,I9) 
 104 FORMAT('   SURFACE AREA PER SECTION',T45,E9.3,' SQ FT') 
 105 FORMAT('   DRY SOLIDS PRODUCED',T45,E9.3,' TONS/DAY') 
     WRITE(6,101)ID(MODT,1),SLR 
     WRITE(6,102)SA 
     WRITE(6,103)NS 
     WRITE(6,104)SAN 
     WRITE(6,105)TPD 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR DRYING BEDS') 
   2 FORMAT('0LENGTH OF BEDS',T45,E9.3,' FEET') 
   3 FORMAT(' WIDTH OF BEDS',T45,E9.3,' FEET') 
   4 FORMAT(' VOLUME OF EXCAVATION',T45,E9.3,' CU FT') 
   5 FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
   6 FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
   7 FORMAT(' VOLUME OF SAND',T45,E9.3,' CU FT') 
   8 FORMAT(' VOLUME OF GRAVEL',T45,E9.3,' CU FT') 
   9 FORMAT(' LENGTH OF DRAIN REQUIRED',T45,E9.3,' FEET') 
  10 FORMAT(' OPERATION MANHOURS',T45,E9.3,' MAN-HRS/YEAR') 
  11 FORMAT(' MAINTENANCE MANHOURS',T45,E9.3,' MAN-HRS/YEAR') 
     WRITE(6,2)FLN 
     WRITE(6,3)FLN 
     WRITE(6,4)VEW 
     WRITE(6,5)VCW 
     WRITE(6,6)VCS 
     WRITE(6,7)VS 
     WRITE(6,8)VG 
     WRITE(6,9)CPL 
     WRITE(6,10)OMMH 
     WRITE(6,11)FMMH 
     RETURN 
     END 
     SUBROUTINE ZDRYIX(PVOLU,PSOLID,PVOLAT,RR) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE 
    >(QQ( 1),SLR   ),(QQ( 2),DSP   ),(QQ( 3),SA    ),(QQ( 4),NS    ), 
    >(QQ( 5),SAN   ),(QQ( 6),FLN   ),(QQ( 7),VEW   ),(QQ( 8),VCW   ), 
    >(QQ( 9),VCS   ),(QQ(10),VS    ),(QQ(11),VG    ),(QQ(12),CPL   ), 
    >(QQ(13),TPD   ),(QQ(14),OMMH  ),(QQ(15),FMMH  ),(QQ(16),COSTCP), 
    >(QQ(17),COGRVL),(QQ(18),COSAND),(QQ(19),RSCP),(QQ(20),RSST) 
     CALL INIT(QQ,RR,20) 
     FNUM=87.0 
     DSP=PVOLU*PSOLID*8.34*365.0/100.0 
     SA=DSP/SLR 
     NS=SA/3000.0+0.5 
     IF(NS.LT.3)NS=3 
     SAN=SA/NS 
     FLN=SAN/20.0 
     VEW=80.0*NS*FLN+16.0*FLN+320.0*NS+64.0 
     VCW=208.0*NS+5.2*NS*FLN+5.2*FLN 
     VCS=8.0*NS*FLN 
     VS=0.75*SA 
     VG=SA 
     CPL=2.0*NS*FLN+20.0*NS 
     TPD=DSP/365.0/2000.0 
     OMMH=360.0 
     IF(TPD.GT.0.09)OMMH=964.0*TPD**0.409 
     FMMH=160.0 
     IF(TPD.GT.0.09)FMMH=432.8*TPD**0.409 
     OMMP=0.9 
     CF=1.11 
     COSTE=VEW*UPIEX/27.0 
     COSTCW=VCW*UPICW/27.0 
     COSTCS=VCS*UPICS/27.0 
     IF(COSTCP.EQ.0.0)COSTCP=2.75*ENRCCI/2470.0 
     IF(COSAND.EQ.0.0)COSAND=5.90*ENRCCI/2470.0 
     IF(COGRVL.EQ.0.0)COGRVL=4.30*ENRCCI/2470.0 
     CDPS=COSTCP*CPL 
     COSM=VS*COSAND/27.0 
     COGM=VG*COGRVL/27.0 
     TBCC=CF*(COSTE+COSTCW+COSTCS+COSM+COGM)+CDPS 
     PRIN=TBCC-CDPS 
     CALL AMORT(PRIN,RSST,RC1) 
     CALL AMORT(CDPS,RSCP,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     CALL USEREX(7) 
     PVOLU=PSOLID*PVOLU/17.0 
     PSOLID=17.0 
     CALL INIT(RR,QQ,20) 
     RETURN 
     END 
     SUBROUTINE ZFILTI(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(7) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FLR),(QQ(2),FNC),(QQ(3),BWR), 
    >(QQ( 4),BWP   ),(QQ( 5),FNBW  ),(QQ( 6),SA    ),(QQ( 7),SAP   ), 
    >(QQ( 8),SAD   ),(QQ( 9),VBWS  ),(QQ(10),VCS   ),(QQ(11),W     ), 
    >(QQ(12),FL    ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),FKWH  ), 
    >(QQ(16),FMMH  ),(QQ(17),OMH   ),(QQ(18),OMMP  ),(QQ(19),XOSTSF) 
    >,(QQ(20),RSSF),(QQ(21),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'HYDR','NUMB','BACK','VOLU','ESTI','END ','REPL'/ 
     CALL INIT(QQ,RR,21) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,7 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7),I 
   1 FLR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 FNC=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 BWR=VALUE(1) 
     BWP=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 FNBW=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 XOSTSF=VALUE(1) 
     GO TO 50 
   6 CALL INIT(RR,QQ,21) 
     RETURN 
   7 RSSF=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZFILTO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON ICTL,KCTL 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FLR),(QQ(2),FNC),(QQ(3),BWR), 
    >(QQ( 4),BWP   ),(QQ( 5),FNBW  ),(QQ( 6),SA    ),(QQ( 7),SAP   ), 
    >(QQ( 8),SAD   ),(QQ( 9),VBWS  ),(QQ(10),VCS   ),(QQ(11),W     ), 
    >(QQ(12),FL    ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),FKWH  ), 
    >(QQ(16),FMMH  ),(QQ(17),OMH   ),(QQ(18),OMMP  ),(QQ(19),XOSTSF) 
    >,(QQ(20),RSSF),(QQ(21),RSST) 
     COMMON/STARCO/STARDA(19) 
     CALL INIT(RR,QQ,21) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     NC=FNC 
     NBW=FNBW 
     WRITE(6,200) 
 200 FORMAT('0PACKAGE PLANT GRAVITY FILTRATION') 
     WRITE(6,101)ID(MODT,1),FLR 
     WRITE(6,102)ID(MODT,2),NC 
     WRITE(6,103)ID(MODT,3),BWR 
     WRITE(6,104)ID(MODT,3),BWP 
     WRITE(6,105)ID(MODT,4),NBW 
     WRITE(6,106)SA 
     IF(SAP.NE.SA)WRITE(6,107)SAP 
     WRITE(6,108)SAD 
     WRITE(6,109)VBWS 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)GO TO 1 
     CALL TITLE 
     WRITE(6,1090) 
1090 FORMAT('0QUANTITIES FOR GRAVITY FILTRATION') 
     WRITE(6,110)VCS 
     WRITE(6,114)VCW 
     WRITE(6,111)W 
     WRITE(6,112)FL 
     WRITE(6,113)VEW 
     WRITE(6,115)FKWH 
     WRITE(6,116)FMMH 
     WRITE(6,117)OMH 
     WRITE(6,118)OMMP 
 101 FORMAT('0',A1,' HYDRAULIC LOADING RATE',T45,E9.3,' GPM/SQFT') 
 102 FORMAT(' ',A1,' NUMBER OF FILTER CELLS',T45,I9) 
 103 FORMAT(' ',A1,' MINIMUM BACKWASH RATE',T45,E9.3,' GPM/SQFT') 
 104 FORMAT(' ',A1,' MINIMUM BACKWASH PERIOD',T45,E9.3,' MIN') 
 105 FORMAT(' ',A1,' NUMBER OF BACKWASH VOLUMES',T45,I9) 
 106 FORMAT('   FILTER AREA REQUIRED (HYDRAULIC LOADING)',T45,E9.3, 
    > ' SQ FT') 
 107 FORMAT('   FILTER AREA REQUIRED (PEAK FLOW)',T45,E9.3, 
    > ' SQ FT') 
 108 FORMAT('   DESIGN FILTER SURFACE AREA',T45,E9.3,' SQ FT') 
 109 FORMAT('   VOLUME OF BACKWASH SURGE TANK',T45,E9.3,' CU FT') 
 110 FORMAT('0  VOLUME OF REINFORCED SLAB CONCRETE',T45,E9.3,' CU FT') 
 111 FORMAT('   WIDTH OF BACKWASH SURGE TANK',T45,E9.3,' FEET') 
 112 FORMAT('   LENGTH OF BACKWASH SURGE TANK',T45,E9.3,' FEET') 
 113 FORMAT('   VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
 114 FORMAT('   VOLUME OF REINFORCED WALL CONRETE',T45,E9.3,' CU FT') 
 115 FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
 116 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HOURS/YEAR') 
 117 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HOURS/YEAR') 
 118 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
   1 CALL INIT(RR,QQ,21) 
     RETURN 
     END 
     SUBROUTINE ZFILTX(RR) 
     DIMENSION RR(1) 
     EQUIVALENCE (QQ(1),FLR),(QQ(2),FNC),(QQ(3),BWR), 
    >(QQ( 4),BWP   ),(QQ( 5),FNBW  ),(QQ( 6),SA    ),(QQ( 7),SAP   ), 
    >(QQ( 8),SAD   ),(QQ( 9),VBWS  ),(QQ(10),VCS   ),(QQ(11),W     ), 
    >(QQ(12),FL    ),(QQ(13),VEW   ),(QQ(14),VCW   ),(QQ(15),FKWH  ), 
    >(QQ(16),FMMH  ),(QQ(17),OMH   ),(QQ(18),OMMP  ),(QQ(19),XOSTSF) 
    >,(QQ(20),RSSF),(QQ(21),RSST) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/QQCO/QQ(100) 
     CALL INIT(QQ,RR,21) 
     SA=QAVE*10.0**6/1440.0/FLR 
     SAP=SA 
     IF(FNC.GT.1.0)SAP=QMAX*10.0**6*FNC/5.0/1440.0/(FNC-1.0) 
     SAD=SA 
     IF(SAP.GT.SA)SAD=SAP 
     VBWS=SAD*BWR*BWP*FNBW/FNC/7.48 
     SOLIDS=0.4*SOLIDS 
     BOD5=BOD5S 
     COD=CODS 
     TKN=FNH3 
     OAG=0.0 
     SETSO=0.0 
     VCS=1.434*SAD+32.8 
     W=SQRT(VBWS/14.0) 
     FL=2.0*W 
     A1=(FL+5.0)*(W+5.0) 
     A2=(FL+25.0)*(W+25.0) 
     VEW=10.0/3.0*(A1+A2+SQRT(A1*A2)) 
     VCW=2.0*W**2+75.0*W+25.0 
     FKWH=8213.0*QAVE**0.972 
     FMMH=112.0 
     IF(QAVE.GT.0.1)FMMH=432.0*QAVE**0.585 
     OMH=176.0 
     IF(QAVE.GT.0.1)OMH=643.2*QAVE**0.572 
     OMMP=5.0 
     CF=1.25 
     COSTE=VEW/27.0*UPIEX 
     COSTCS=VCS/27.0*UPICS 
     COSTCW=VCW/27.0*UPICW 
     COSTC=COSTCW+COSTCS 
     COSTRO=65.0*SAD**0.0898 
     IF(SAD.GT.175.0)COSTRO=14.5*SAD**0.381 
     IF(XOSTSF.EQ.0.0)COSTSF=73760.0*FMSECI/491.60 
     COSTF=COSTRO*COSTSF/100.0 
     FIFC=1.50*COSTF 
     TBCC=(COSTE+COSTC+FIFC)*CF 
     PRIN=CF*(COSTE+COSTC) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIFC 
     CALL AMORT(PRIN,RSSF,RC2) 
     OMMC=FIFC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=3.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(10) 
     CALL INIT(RR,QQ,21) 
     RETURN 
     END 
     SUBROUTINE ZFLOTI(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(14) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE 
    >(QQ( 1),RSST),(QQ( 2),AOSR  ),(QQ( 3),PSIG  ),(QQ( 4),DTFT  ), 
    >(QQ( 5),HL    ),(QQ( 6),DTPT  ),(QQ( 7),FC    ),(QQ( 8),SA    ), 
    >(QQ( 9),VOLFT ),(QQ(10),VOLPT ),(QQ(11),SG    ),(QQ(12),ICHEM ), 
    >(QQ(13),CD    ),(QQ(14),CU    ),(QQ(15),NU    ),(QQ(16),FMMH), 
    >(QQ(17),SAS   ),(QQ(18),DIA   ),(QQ(19),COSTPS),(QQ(20),AB    ), 
    >(QQ(21),VEW   ),(QQ(22),SWD   ),(QQ(23),VCST  ),(QQ(24),VCWT  ), 
    >(QQ(25),DSTPD ),(QQ(26),OMH  ),(QQ(27),R),(QQ(28),SSR), 
    >(QQ(29),BODR),(QQ(30),CODR),(QQ(31),TKNR),(QQ(32),PO4R), 
    >(QQ(33),FKWH),(QQ(34),RSSF) 
     DATA LIST/'AIR/','AIR ','DETE','HYDR','FLOA','SPEC','ESTI','END', 
    >'LIME','ALUM','IRON','POLY','REMO','REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,34) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,14 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14),I 
   1 AOSR=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 PSIG=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 DTFT=VALUE(1) 
     DTPT=VALUE(2) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 HL=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 FC=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
   6 SG=VALUE(1) 
     ID(MODT,6)=IA 
     GO TO 50 
   7 COSTFS=VALUE(1) 
     GO TO 50 
   8 CALL INIT(RR,QQ,34) 
     RETURN 
   9 ICHEM=1 
     CD=VALUE(1) 
     ID(MODT,7)=IA 
     GO TO 50 
  10 ICHEM=2 
     ID(MODT,7)=IA 
     GO TO 50 
  11 ICHEM=3 
     CD=VALUE(1) 
     GO TO 50 
  12 ICHEM=4 
     CD=VALUE(1) 
     GO TO 50 
  13 SSR=VALUE(1) 
     BODR=VALUE(2) 
     CODR=VALUE(3) 
     TKNR=VALUE(4) 
     PO4R=VALUE(4) 
     GO TO 50 
  14 RSSF=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZFLOTO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL 
     EQUIVALENCE 
    >(QQ( 1),RSST),(QQ( 2),AOSR  ),(QQ( 3),PSIG  ),(QQ( 4),DTFT  ), 
    >(QQ( 5),HL    ),(QQ( 6),DTPT  ),(QQ( 7),FC    ),(QQ( 8),SA    ), 
    >(QQ( 9),VOLFT ),(QQ(10),VOLPT ),(QQ(11),SG    ),(QQ(12),ICHEM ), 
    >(QQ(13),CD    ),(QQ(14),CU    ),(QQ(15),NU    ),(QQ(16),FMMH), 
    >(QQ(17),SAS   ),(QQ(18),DIA   ),(QQ(19),COSTFS),(QQ(20),AB    ), 
    >(QQ(21),VEW   ),(QQ(22),SWD   ),(QQ(23),VCST  ),(QQ(24),VCWT  ), 
    >(QQ(25),DSTPD ),(QQ(26),OMH  ),(QQ(27),R),(QQ(28),SSR), 
    >(QQ(29),BODR),(QQ(30),CODR),(QQ(31),TKNR),(QQ(32),PO4R), 
    >(QQ(33),FKWH),(QQ(34),RSSF) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0FLOTATION') 
     CALL INIT(QQ,RR,34) 
 101 FORMAT('0',A1,' AIR/SOLIDS RATIO',T45,E9.3) 
 102 FORMAT(' ',A1,' AIR PRESSURE',T45,E9.3,' PSIG') 
 103 FORMAT(' ',A1,' FLOAT TANK DETENTION TIME',T45,E9.3,' HOURS') 
 104 FORMAT(' ',A1,' PRESSURE TANK DETENTION TIME',T45,E9.3,' MIN') 
 105 FORMAT(' ',A1,' LIME DOSAGE',T45,E9.3,' MG/L') 
 106 FORMAT(' ',A1,' ALUM DOSAGE',T45,E9.3,' MG/L') 
 107 FORMAT(' ',A1,' IRON SALT DOSAGE',T45,E9.3,' MG/L') 
 108 FORMAT(' ',A1,' POLYMER DOSAGE',T45,E9.3,' MG/L') 
 109 FORMAT(' ',A1,' HYDRAULIC LOADING',T45,E9.3,' GPM/SQFT') 
 110 FORMAT('   RECYCLE FLOW',T45,E9.3,' MGD') 
 111 FORMAT('   SURFACE AREA',T45,E9.3,' SQ FT') 
 112 FORMAT('   FLOAT TANK VOLUME',T45,E9.3,' CU FT') 
 113 FORMAT('   PRESSURE TANK VOLUME',T45,E9.3,' CU FT') 
 114 FORMAT('   CHEMICAL USE',T45,E9.3,' LB/DAY') 
     WRITE(6,101)ID(MODT,1),AOSR 
     WRITE(6,102)ID(MODT,2),PSIG 
     WRITE(6,103)ID(MODT,3),DTFT 
     WRITE(6,104)ID(MODT,3),DTPT 
     WRITE(6,109)ID(MODT,4),HL 
     IF(ICHEM.EQ.1)WRITE(6,105)ID(MODT,7),CD 
     IF(ICHEM.EQ.2)WRITE(6,106)ID(MODT,7),CD 
     IF(ICHEM.EQ.3)WRITE(6,107)ID(MODT,7),CD 
     IF(ICHEM.EQ.4)WRITE(6,108)ID(MODT,7),CD 
     WRITE(6,110)R 
     WRITE(6,111)SA 
     WRITE(6,112)VOLFT 
     WRITE(6,113)VOLPT 
     WRITE(6,114)CU 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR FLOTATION') 
   2 FORMAT(' NUMBER OF UNITS',T45,I9) 
   3 FORMAT(' SURFACE AREA PER UNIT',T45,E9.3,' SQ FT') 
   4 FORMAT(' UNIT DIAMETER',T45,E9.3,' FEET') 
   5 FORMAT(' SIDEWATER DEPTH',T45,E9.3,' FEET') 
   6 FORMAT(' BUILDING AREA',T45,E9.3,' SQ FT') 
   7 FORMAT(' VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
   8 FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
   9 FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
  10 FORMAT(' OPERATION MANHOURS',T45,E9.3,' MAN-HRS/YEAR') 
  11 FORMAT(' MAINTENANCE MANHOURS',T45,E9.3,' MAN-HRS/YEAR') 
  12 FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YR') 
     WRITE(6,2)NU 
     WRITE(6,3)SAS 
     WRITE(6,4)DIA 
     WRITE(6,5)SWD 
     WRITE(6,6)AB 
     WRITE(6,7)VEW 
     WRITE(6,8)VCWT 
     WRITE(6,9)VCST 
     WRITE(6,10)OMH 
     WRITE(6,11)FMMH 
     WRITE(6,12)FKWH 
     RETURN 
     END 
     SUBROUTINE ZFLOTX(RR) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/PSLUCO/PVOLU,PSOLID,PVOLAT 
     DIMENSION RR(1),SSU(13) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE 
    >(QQ( 1),RSST),(QQ( 2),AOSR  ),(QQ( 3),PSIG  ),(QQ( 4),DTFT  ), 
    >(QQ( 5),HL    ),(QQ( 6),DTPT  ),(QQ( 7),FC    ),(QQ( 8),SA    ), 
    >(QQ( 9),VOLFT ),(QQ(10),VOLPT ),(QQ(11),SG    ),(QQ(12),ICHEM ), 
    >(QQ(13),CD    ),(QQ(14),CU    ),(QQ(15),NU    ),(QQ(16),FMMH), 
    >(QQ(17),SAS   ),(QQ(18),DIA   ),(QQ(19),COSTFS),(QQ(20),AB    ), 
    >(QQ(21),VEW   ),(QQ(22),SWD   ),(QQ(23),VCST  ),(QQ(24),VCWT  ), 
    >(QQ(25),DSTPD ),(QQ(26),OMH  ),(QQ(27),R),(QQ(28),SSR), 
    >(QQ(29),BODR),(QQ(30),CODR),(QQ(31),TKNR),(QQ(32),PO4R), 
    >(QQ(33),FKWH),(QQ(34),RSSF) 
     DATA SSU/40.0,50.0,70.0,100.0,140.0,200.0,280.0,350.0, 
    >450.0,570.0,750.0,960.0,1250.0/ 
     CALL INIT(QQ,RR,34) 
     FNUM=2.0 
     P=(PSIG+14.7)/14.7 
     AS=18.7 
     R=AOSR*QAVE*SOLIDS/(1.3*AS*(0.5*P-1.0)) 
     SA=(QAVE+R)*10.0**6/(HL*60.0*24.0) 
     VOLFT=(QAVE+R)*DTFT*10.0**6/7.48/24.0 
     VOLPT=R*DTPT/7.48/24.0/60.0*10.0**6 
     VS=QAVE*SOLIDS*SSR/FC/SG 
     CU=0.0 
     IF(ICHEM.NE.0)CU=CD*QAVE*8.34 
     DSTPD=QAVE*SOLIDS*8.34/2000.0 
     VSW=QAVE*SOLIDS*SSR/100.0/(FC/100.0*SG) 
     SSE=SOLIDS*(1.0-SSR/100.0) 
     SOLIDS=SSE 
     TOTAL=VSW+PVOLU 
     TSS=(VSW*FC+PVOLU*PSOLID)/TOTAL 
     VSS=(VSW*FC*VOLAT+PVOLU*PSOLID*PVOLAT)/(VSW*FC+PVOLU*PSOLID) 
     PVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     PO4=PO4*(1.0-PO4R/100.0) 
     SETSO=0.0 
     OAG=OAG*0.05 
     BODE=BOD5*(1.0-BODR/100.0) 
     CODE=COD*(1.0-CODR/100.0) 
     TKNE=TKN*(1.0-TKNR/100.0) 
     IF(BODE.LT.BOD5S)BODE=BOD5S 
     IF(CODE.LT.CODS)CODE=CODS 
     IF(TKNE.LT.FNH3)TKNE=FNH3 
     BOD5=BODE 
     COD=CODE 
     TKN=TKNE 
     NU=1 
   1 IF(SA/NU.LE.1250.0)GO TO 2 
     NU=NU+1 
     GO TO 1 
   2 SAPU=SA/NU 
     DO 3 I=1,13 
     IF(SSU(I).GE.SAPU)GO TO 4 
   3 CONTINUE 
     I=13 
   4 SAS=SSU(I) 
     DIA=1.13*SQRT(SAS) 
     AB=(DIA+2.0)*(DIA+5.0)*NU 
     VEW=1.15*NU*(0.035*DIA**3+4.88*DIA**2+77.0*DIA+350.0) 
     SWD=6.72+0.0476*DIA 
     TS=7.9+0.25*SWD 
     TW=7.0+0.5*SWD 
     VCS=0.825*(DIA+4.0)**2*TS/12.0*NU 
     VCW=3.14*(SWD+1.0)*DIA*TW/12.0*NU 
     FNU=NU 
     VCB=100.0*FNU**1.13 
     VCWT=VCW+VCB 
     VCST=VCS 
     OMH=240.0 
     IF(DSTPD.GT.0.1)OMH=558.4*DSTPD**0.3667 
     FMMH=64.0 
     IF(DSTPD.GT.0.1)FMMH=160.0*DSTPD**0.3979 
     FKWH=23500.0 
     IF(DSTPD.GT.0.35)FKWH=63000.0*DSTPD**0.9422 
     OMMP=1.0 
     CF=1.18 
     COSTB=AB*UPIBC*0.75 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCWT*UPICW/27.0 
     COSTCS=VCST*UPICS/27.0 
     XOSTFS=COSTFS 
     IF(XOSTFS.EQ.0.0)XOSTFS=44200.0*FMSECI/491.6 
     COSTRO=0.3*SAS+25.0 
     IF(SAS.GT.240.0)COSTRO=0.092*SAS+75.0 
     IF(SAS.GT.480.0)COSTRO=0.161*SAS+43.0 
     COSTF=XOSTFS*COSTRO/100.0 
     EIC=0.75*COSTF 
     FIEC=(COSTF+EIC)*NU 
     TBCC=(COSTB+COSTE+COSTCW+COSTCS+FIEC)*CF 
     PRIN=CF*(COSTB+COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSSF,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     IF(ICHEM.EQ.0)GO TO 22 
     SUMMDA(NUM,ICHEM+9)=CU 
     CUYR=CU*365.0 
     SUMMDA(NUM,ICHEM+13)=CUYR 
  22 SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(9) 
     CALL INIT(RR,QQ,34) 
     RETURN 
     END 
     SUBROUTINE ZINTEI(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(6),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),HLR),(QQ(2),FBD),(QQ(3),FA), 
    >(QQ( 4),AFB   ),(QQ( 5),FNBED ),(QQ( 6),FLS   ),(QQ( 7),FLT   ), 
    >(QQ( 8),DC    ),(QQ( 9),DF    ),(QQ(10),VEW   ),(QQ(11),VS    ), 
    >(QQ(12),VGL   ),(QQ(13),FLDP  ),(QQ(14),QD    ),(QQ(15),D     ), 
    >(QQ(16),FLP   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),OMMP  ), 
    >(QQ(20),XOSAND),(QQ(21),XOGRVL),(QQ(22),XOSTCP),(QQ(23),XOSTSP) 
    >,(QQ(24),RSCP),(QQ(25),RSSP),(QQ(26),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'NUMB','HYDR','DEPT','ESTI','END','REPL'/ 
     CALL INIT(QQ,RR,26) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,6 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6),I 
   1 FNBED=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 HLR=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 FBD=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 XOSAND=VALUE(1) 
     XOGRVL=VALUE(2) 
     XOSTCP=VALUE(3) 
     XOSTSP=VALUE(4) 
     GO TO 50 
   5 CALL INIT(RR,QQ,26) 
     RETURN 
   6 RSCP=VALUE(1) 
     RSSP=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
     END 
     SUBROUTINE ZINTEO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/STARCO/STARDA(19) 
     EQUIVALENCE (QQ(1),HLR),(QQ(2),FBD),(QQ(3),FA), 
    >(QQ( 4),AFB   ),(QQ( 5),FNBED ),(QQ( 6),FLS   ),(QQ( 7),FLT   ), 
    >(QQ( 8),DC    ),(QQ( 9),DF    ),(QQ(10),VEW   ),(QQ(11),VS    ), 
    >(QQ(12),VGL   ),(QQ(13),FLDP  ),(QQ(14),QD    ),(QQ(15),D     ), 
    >(QQ(16),FLP   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),OMMP  ), 
    >(QQ(20),XOSAND),(QQ(21),XOGRVL),(QQ(22),XOSTCP),(QQ(23),XOSTSP) 
    >,(QQ(24),RSCP),(QQ(25),RSSP),(QQ(26),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,26) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0INTERMITTENT SAND FILTER') 
 101 FORMAT('0',A1,' NUMBER OF FILTER BEDS',T45,I9) 
 102 FORMAT(' ',A1,' HYDRAULIC LOADING RATE',T45,E9.3,' GAL/ACRE/DAY') 
 103 FORMAT(' ',A1,' FILTER BED DEPTH',T45,E9.3,' INCHES') 
 104 FORMAT('   FILTER AREA REQUIRED',T45,E9.3,' ACRES') 
 105 FORMAT('   AREA PER FILTER BED',T45,E9.3,' SQ FT') 
 106 FORMAT('0  LENGTH OF BED AT TOP OF SAND',T45,E9.3,' FEET') 
 107 FORMAT('   WIDTH OF BED AT TOP OF SAND',T45,E9.3,' FEET') 
 108 FORMAT('   DEPTH OF CUT',T45,E9.3,' FEET') 
 109 FORMAT('   DEPTH OF FILL',T45,E9.3,' FEET') 
 110 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 111 FORMAT('   VOLUME OF SAND',T45,E9.3,' CU FT') 
 112 FORMAT('   VOLUME OF GRAVEL',T45,E9.3,' CU FT') 
 113 FORMAT('   LENGTH OF DRAIN PIPE',T45,E9.3,' FEET') 
 114 FORMAT('   INFLUENT PIPE DIAMETER',T45,E9.3,' INCHES') 
 115 FORMAT('   LENGTH OF INFLUENT PIPE',T45,E9.3,' FEET') 
 116 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
 117 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
 118 FORMAT('   O & M MATERIAL AND SUPPLY COST',T45,E9.3,' PERCENT') 
     NB=FNBED 
     WRITE(6,101)ID(MODT,1),NB 
     WRITE(6,102)ID(MODT,2),HLR 
     WRITE(6,103)ID(MODT,3),FBD 
     WRITE(6,104)FA 
     WRITE(6,105)AFB 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,201) 
 201 FORMAT('0QUANTITIES FOR INTERMITTENT SAND FILTERS') 
     WRITE(6,106)FLS 
     WRITE(6,107)FLS 
     WRITE(6,108)DC 
     WRITE(6,109)DF 
     WRITE(6,110)VEW 
     WRITE(6,111)VS 
     WRITE(6,112)VGL 
     WRITE(6,113)FLDP 
     WRITE(6,114)D 
     WRITE(6,115)FLP 
     WRITE(6,116)OMH 
     WRITE(6,117)FMMH 
     WRITE(6,118)OMMP 
     RETURN 
     END 
     SUBROUTINE ZINTEX(RR) 
     DIMENSION DIAM(16) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     EQUIVALENCE (QQ(1),HLR),(QQ(2),FBD),(QQ(3),FA), 
    >(QQ( 4),AFB   ),(QQ( 5),FNBED ),(QQ( 6),FLS   ),(QQ( 7),FLT   ), 
    >(QQ( 8),DC    ),(QQ( 9),DF    ),(QQ(10),VEW   ),(QQ(11),VS    ), 
    >(QQ(12),VGL   ),(QQ(13),FLDP  ),(QQ(14),QD    ),(QQ(15),D     ), 
    >(QQ(16),FLP   ),(QQ(17),OMH   ),(QQ(18),FMMH  ),(QQ(19),OMMP  ), 
    >(QQ(20),XOSAND),(QQ(21),XOGRVL),(QQ(22),XOSTCP),(QQ(23),XOSTSP) 
    >,(QQ(24),RSCP),(QQ(25),RSSP),(QQ(26),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     DATA DIAM/2.0,3.0,4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0, 
    >20.0,24.0,30.0,36.0,42.0,48.0/ 
     CALL INIT(QQ,RR,26) 
     FA=QAVE*10.0**6/HLR 
     AFB=FA*43560.0/FNBED 
     BOD5=BOD5*0.3 
     IF(BOD5.LT.BOD5S)BOD5=BOD5S 
     COD=COD*0.3 
     IF(COD.LT.CODS)COD=CODS 
     TKN=FNH3 
     OAG=0.0 
     SOLIDS=0.4*SOLIDS 
     FLS=SQRT(AFB) 
     FLT=FLS+12.0 
     DC=1.0 
   1 DF=FBD/12.0+3.0-DC 
     FLC=FLS-6.0*(FBD/12.0+1.0-DC) 
     VC=1.3*FNBED*DC*(FLC**2-6.0*DC*FLC+12.0*DC**2) 
     VF=FLT*10.0*(10.0*DF+3.0*DF**2) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 4 
     DC=DC+0.10*PERC/ABS(PERC) 
     GO TO 1 
   4 VEW=VC 
     VS=FNBED*FBD/12.0*(FLS**2-6.0*FBD/12.0*FLS+12.0*(FBD/12.0)**2) 
     FLG=FLS-6.0*FBD/12.0 
     VGL=FNBED*(FLG**2-6.0*FLG+12.0) 
     FLDP=FLT*FNBED*((FLC-6.0*(DC+1.0))/10.0+1.0) 
     QD=AFB*7.48*60.0/5000.0 
     DIA=0.286*SQRT(QD) 
     DO 8 I=1,16 
     IF(DIAM(I).GT.DIA)GO TO 9 
   8 CONTINUE 
     I=16 
   9 D=DIAM(I) 
     FLP=FNBED*(FLT+10.0+3.0*DF) 
     OMH=1128.7*QAVE**1.016 
     FMMH=1128.7*QAVE**1.016 
     OMMP=15.0 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSAND=XOSAND 
     COGRVL=XOGRVL 
     IF(COSAND.EQ.0.0)COSAND=5.90*ENRCCI/2470.0 
     IF(COGRVL.EQ.0.0)COGRVL=4.30*ENRCCI/2470.0 
     COSM=VS/27.0*COSAND 
     COGM=VGL/27.0*COGRVL 
     COSTCP=XOSTCP 
     IF(COSTCP.EQ.0.0)COSTCP=2.75*ENRCCI/2470.0 
     COSTU=FLDP*0.8*COSTCP 
     COSTRP=6.842*D**1.2255 
     COSTSP=XOSTSP 
     IF(COSTSP.EQ.0.0)COSTSP=12.80*FMSECI/491.6 
     FIPC=FLP*COSTRP/100.0*COSTSP 
     OMMC=COSM*OMMP/100.0 
     TBCC=(COSTE+COSM+COGM+COSTU+FIPC)*CF 
     PRIN=CF*(COSTE+COSM+COGM) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTU 
     CALL AMORT(PRIN,RSCP,RC2) 
     PRIN=CF*FIPC 
     CALL AMORT(PRIN,RSSP,RC3) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,5)=RC1+RC2+RC3 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=48.0 
     CALL USEREX(59) 
     CALL INIT(RR,QQ,26) 
     RETURN 
     END 
     SUBROUTINE ZLAGOI(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(9) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE(QQ(1),DC  ),(QQ(2),FLBOD),(QQ(3),D), 
    >(QQ(4),XOSTSP),(QQ(5),COSLI),(QQ(6),ITYP), 
    >(QQ(7),SA),(QQ(8),V),(QQ(9),DT),(QQ(10),CSA), 
    >(QQ(11),NLC),(QQ(12),FL),(QQ(13),VLEW),(QQ(14),ALL), 
    >(QQ(15),DIA),(QQ(16),FLDIA),(QQ(17),NBV),(QQ(18),XOSTSV), 
    >(QQ(19),VCW),(QQ(20),VCS),(QQ(21),OMMH) 
    >,(QQ(22),RSLL),(QQ(23),RSSP),(QQ(24),RSSV),(QQ(25),RSST) 
     DATA LIST/'BOD ','DEPT','LINE','AERO','FACU','ANAE','END ','ESTI' 
    >,'REPL'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,25) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 FLBOD=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 D=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 COSLI=VALUE(1) 
     RSLL=VALUE(2) 
     IF(RSLL.EQ.0.0)RSLL=15.0 
     ID(MODT,3)=IA 
     GO TO 50 
   4 ITYP=1 
     ID(MODT,4)=IA 
     GO TO 50 
   5 ITYP=2 
     ID(MODT,4)=IA 
     GO TO 50 
   6 ITYP=3 
     ID(MODT,4)=IA 
     GO TO 50 
   7 CALL INIT(RR,QQ,25) 
     RETURN 
   8 XOSTSP=VALUE(1) 
     XOSTSV=VALUE(2) 
     GO TO 50 
   9 RSSP=VALUE(1) 
     RSSV=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
     END 
     SUBROUTINE ZLAGOO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL 
     EQUIVALENCE(QQ(1),DC   ),(QQ(2),FLBOD),(QQ(3),D), 
    >(QQ(4),XOSTSP),(QQ(5),COSLI),(QQ(6),ITYP), 
    >(QQ(7),SA),(QQ(8),V),(QQ(9),DT),(QQ(10),CSA), 
    >(QQ(11),NLC),(QQ(12),FL),(QQ(13),VLEW),(QQ(14),ALL), 
    >(QQ(15),DIA),(QQ(16),FLDIA),(QQ(17),NBV),(QQ(18),XOSTSV), 
    >(QQ(19),VCW),(QQ(20),VCS),(QQ(21),OMMH) 
    >,(QQ(22),RSLL),(QQ(23),RSSP),(QQ(24),RSSV),(QQ(25),RSST) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0LAGOON') 
     CALL INIT(QQ,RR,25) 
     LINER=0 
     IF(COSLI.NE.0.0)LINER=1 
 101 FORMAT('0',A1,' BOD LOADING',T45,E9.3,' LB/ACRE/DAY') 
 102 FORMAT(' ',A1,' DEPTH',T45,E9.3,' FEET') 
 103 FORMAT(' ',A1,' LINER INCLUDED',T45,E9.3,' $/SQFT') 
 104 FORMAT(' ',A1,' AEROBIC LAGOON') 
 105 FORMAT(' ',A1,' FACULTATIVE LAGOON') 
 106 FORMAT(' ',A1,' ANAEROBIC LAGOON') 
 107 FORMAT('   SURFACE AREA',T45,E9.3,' ACRES') 
 108 FORMAT('   VOLUME',T45,E9.3,' MG') 
 109 FORMAT('   DETENTION TIME',T45,E9.3,' DAYS') 
     WRITE(6,101)ID(MODT,1),FLBOD 
     WRITE(6,102)ID(MODT,2),D 
     IF(LINER.EQ.1)WRITE(6,103)ID(MODT,3),COSLI 
     IF(ITYP.EQ.1)WRITE(6,104)ID(MODT,4) 
     IF(ITYP.EQ.2)WRITE(6,105)ID(MODT,4) 
     IF(ITYP.EQ.3)WRITE(6,106)ID(MODT,4) 
     WRITE(6,107)SA 
     WRITE(6,108)V 
     WRITE(6,109)DT 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
   1 FORMAT('0QUANTITIES FOR LAGOONS') 
   2 FORMAT('0NUMBER OF CELLS',T45,I9) 
   3 FORMAT(' SURFACE AREA PER CELL',T45,E9.3,' ACRES') 
   4 FORMAT(' LENGTH OF ONE SIDE OF CELL',T45,E9.3,' FEET') 
  41 FORMAT(' DEPTH OF CUT',T45,E9.3,' FEET') 
  91 FORMAT(' DIAMETER OF BUTTERFLY VALVES',T45,E9.3,' INCHES') 
   5 FORMAT(' VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
   6 FORMAT(' AREA OF LAGOON LINER',T45,E9.3,' SQ FT') 
   7 FORMAT(' PIPE DIAMETER',T45,E9.3,' INCHES') 
   8 FORMAT(' LENGTH OF PIPE',T45,E9.3,' FEET') 
   9 FORMAT(' NUMBER OF BUTTERFLY VALVES',T45,I9) 
  10 FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
  11 FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
  12 FORMAT(' OPERATION AND MAINTENANCE MANHOURS',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,2)NLC 
     WRITE(6,3)CSA 
     WRITE(6,4)FL 
     WRITE(6,41)DC 
     WRITE(6,5)VLEW 
     IF(COSLI.NE.0.0)WRITE(6,6)ALL 
     WRITE(6,7)DIA 
     WRITE(6,8)FLDIA 
     WRITE(6,9)NBV 
     WRITE(6,91)DIA 
     WRITE(6,10)VCW 
     WRITE(6,11)VCS 
     WRITE(6,12)OMMH 
     RETURN 
     END 
     SUBROUTINE ZLAGOX(RR) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/PERCCO/DUMMY(12),XL 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1) 
     EQUIVALENCE(QQ(1),DC   ),(QQ(2),FLBOD),(QQ(3),D), 
    >(QQ(4),XOSTSP),(QQ(5),COSLI),(QQ(6),ITYP), 
    >(QQ(7),SA),(QQ(8),V),(QQ(9),DT),(QQ(10),CSA), 
    >(QQ(11),NLC),(QQ(12),FL),(QQ(13),VLEW),(QQ(14),ALL), 
    >(QQ(15),DIA),(QQ(16),FLDIA),(QQ(17),NBV),(QQ(18),XOSTSV), 
    >(QQ(19),VCW),(QQ(20),VCS),(QQ(21),OMMH) 
    >,(QQ(22),RSLL),(QQ(23),RSSP),(QQ(24),RSSV),(QQ(25),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     CALL INIT(QQ,RR,25) 
     LINER=0 
     IF(COSLI.NE.0.0)LINER=1 
     FNUM=20.0 
     BOD=QAVE*BOD5*8.34 
     SA=BOD/FLBOD 
     V=SA*D*0.32585 
     DT=V/QAVE 
     BOD5=0.35*BOD5 
     COD=1.5*BOD5 
     PO4=PO4*0.3 
     BOD5S=0.75*BOD5 
      PH=6.8 
     OAG=OAG*0.15 
     CODS=1.5*BOD5S 
     FNH3=TKN 
     SETSO=0.0 
     SOLIDS=100.0 
   9 ACRE=10.0 
     IF(ITYP.EQ.3)ACRE=2.0 
     NLC=SA/ACRE 
     I=2 
   2 IF(NLC.LE.I)GO TO 1 
     I=I+2 
     GO TO 2 
   1 NLC=I 
     CSA=SA/NLC 
     FL=208.7*SQRT(CSA)+12.0 
     XL=(2.0*FL+850.0)*(NLC/2*FL+(NLC/2-1)*50.0+800.0)/43560.0 
     IXL=XL+0.99 
     XL=IXL 
     NOCNT=0 
     DC=1.0 
   4 DF=D+2.0-DC 
     VF=(3.0*DF**2+10.0*DF)*(2.5*NLC+2.0)*FL 
     VC=1.3*NLC*DC*(FL**2-6.0*DF*FL+12.0*DF**2 
    >+120.0*DF-60.0*FL+1200.0) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 5 
     DC=DC+0.10*PERC/ABS(PERC) 
     NOCNT=NOCNT+1 
     IF(NOCNT.GT.100)GO TO 5 
     GO TO 4 
   5 VLEW=VC 
     ALL=NLC*(4.0*(FL-3.0*D-6.0)*3.0*D+(FL-6.0*D-12.0)**2) 
     DIA=9.72*SQRT(QMAX) 
     TDIA=4.0 
   7 IF(TDIA.GE.DIA)GO TO 6 
     TDIA=TDIA+2.0 
     GO TO 7 
   6 DIA=TDIA 
     FLDIA=(6.0*D+10.0)*NLC 
     NBV=NLC+1 
     DBV=DIA 
     VCW=8.0*(D+2) 
     VCS=8.0 
     OMMH=160.0 
     IF(QAVE.GT.0.1)OMMH=313.8*QAVE**0.2925 
     CF=1.11 
     COSTE=VLEW/27.0*UPIEX 
     COSTL=0.0 
     IF(LINER.EQ.1)COSTL=ALL*COSLI 
     PRIN=COSTL*CF 
     CALL AMORT(PRIN,RSLL,RC1) 
     COSTP=6.842*DIA**1.2255 
     COSTSP=XOSTSP 
     IF(COSTSP.EQ.0.0)COSTSP=12.80*FMSECI/491.6 
     COSTSV=XOSTSV 
     IF(COSTSV.EQ.0.0)COSTSV=952.1*FMSECI/491.6 
     FICP=COSTP/100.0*COSTSP*FLDIA 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTBV=3.99*DBV**1.395 
     FIBV=COSTBV*COSTSV*NBV/100.0 
     TBCC=(COSTE+COSTL+FICP+COSTCW+COSTCS+FIBV)*CF 
     PRIN=FICP*CF 
     CALL AMORT(PRIN,RSSP,RC2) 
     PRIN=FIBV*CF 
     CALL AMORT(PRIN,RSSV,RC3) 
     PRIN=CF*(COSTE+COSTCW+COSTCS) 
     CALL AMORT(PRIN,RSST,RC4) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMMH 
     SUMMDA(NUM,5)=RC1+RC2+RC3+RC4 
     SUMMDA(NUM,9)=FNUM 
     CALL USEREX(27) 
     CALL INIT(RR,QQ,25) 
     RETURN 
     END 
     SUBROUTINE ZOXIDI(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1),LIST(9) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE 
    >(QQ( 1),RSST ),(QQ( 2),FOM   ),(QQ( 3),VL    ),(QQ( 4),R     ), 
    >(QQ( 5),WS    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ),(QQ( 8),COSTDS), 
    >(QQ( 9),RSDS ),(QQ(10),O2R   ),(QQ(11),FLTRO ),(QQ(12),FLTRM ), 
    >(QQ(13),DIAROT),(QQ(14),FLRT  ),(QQ(15),FLRTK ),(QQ(16),WB    ), 
    >(QQ(17),VE    ),(QQ(18),VS    ),(QQ(19),FLS   ),(QQ(20),FLT   ), 
    >(QQ(21),WT    ),(QQ(22),VEX   ),(QQ(23),VCW   ),(QQ(24),VCS   ), 
    >(QQ(25),FLHR  ),(QQ(26),OMMH  ),(QQ(27),BPH   ),(QQ(28),FKWH  ), 
    >(QQ(29),THP   ),(QQ(30),NROT  ),(QQ(31),DW    ),(QQ(32),V     ) 
    >,(QQ(33),COSTPS),(QQ(34),TKNR),(QQ(35),PO4R),(QQ(36),O2) 
    >,(QQ(37),RSPS) 
     DATA LIST/'REPL','F/M ','VOLU','RECY','WAST','REMO','ESTI', 
    >'END ','OXYG'/ 
     DATA IA/'I'/ 
     CALL INIT(QQ,RR,37) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,9 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5,6,7,8,9),I 
   1 RSDS=VALUE(1) 
     RSPS=VALUE(2) 
     RSST=VALUE(3) 
     GO TO 50 
   2 FOM=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   3 VL=VALUE(1) 
     ID(MODT,3)=IA 
     GO TO 50 
   4 R=VALUE(1) 
     ID(MODT,4)=IA 
     GO TO 50 
   5 WS=VALUE(1) 
     GO TO 50 
   6 SSR=VALUE(1) 
     BODR=VALUE(2) 
     TKNR=VALUE(3) 
     PO4R=VALUE(4) 
     GO TO 50 
   7 COSTDS=VALUE(1) 
     COSTPS=VALUE(2) 
     GO TO 50 
   8 CALL INIT(RR,QQ,37) 
     RETURN 
   9 O2R=VALUE(1) 
     ID(MODT,5)=IA 
     GO TO 50 
     END 
     SUBROUTINE ZOXIDO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     COMMON ICTL,KCTL 
     EQUIVALENCE 
    >(QQ( 1),RSST ),(QQ( 2),FOM   ),(QQ( 3),VL    ),(QQ( 4),R     ), 
    >(QQ( 5),WS    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ),(QQ( 8),COSTDS), 
    >(QQ( 9),RSDS ),(QQ(10),O2R   ),(QQ(11),FLTRO ),(QQ(12),FLTRM ), 
    >(QQ(13),DIAROT),(QQ(14),FLRT  ),(QQ(15),FLRTK ),(QQ(16),WB    ), 
    >(QQ(17),VE    ),(QQ(18),VS    ),(QQ(19),FLS   ),(QQ(20),FLT   ), 
    >(QQ(21),WT    ),(QQ(22),VEX   ),(QQ(23),VCW   ),(QQ(24),VCS   ), 
    >(QQ(25),FLHR  ),(QQ(26),OMMH  ),(QQ(27),BPH   ),(QQ(28),FKWH  ), 
    >(QQ(29),THP   ),(QQ(30),NROT  ),(QQ(31),DW    ),(QQ(32),V     ) 
    >,(QQ(33),COSTPS),(QQ(34),TKNR),(QQ(35),PO4R),(QQ(36),O2) 
    >,(QQ(37),RSPS) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0OXIDATION DITCH') 
     CALL INIT(QQ,RR,37) 
 102 FORMAT('0',A1,' F/M RATIO',T45,E9.3,' LB BOD/LB MLVSS/DAY') 
 103 FORMAT(' ',A1,' VOLUMETRIC LOADING',T45,E9.3,' LB BOD/TCFT/DAY') 
 104 FORMAT(' ',A1,' RECYCLE RATIO',T45,E9.3,' PERCENT') 
 105 FORMAT(' ',A1,' OXYGEN UTILIZED',T45,E9.3,' LB O2/LB BOD APPLIED') 
 106 FORMAT('   VOLUME OF DITCH',T45,E9.3,' CU FT') 
 107 FORMAT('   OXYGEN REQUIRED',T45,E9.3,' LB/DAY') 
     WRITE(6,102)ID(MODT,2),FOM 
     WRITE(6,103)ID(MODT,3),VL 
     WRITE(6,104)ID(MODT,4),R 
     WRITE(6,105)ID(MODT,5),O2R 
     WRITE(6,107)O2 
     WRITE(6,106)V 
     WRITE(6,121)STARDA 
 121 FORMAT('0',19A4) 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,1) 
     NRTS=2 
   1 FORMAT('0QUANTITIES FOR OXIDATION DITCH') 
   2 FORMAT('0WATER DEPTH',T45,E9.3,' FEET') 
   3 FORMAT(' ROTOR DIAMETER',T45,E9.3,' INCHES') 
   4 FORMAT(' NUMBER OF ROTORS',T45,I9) 
   5 FORMAT(' LENGTH OF EACH ROTOR',T45,E9.3,' FEET') 
   6 FORMAT(' BOTTOM WIDTH OF DITCH',T45,E9.3,' FEET') 
   7 FORMAT(' LENGTH OF STRAIGHT SECTION',T45,E9.3,' FEET') 
   8 FORMAT(' TOTAL LENGTH (INCLUDING FREEBOARD)',T45,E9.3,' FEET') 
   9 FORMAT(' TOTAL WIDTH (INCLUDING FREEBOARD)',T45,E9.3,' FEET') 
  10 FORMAT(' VOLUME OF EXCAVATION',T45,E9.3,' CU FT') 
  11 FORMAT(' VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
  12 FORMAT(' VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
  13 FORMAT(' LENGTH OF HANDRAIL',T45,E9.3,' FEET') 
  14 FORMAT(' OPERATION AND MAINTENANCE MANHOURS',T45,E9.3, 
    >' MAN-HRS/YEAR') 
  15 FORMAT(' INSTALLED HORSEPOWER PER ROTOR',T45,E9.3,' HP') 
  16 FORMAT(' ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
     WRITE(6,2)DW 
     WRITE(6,3)DIAROT 
     WRITE(6,4)NRTS 
     WRITE(6,5)FLRT 
     WRITE(6,6)WB 
     WRITE(6,7)FLS 
     WRITE(6,8)FLT 
     WRITE(6,9)WT 
     WRITE(6,10)VEX 
     WRITE(6,11)VCW 
     WRITE(6,12)VCS 
     WRITE(6,13)FLHR 
     WRITE(6,14)OMMH 
     WRITE(6,15)THP 
     WRITE(6,16)FKWH 
     CALL PUMPPR(1.0,0.0,0.0,2,COSTPS,1,RSPS,RSST) 
     RETURN 
     END 
     SUBROUTINE ZOXIDX(RR,MODT) 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     COMMON/ADDRCO/LQADD(80,3),LSADD(20,3) 
     COMMON/BANKCO/BANKDA(7000) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/QQCO/QQ(100) 
     DIMENSION RR(1),FMHP(11) 
     COMMON/SSLUCO/SVOLU,PSOLID,PVOLAT 
     EQUIVALENCE 
    >(QQ( 1),RSST ),(QQ( 2),FOM   ),(QQ( 3),VL    ),(QQ( 4),R     ), 
    >(QQ( 5),WS    ),(QQ( 6),SSR   ),(QQ( 7),BODR  ),(QQ( 8),COSTDS), 
    >(QQ( 9),RSDS ),(QQ(10),O2R   ),(QQ(11),FLTRO ),(QQ(12),FLTRM ), 
    >(QQ(13),DIAROT),(QQ(14),FLRT  ),(QQ(15),FLRTK ),(QQ(16),WB    ), 
    >(QQ(17),VE    ),(QQ(18),VS    ),(QQ(19),FLS   ),(QQ(20),FLT   ), 
    >(QQ(21),WT    ),(QQ(22),VEX   ),(QQ(23),VCW   ),(QQ(24),VCS   ), 
    >(QQ(25),FLHR  ),(QQ(26),OMMH  ),(QQ(27),BPH   ),(QQ(28),FKWH  ), 
    >(QQ(29),THP   ),(QQ(30),NROT  ),(QQ(31),DW    ),(QQ(32),V     ) 
    >,(QQ(33),COSTPS),(QQ(34),TKNR),(QQ(35),PO4R),(QQ(36),O2) 
    >,(QQ(37),RSPS) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG 
     DATA FMHP/2.0,3.0,5.0,7.5,10.0,15.0,20.0,25.0,30.0,40.0,50.0/ 
     CALL INIT(QQ,RR,37) 
     XOSTPS=COSTPS 
     FNUM=23.0 
     V=QAVE*BOD5*8.34*1000.0/VL 
     O2=O2R*QAVE*BOD5*8.34 
     SE=BOD5*(1.0-BODR/100.0) 
     SSEFF=SOLIDS*(1.0-SSR/100.0) 
     XA=FOM*(BOD5-SE)*QAVE*8.34 
     ANO3=ANO3+TKNR/100.0*TKN 
     SOLIDS=SSEFF 
     SETSO=0.0 
     BOD5=SE 
     BOD5S=8.0 
     IF(BOD5S.GT.BOD5)BOD5S=BOD5 
     COD=1.5*BOD5 
     CODS=1.50*BOD5S 
     PO4=PO4*(1.0-PO4R/100.0) 
     TKN=TKN*(1.0-TKNR/100.0) 
     FNH3=TKN 
     OAG=0.0 
     WS=XA/0.10/8.34/1.03 
     UC=0.01 
     TOTAL=SVOLU+WS 
     TSS=(SVOLU*PSOLID+WS*UC)/TOTAL 
     VSS=(SVOLU*PSOLID*PVOLAT+WS*UC*VOLAT)/(SVOLU*PSOLID+WS*UC) 
     SVOLU=TOTAL 
     PSOLID=TSS 
     PVOLAT=VSS 
     DIAROT=42.0 
     FLRTO=O2/3.74/24.0 
     FLRTM=7.48*V/21000.0 
     FLRT=FLRTO 
     IF(FLRTM.GT.FLRT)FLRT=FLRTM 
     IF(FLRT.GE.12.0)GO TO 1 
     DIAROT=27.5 
     FLRTO=O2/2.85/24.0 
     FLRTM=7.48*V/16000.0 
     FLRT=FLRTO 
     IF(FLRTM.GT.FLRT)FLRT=FLRTM 
   1 LRTK=FLRT/2.0+0.9 
     FLRTK=LRTK 
     WB=FLRTK+1.0 
     IF(FLRTK.GT.15.5)WB=FLRTK+4.0 
     IF(DIAROT.LT.28.0)GO TO 2 
     VE=37.71*WB**2+490.2*WB+2045.8 
     FLS=(V-VE)/(24.0*WB+144.0) 
     VS=(24.0*WB+144.0)*FLS 
     FLT=FLS+2.0*WB+26.0 
     WT=2.0*WB+27.0 
     VEX=42.4*WB**2+636.3*WB+27.0*WB*FLS+209.2*FLS+2983.5 
     DW=12.0 
     GO TO 3 
   2 VE=15.72*WB**2+94.3*WB+174.2 
     FLS=(V-VE)/(10.0*WB+25.0) 
     VS=(10.0*WB+25.0)*FLS 
     FLT=FLS+2.0*WB+12.0 
     WT=2.0*WB+13.0 
     VEX=20.43*WB**2+163.44*WB+13.0*WB*FLS+55.25*FLS+388.17 
     DW=5.0 
   3 VCW=(DW+1.0)*FLS 
     VCS=4.4*DW*WB+4.4*WB+2.2*DW**2+4.4*DW+FLS*WB+1.4*FLS*DW+ 
    >1.4*FLS+2.2 
     FLHR=2.0*FLS+6.28*WB+6.28*DW+6.28 
     OMMH=2386.3*QAVE**0.4693 
     BHP=1.126*FLRTK 
     IF(DIAROT.LT.28.0)BHP=0.838*FLRTK 
     FKWH=BHP*2.0*0.85*24.0*365.0 
     DO 4 I=1,11 
     IF(FMHP(I).GE.BHP)GO TO 5 
   4 CONTINUE 
     I=11 
   5 THP=2.0*FMHP(I) 
     OMMP=4.225-0.975*ALOG(THP) 
     CF=1.052 
     COSTE=VEX*UPIEX/27.0 
     COSTCW=VCW*UPICW/27.0 
     COSTCS=VCS*UPICS/27.0 
     COSTRO=39.51*FLRTK**0.2790 
     IF(FLRTK.GT.18.0)COSTRO=16.59*FLRTK**0.5792 
     IF(DIAROT.GT.28.0)GO TO 6 
     COSTRO=44.23*FLRTK**0.1781 
     IF(FLRTK.GT.9.0)COSTRO=27.63*FLRTK**0.3932 
   6 XOSTDS=COSTDS 
     IF(XOSTDS.EQ.0.0)XOSTDS=15340.0*FMSECI/491.6 
     COSTRK=XOSTDS*COSTRO/100.0 
     FIMH=10.0+2.667*FLRTK 
     FICOST=FIMH*FLABRI 
     PMINC=52.04-0.34*FLRTK 
     FIEC=(COSTRK*(1.0+PMINC/100.0)+FICOST)*2.0 
     COSTHR=FLHR*UPIHR 
     TBCC=(COSTE+COSTCW+COSTCS+FIEC+COSTHR)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS+COSTHR) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSDS,RC2) 
     OMMC=FIEC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMC 
     SUMMDA(NUM,9)=FNUM 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(30) 
     KADD=LQADD(51,MODT) 
     XWS=WS 
     XSE=SE 
     XESS=SSEFF 
     XUC=UC 
     CALL OECOEX(5000.0,QMAX,XA,XWS,XSE,XESS,.53,VOLAT,BOD5S,XUC, 
    >QAVE,BANKDA(KADD)) 
     CALL PUMPPR(1.0,QAVE,QMAX,2,XOSTPS,0,RSPS,RSST) 
     CALL OMITEX(30) 
     CALL INIT(RR,QQ,37) 
     RETURN 
     END 
     SUBROUTINE ZRAWSI(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(4),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),PH),(QQ(2),XOSTPS),(QQ(3),GPM), 
    > (QQ(4),DIA),(QQ(5),DW),(QQ(6),PBA),(QQ(7),VEW), 
    > (QQ(8),VCW),(QQ(9),FPC),(QQ(10),OMH),(QQ(11),FMMH), 
    > (QQ(12),OMMP),(QQ(13),FKWH),(QQ(14),FN) 
    >,(QQ(15),RSPS),(QQ(16),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'HEAD','ESTI','END ','REPL'/ 
     CALL INIT(QQ,RR,16) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4),I 
   1 PH=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 XOSTPS=VALUE(1) 
     GO TO 50 
   3 CALL INIT(RR,QQ,16) 
     RETURN 
   4 RSPS=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZRAWSO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),PH),(QQ(2),XOSTPS),(QQ(3),GPM), 
    > (QQ(4),DIA),(QQ(5),DW),(QQ(6),PBA),(QQ(7),VEW), 
    > (QQ(8),VCW),(QQ(9),FPC),(QQ(10),OMH),(QQ(11),FMMH), 
    > (QQ(12),OMMP),(QQ(13),FKWH),(QQ(14),FN) 
    >,(QQ(15),RSPS),(QQ(16),RSST) 
     COMMON/STARCO/STARDA(19) 
     COMMON ICTL,KCTL 
     CALL INIT(QQ,RR,16) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,100) 
 100 FORMAT('0RAW SEWAGE PUMPING') 
     WRITE(6,101)ID(MODT,1),PH 
     N=FN 
     WRITE(6,102)N 
     WRITE(6,103)GPM 
     WRITE(6,104)DIA 
     WRITE(6,105)DW 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)GO TO 1 
     CALL TITLE 
     WRITE(6,200) 
     WRITE(6,106)PBA 
     WRITE(6,107)VEW 
     WRITE(6,108)VCW 
     WRITE(6,109)FPC 
     WRITE(6,113)FKWH 
     WRITE(6,110)OMH 
     WRITE(6,111)FMMH 
     WRITE(6,112)OMMP 
 101 FORMAT('0',A1,' PUMP HEAD',T45,E9.3,' FEET') 
 102 FORMAT('   NUMBER OF PUMPS REQUIRED',T45,I9) 
 103 FORMAT('   SIZE OF EACH PUMP',T45,E9.3,' GAL/MIN') 
 104 FORMAT('   DIAMETER OF WET WELL',T45,E9.3,' FEET') 
 105 FORMAT('   DEPTH OF WET WELL',T45,E9.3,' FEET') 
 200 FORMAT('0QUANTITIES FOR RAW SEWAGE PUMPING') 
 106 FORMAT('0  AREA OF PUMP BUILDING',T45,E9.3,' SQ FT') 
 107 FORMAT('   VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
 108 FORMAT('   VOLUME OF REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
 109 FORMAT('   FIRM PUMPING CAPACITY',T45,E9.3,' MGD') 
 110 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
 111 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
 112 FORMAT('   O & M MATERIAL AND SUPPLY COSTS',T45,E9.3,' PERCENT') 
 113 FORMAT('   ELECTRICAL ENERGY REQUIRED',T45,E9.3,' KWHR/YEAR') 
   1 CALL INIT(RR,QQ,16) 
         RETURN 
         END 
     SUBROUTINE ZRAWSX(RR) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),XPH),(QQ(2),XOSTPS),(QQ(3),GPM), 
    > (QQ(4),DIA),(QQ(5),DW),(QQ(6),PBA),(QQ(7),VEW), 
    > (QQ(8),VCW),(QQ(9),FPC),(QQ(10),OMH),(QQ(11),FMMH), 
    > (QQ(12),OMMP),(QQ(13),FKWH),(QQ(14),FN) 
    >,(QQ(15),RSPS),(QQ(16),RSST) 
     DIMENSION RR(1) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    >XEPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPUS,UPILL 
     CALL INIT(QQ,RR,16) 
     FIRST ORDER DESIGN 
     FN=2 
     QPOA=QMAX/QAVE 
     GPM=QAVE*10.0**6*2.0/1440.0 
     IF(QPOA.GT.2.0)GPM=QMAX*10.0**6/1440.0 
     IDIA=0.4125*GPM**0.50+0.99 
     DIA=IDIA 
     IF(DIA.LT.4.0)DIA=4.0 
     DW=7.0 
     SECOND ORDER DESIGN 
     PBA=100.0 
     VEW=5.50*DIA**2+98.96*DIA+535.0 
     VCW=0.59*DIA**2+20.70*DIA+7.20 
     FPC=GPM*10.0**(-6)*1440.0 
     OMH=519.20*FPC**0.1133 
     FMMH=440.3*FPC**0.1386 
     OMMP=0.60 
     FKWH=2121.40*QAVE*XPH 
     CF=1.25 
     THIRD ORDER DESIGN 
     PBC=PBA*UPIBC 
     COSTE=VEW/27.0*UPIEX 
     COSTC=VCW/27.0*UPICW 
     COSTRO=13.44*GPM**0.4466 
     COSTPS=XOSTPS 
     IF(XOSTPS.EQ.0.0)COSTPS=2800.0*FMSECI/491.60 
     COSTP=COSTRO*COSTPS*FN/100.0 
     FIEC=COSTP*2.0 
     TBCC=(FIEC+PBC+COSTE+COSTC)*CF 
     PRIN=CF*(PBC+COSTE+COSTC) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*FIEC 
     CALL AMORT(PRIN,RSPS,RC2) 
     OMMC=TBCC*OMMP/100.0 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,4)=FKWH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,6)=OMMP 
     SUMMDA(NUM,9)=66.0 
     SUMMDA(NUM,18)=FKWH*UPIPC 
     CALL USEREX(73) 
     CALL INIT(RR,QQ,16) 
     RETURN 
     END 
     SUBROUTINE ZSEPTI(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(4),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),PERC),(QQ(2),XOGRVL),(QQ(3),XOSTCP), 
    >(QQ( 4),VN    ),(QQ( 5),FL    ),(QQ( 6),VD    ),(QQ( 7),FLS   ), 
    >(QQ( 8),WS    ),(QQ( 9),FLD   ),(QQ(10),VEW   ),(QQ(11),VCW   ), 
    >(QQ(12),VCS   ),(QQ(13),VG    ),(QQ(14),FMMH  ) 
    >,(QQ(15),RSCP),(QQ(16),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'PERC','ESTI','END ','REPL'/ 
     CALL INIT(QQ,RR,16) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,4 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4),I 
   1 PERC=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 XOSTCP=VALUE(1) 
     XOGRVL=VALUE(2) 
     GO TO 50 
   3 CALL INIT(RR,QQ,16) 
     RETURN 
   4 RSCP=VALUE(1) 
     RSST=VALUE(2) 
     GO TO 50 
     END 
     SUBROUTINE ZSEPTO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/STARCO/STARDA(19) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),PERC),(QQ(2),XOGRVL),(QQ(3),XOSTCP), 
    >(QQ( 4),VN    ),(QQ( 5),FL    ),(QQ( 6),VD    ),(QQ( 7),FLS   ), 
    >(QQ( 8),WS    ),(QQ( 9),FLD   ),(QQ(10),VEW   ),(QQ(11),VCW   ), 
    >(QQ(12),VCS   ),(QQ(13),VG    ),(QQ(14),FMMH  ) 
    >,(QQ(15),RSCP),(QQ(16),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,16) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0SEPTIC TANKS AND TILE FIELDS') 
 101 FORMAT('0',A1,' SOIL PERCOLATION RATE',T45,E9.3,' MIN/INCH') 
 102 FORMAT('   NET VOLUME OF SEPTIC TANK',T45,E9.3,' GAL') 
 103 FORMAT('   LENGTH OF TILE FIELD',T45,E9.3,' FEET') 
 104 FORMAT('   VOLUME OF DOSING TANK',T45,E9.3,' GAL') 
 105 FORMAT('0  LENGTH OF SEPTIC TANK',T45,E9.3,' FEET') 
 106 FORMAT('   WIDTH OF SEPTIC TANK',T45,E9.3,' FEET') 
 107 FORMAT('   LENGTH OF DOSING TANK',T45,E9.3,' FEET') 
 108 FORMAT('   WIDTH OF DOSING TANK',T45,E9.3,' FEET') 
 109 FORMAT('   VOLUME OF EARTHWORK',T45,E9.3,' CU FT') 
 110 FORMAT('   VOLUME OF SLAB CONCRETE',T45,E9.3,' CU FT') 
 111 FORMAT('   VOLUME OF WALL CONCRETE',T45,E9.3,' CU FT') 
 112 FORMAT('   VOLUME OF GRAVEL',T45,E9.3,' CU FT') 
 113 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YR') 
     WRITE(6,101)ID(MODT,1),PERC 
     WRITE(6,102)VN 
     WRITE(6,103)FL 
     IF(VD.GT.0.0)WRITE(6,104)VD 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)RETURN 
     CALL TITLE 
     WRITE(6,201) 
 201 FORMAT('0QUANTITIES FOR SEPTIC TANK AND TILE FIELD') 
     WRITE(6,105)FLS 
     WRITE(6,106)WS 
     IF(FLD.GT.0.0)WRITE(6,107)FLD 
     IF(FLD.GT.0.0)WRITE(6,108)FLD 
     WRITE(6,109)VEW 
     WRITE(6,110)VCS 
     WRITE(6,111)VCW 
     WRITE(6,112)VG 
     WRITE(6,113)FMMH 
     RETURN 
     END 
     SUBROUTINE ZSEPTX(RR) 
     DIMENSION ZERO(20) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     EQUIVALENCE (QQ(1),PERC),(QQ(2),XOGRVL),(QQ(3),XOSTCP), 
    >(QQ( 4),VN    ),(QQ( 5),FL    ),(QQ( 6),VD    ),(QQ( 7),FLS   ), 
    >(QQ( 8),WS    ),(QQ( 9),FLD   ),(QQ(10),VEW   ),(QQ(11),VCW   ), 
    >(QQ(12),VCS   ),(QQ(13),VG    ),(QQ(14),FMMH  ) 
    >,(QQ(15),RSCP),(QQ(16),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     EQUIVALENCE (QMIN,ZERO(1)) 
     CALL INIT(QQ,RR,16) 
     VN=1.5*QAVE*10.0**6 
     IF(QAVE.GT..0015)VN=1125.0+0.75*QAVE*10.0**6 
     FL=QAVE*10.0**6*PERC**0.5/10.0 
     VD=0.0 
     IF(FL.GT.500.0)VD=0.75*FL*0.65 
     FLS=0.231*SQRT(VN) 
     WS=FLS/2.0 
     FLD=0.163*SQRT(VD) 
     VES=(FLS+3.0)*(WS+3.0)*9.0 
     VED=0.0 
     IF(VD.GT.0.0)VED=9.0*(FLD+3.0)**2 
     VEW=VES+VED 
     VSCW=6.5*FLS+8.0*WS+0.5*FLS*WS+0.5 
     VSCS=FLS*0.5*WS 
     VDCW=0.0 
     VDCS=0.0 
     IF(VD.GT.0.0)VDCW=0.5*FLD**2+10.0*FLD+0.5 
     IF(VD.GT.0.0)VDCS=0.5*FLD**2+FLD+0.5 
     VCW=VSCW+VDCW 
     VCS=VSCS+VDCS 
     VG=3.0*FL 
     FMMH=8.0 
     CF=1.11 
     COSTE=VEW/27.0*UPIEX 
     COSTCW=VCW/27.0*UPICW 
     COSTCS=VCS/27.0*UPICS 
     COSTCP=XOSTCP 
     IF(COSTCP.EQ.0.0)COSTCP=2.75*ENRCCI/2470.0 
     COGRVL=XOGRVL 
     IF(COGRVL.EQ.0.0)COGRVL=4.3*ENRCCI/2470.0 
     COSTDP=FL*0.8*COSTCP 
     COSTGV=VG/27.0*COGRVL 
     TBCC=(COSTE+COSTCW+COSTCS+COSTDP+COSTGV)*CF 
     PRIN=CF*(COSTE+COSTCW+COSTCS+COSTGV) 
     CALL AMORT(PRIN,RSST,RC1) 
     PRIN=CF*COSTDP 
     CALL AMORT(PRIN,RSCP,RC2) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,5)=RC1+RC2 
     SUMMDA(NUM,9)=46.0 
     CALL USEREX(57) 
     TEMPS=TEMP 
     DO 5 I=1,20 
   5 ZERO(I)=0.0 
     PH=7.0 
     TEMP=TEMPS 
     CALL INIT(RR,QQ,16) 
     RETURN 
     END 
     SUBROUTINE ZSLUDI(RR,ID,MODT) 
     DIMENSION ID(3,1),LIST(5),RR(1) 
     COMMON/SCANDA/KLM(74),VALUE(10) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FLRS),(QQ(2),D),(QQ(3),DSP), 
    >(QQ( 4),FLV   ),(QQ( 5),TLSA  ),(QQ( 6),NL    ),(QQ( 7),SAL   ), 
    >(QQ( 8),FL    ),(QQ( 9),DC    ),(QQ(10),DF    ),(QQ(11),VLEW  ), 
    >(QQ(12),VCW   ),(QQ(13),OMH   ),(QQ(14),FMMH  ), 
    >(QQ(15),SLFL),(QQ(16),SOI),(QQ(17),RSST) 
     DATA IA/'I'/ 
     DATA LIST/'SOLI','ESTI','END ','DEPT','REPL'/ 
     CALL INIT(QQ,RR,17) 
  50 READ(5,100)KTYPE,IXX,KLM 
     WRITE(6,951)KTYPE,IXX,KLM 
 951 FORMAT(' ',A4,A2,74A1) 
 100 FORMAT(A4,A2,74A1) 
     CALL SCAN(NO,VALUE,74,KLM) 
     DO 51 I=1,5 
     IF(KTYPE.EQ.LIST(I))GO TO 52 
  51 CONTINUE 
     WRITE(6,101)KTYPE 
 101 FORMAT('0',A4,2X,' IS INVALID - CARD IGNORED') 
     GO TO 50 
  52 GO TO (1,2,3,4,5),I 
   1 FLRS=VALUE(1) 
     ID(MODT,1)=IA 
     GO TO 50 
   2 GO TO 50 
   3 CALL INIT(RR,QQ,17) 
     RETURN 
   4 D=VALUE(1) 
     ID(MODT,2)=IA 
     GO TO 50 
   5 RSST=VALUE(1) 
     GO TO 50 
     END 
     SUBROUTINE ZSLUDO(RR,ID,MODT) 
     DIMENSION ID(3,1),RR(1) 
     COMMON/QQCO/QQ(100) 
     EQUIVALENCE (QQ(1),FLRS),(QQ(2),D),(QQ(3),DSP), 
    >(QQ( 4),FLV   ),(QQ( 5),TLSA  ),(QQ( 6),NL    ),(QQ( 7),SAL   ), 
    >(QQ( 8),FL    ),(QQ( 9),DC    ),(QQ(10),DF    ),(QQ(11),VLEW  ), 
    >(QQ(12),VCW   ),(QQ(13),OMH   ),(QQ(14),FMMH  ), 
    >(QQ(15),SLFL),(QQ(16),SOI),(QQ(17),RSST) 
     COMMON /STARCO/STARDA(19) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,17) 
     CALL TITLE 
     WRITE(6,120)STARDA 
 120 FORMAT('0',19A4) 
     WRITE(6,200) 
 200 FORMAT('0SLUDGE DRYING LAGOONS') 
 101 FORMAT(' ',A1,' SOLIDS LOADING RATE',T45,E9.3,' LB/YR/CUFT') 
 102 FORMAT('   SLUDGE FLOW',T45,E9.3,' GAL/DAY') 
 103 FORMAT('   INITIAL SOLIDS CONTENT IN SLUDGE',T45,E9.3, 
    > ' PERCENT') 
 104 FORMAT(' ',A1,' SLUDGE DEPTH IN LAGOON',T45,E9.3,' FEET') 
 105 FORMAT('   DRY SOLIDS PRODUCED',T45,E9.3,' LBS/YEAR') 
 106 FORMAT('   LAGOON VOLUME',T45,E9.3,' CU FT') 
 107 FORMAT('   TOTAL LAGOON SURFACE AREA',T45,E9.3,' SQ FT') 
 108 FORMAT('   NUMBER OF LAGOONS REQUIRED',T45,I9) 
 109 FORMAT('0QUANTITIES FOR SLUDGE DRYING LAGOONS') 
 110 FORMAT('   SURFACE AREA PER LAGOON',T45,E9.3,' SQ FT') 
 111 FORMAT('   LENGTH OF LAGOON AT TOP OF LEVEE',T45,E9.3,' FEET') 
 112 FORMAT('   DEPTH OF CUT',T45,E9.3,' FEET') 
 113 FORMAT('   DEPTH OF FILL',T45,E9.3,' FEET') 
 114 FORMAT('   VOLUME OF EARTHWORK REQUIRED',T45,E9.3,' CU FT') 
 115 FORMAT('   VOLUME OF REINFORCED WALL CONCRETE',T45,E9.3,' CU FT') 
 116 FORMAT('   OPERATION MANPOWER REQUIRED',T45,E9.3,' MAN-HRS/YEAR') 
 117 FORMAT('   MAINTENANCE MANPOWER REQUIRED',T45,E9.3, 
    > ' MAN-HRS/YEAR') 
     WRITE(6,101)ID(MODT,1),FLRS 
     WRITE(6,102)SLFL 
     WRITE(6,103)SOI 
     WRITE(6,104)ID(MODT,2),D 
     WRITE(6,105)DSP 
     WRITE(6,106)FLV 
     WRITE(6,107)TLSA 
     WRITE(6,108)NL 
     WRITE(6,120)STARDA 
     IF(KCTL.EQ.0)GO TO 1 
     CALL TITLE 
     WRITE(6,109) 
     WRITE(6,110)SAL 
     WRITE(6,111)FL 
     WRITE(6,112)DC 
     WRITE(6,113)DF 
     WRITE(6,114)VLEW 
     WRITE(6,115)VCW 
     WRITE(6,116)OMH 
     WRITE(6,117)FMMH 
   1 CALL INIT(RR,QQ,17) 
     RETURN 
     END 
     SUBROUTINE ZSLUDX(SVOLU,PSOLID,PVOLAT,RR) 
     DIMENSION RR(1) 
     COMMON/QQCO/QQ(100) 
     COMMON/SUMMCO/SUMMDA(30,18),NUM 
     COMMON/UNITCO/UPIBC,UPIEX,UPICW,UPICS,FMSECI,UPICR, 
    > EPACI,UPIR,FLABRI,SALOP,UPIPC,CHEM(4),ENRCCI,UPIHR,CEPCIP,FLABII, 
    > CCIPS,CCRS,COTS,CCPVS,UPILL 
     EQUIVALENCE (QQ(1),FLRS),(QQ(2),D),(QQ(3),DSP), 
    >(QQ( 4),FLV   ),(QQ( 5),TLSA  ),(QQ( 6),NL    ),(QQ( 7),SAL   ), 
    >(QQ( 8),FL    ),(QQ( 9),DC    ),(QQ(10),DF    ),(QQ(11),VLEW  ), 
    >(QQ(12),VCW   ),(QQ(13),OMH   ),(QQ(14),FMMH  ), 
    >(QQ(15),SLFL),(QQ(16),SOI),(QQ(17),RSST) 
     COMMON ICTL,KCTL,IPRT,QMIN,QAVE,QMAX,TEMP,SOLIDS,VOLAT,BOD5, 
    <BOD5S,COD,CODS,PH,CIC,CAC,TKN,PO4,FNH3,SETSO,OAG,ANO2,ANO3 
     CALL INIT(QQ,RR,17) 
     SLFL=SVOLU 
     SOI=PSOLID 
     XXX=PVOLAT 
     DSP=SVOLU*PSOLID*8.34*365.0/100.0 
     FLV=DSP/FLRS 
     TLSA=FLV/D 
     NL=2 
     SECOND ORDER 
     SAL=TLSA/NL 
     FL=SQRT(SAL)+12.0 
     DC=1.0 
     NOCNT=0 
   1 DF=D+2.0-DC 
     VF=(3.0*DF**2+10.0*DF)*7.0*FL 
     VC=2.6*DC*(FL**2-6.0*DF*FL+12.0*DF**2+120.0*DF-60.0*FL 
    >+1200.0) 
     PERC=(VF-VC)/VC*100.0 
     IF(ABS(PERC).LT.10.0)GO TO 4 
     DC=DC+0.010*PERC/ABS(PERC) 
     NOCNT=NOCNT+1 
     IF(NOCNT.GT.100)GO TO 4 
     GO TO 1 
   4 VLEW=VC 
     VCW=((D+3.0)*8.0+8.0)*NL 
     OMH=46.0 
     IF(DSP.GT.73000.0)OMH=5.81*DSP**0.1847 
     FMMH=24.0 
     IF(DSP.GT.73000.0)FMMH=1.47*DSP**0.2491 
     CF=1.25 
     COSTE=VLEW*UPIEX/27.0 
     COSTCW=VCW/27.0*UPICW 
     TBCC=(COSTE+COSTCW)*CF 
     CALL AMORT(TBCC,RSST,RC1) 
     NUM=NUM+1 
     SUMMDA(NUM,1)=TBCC 
     SUMMDA(NUM,2)=OMH 
     SUMMDA(NUM,3)=FMMH 
     SUMMDA(NUM,5)=RC1 
     SUMMDA(NUM,9)=94.0 
     CALL USEREX(36) 
     SVOLU=PSOLID*SVOLU/30.0 
     PSOLID=30.0 
     CALL INIT(RR,QQ,17) 
     RETURN 
     END 
****     UNIVAC MAP OR OVERLAY STRUCTURE 
****    SEG A  IS THE ROOT SEGMENT 
****    SEG X*,(R)        SEGMENT X FOLLOWS SEGMENT R 
****    SEG Q*,R          SEGMENT Q IS AT SAME ADDRESS AS SEGMENT R 
SEG A 
  IN CAPDET.CAPDET 
  IN CAPDET.BLOCKDATA 
  IN CAPDET.TITLE 
 IN CAPDET.INIT 
 IN CAPDET.WASTOT 
SEG B*,(A) 
IN CAPDET.LSIDIN 
IN CAPDET.SSIDIN 
  IN CAPDET.SCAN 
  IN CAPDET.USERIN 
  IN CAPDET.POSTIN 
  IN CAPDET.DUMMIN 
  IN CAPDET.RECAIN 
  IN CAPDET.FLOCIN 
  IN CAPDET.LRIMIN 
  IN CAPDET.FRECIN 
  IN CAPDET.OVERIN 
  IN CAPDET.RAPIIN 
  IN CAPDET.SLOWIN 
  IN CAPDET.SRECIN 
  IN CAPDET.SLFLIN 
  IN CAPDET.AEROIN 
  IN CAPDET.ANAEIN 
  IN CAPDET.THICIN 
  IN CAPDET.VACUIN 
  IN CAPDET.CENTIN 
  IN CAPDET.DRYIIN 
  IN CAPDET.EQULIN 
  IN CAPDET.FLOTIN 
  IN CAPDET.FILTIN 
  IN CAPDET.MICRIN 
  IN CAPDET.CARBIN 
  IN CAPDET.COUNIN 
  IN CAPDET.CROSIN 
  IN CAPDET.CIONIN 
  IN CAPDET.AIONIN 
  IN CAPDET.NEUTIN 
  IN CAPDET.DISIIN 
  IN CAPDET.TRICIN 
  IN CAPDET.CMASIN 
  IN CAPDET.CHARIN 
  IN CAPDET.STEPIN 
  IN CAPDET.PLUGIN 
  IN CAPDET.HIGHIN 
  IN CAPDET.PUREIN 
  IN CAPDET.EXTEIN 
  IN CAPDET.CONTIN 
  IN CAPDET.OXIDIN 
  IN CAPDET.NITRIN 
  IN CAPDET.COAGIN 
  IN CAPDET.PRIMIN 
  IN CAPDET.GRITIN 
  IN CAPDET.SCRNIN 
  IN CAPDET.COMMIN 
  IN CAPDET.SECOIN 
 IN CAPDET.GECOIN 
  IN CAPDET.CLARIN 
  IN CAPDET.XECOIN 
  IN CAPDET.DENIIN 
  IN CAPDET.WASTIN 
  IN CAPDET.DESIIN 
 IN CAPDET.UNITIN 
 IN CAPDET.HAULIN 
 IN CAPDET.MHININ 
 IN CAPDET.FBININ 
 IN CAPDET.PRESIN 
 IN CAPDET.PFILIN 
 IN CAPDET.WETOIN 
 IN CAPDET.SLUMIN 
 IN CAPDET.PUMPIN 
 IN CAPDET.PECOIN 
 IN CAPDET.OECOIN 
 IN CAPDET.RECOIN 
 IN CAPDET.DLARIN 
 IN CAPDET.DATTIN 
 IN CAPDET.NRBCIN 
 IN CAPDET.NTRFIN 
 IN CAPDET.RBCIN 
 IN CAPDET.RAWSIN 
 IN CAPDET.SMALIN 
 IN CAPDET.ZFLOTI 
 IN CAPDET.ZFILTI 
 IN CAPDET.ZCHLOI 
 IN CAPDET.ZLAGOI 
 IN CAPDET.ZAERAI 
 IN CAPDET.ZOXIDI 
  IN CAPDET.ZCOAGI 
 IN CAPDET.ZBARIN 
 IN CAPDET.ZSEPTI 
 IN CAPDET.ZACTII 
 IN CAPDET.ZINTEI 
 IN CAPDET.ZRAWSI 
 IN CAPDET.ZSLUDI 
 IN CAPDET.ZDRYII 
SEG C*,B 
  IN CAPDET.PROCES 
IN CAPDET.USEREX 
IN CAPDET.OMITEX 
 IN CAPDET.AMORT 
 IN CAPDET.SORTT 
 IN CAPDET.IDENTY 
 IN CAPDET.LISTOT 
 IN CAPDET.SMALEX 
 IN CAPDET.DIFFPR 
 IN CAPDET.DIFFQU 
 IN CAPDET.MECHPR 
 IN CAPDET.MECHQU 
  IN CAPDET.PRICE 
  IN CAPDET.RECTPR 
 IN CAPDET.RECTQU 
  IN CAPDET.CIRCPR 
 IN CAPDET.CIRCQU 
  IN CAPDET.AIREX 
  IN  CAPDET.AIROT 
 IN CAPDET.AIRPR 
 IN CAPDET.AIRQU 
 IN CAPDET.PUMPPR 
 IN CAPDET.PUMPQU 
SEG D*,(C) 
  IN CAPDET.PRIMEX 
  IN CAPDET.PUREEX 
 IN CAPDET.GECOEX 
  IN CAPDET.TRICEX 
  IN CAPDET.XECOEX 
  IN CAPDET.PRIMOT 
  IN CAPDET.PUREOT 
 IN CAPDET.PUREPR 
 IN CAPDET.PUREQU 
 IN CAPDET.PECOEX 
 IN CAPDET.PECOOT 
 IN CAPDET.GECOOT 
  IN CAPDET.TRICOT 
  IN CAPDET.XECOOT 
 IN CAPDET.RBCEX 
 IN CAPDET.RBCOT 
 IN CAPDET.RECOEX 
 IN CAPDET.RECOOT 
SEG E*,D 
  IN CAPDET.CLAREX 
  IN CAPDET.DENIEX 
 IN CAPDET.DLAREX 
 IN CAPDET.DLAROT 
  IN CAPDET.NITREX 
  IN CAPDET.POSTEX 
  IN CAPDET.VACUEX 
  IN CAPDET.FILTEX 
  IN CAPDET.CLAROT 
  IN CAPDET.DENIOT 
  IN CAPDET.NITROT 
  IN CAPDET.POSTOT 
  IN CAPDET.VACUOT 
 IN CAPDET.VACUPR 
 IN CAPDET.VACUQU 
  IN CAPDET.FILTOT 
  IN CAPDET.FILTPR 
 IN CAPDET.FILTQU 
SEG F*,D 
  IN CAPDET.AIONEX 
  IN CAPDET.CARBEX 
  IN CAPDET.CIONEX 
  IN CAPDET.COAGEX 
  IN CAPDET.COUNEX 
  IN CAPDET.CROSEX 
  IN CAPDET.DUMMEX 
 IN CAPDET.EQULEX 
 IN CAPDET.EQULOT 
  IN CAPDET.FLOCEX 
  IN CAPDET.FLOTEX 
  IN CAPDET.FRECEX 
  IN CAPDET.LRIMEX 
  IN CAPDET.MICREX 
  IN CAPDET.NEUTEX 
  IN CAPDET.RECAEX 
  IN CAPDET.SRECEX 
  IN CAPDET.AIONOT 
  IN CAPDET.CARBOT 
  IN CAPDET.CIONOT 
  IN CAPDET.COAGOT 
 IN CAPDET.COAGPR 
 IN CAPDET.COAGQU 
  IN CAPDET.COUNOT 
  IN CAPDET.CROSOT 
  IN CAPDET.DUMMOT 
  IN CAPDET.FLOCOT 
  IN CAPDET.FLOTOT 
  IN CAPDET.FLOTPR 
 IN CAPDET.FLOTQU 
  IN CAPDET.FRECOT 
  IN CAPDET.LRIMOT 
  IN CAPDET.MICROT 
  IN CAPDET.NEUTOT 
  IN CAPDET.RECAOT 
  IN CAPDET.SRECOT 
SEG G*,D 
 IN CAPDET.HAULEX 
 IN CAPDET.MHINEX 
 IN CAPDET.FBINEX 
 IN CAPDET.PRESEX 
 IN CAPDET.PFILEX 
 IN CAPDET.WETOEX 
 IN CAPDET.SLUMEX 
 IN CAPDET.SLUMOT 
 IN CAPDET.HAULOT 
 IN CAPDET.MHINOT 
 IN CAPDET.FBINOT 
 IN CAPDET.PRESOT 
 IN CAPDET.PFILOT 
 IN CAPDET.WETOOT 
 IN CAPDET.HAULPR 
 IN CAPDET.HAULQU 
 IN CAPDET.MHINPR 
 IN CAPDET.MHINQU 
 IN CAPDET.FBINPR 
 IN CAPDET.FBINQU 
SEG H*,D 
 IN CAPDET.ZFLOTX 
 IN CAPDET.ZFILTX 
 IN CAPDET.ZCHLOX 
 IN CAPDET.ZLAGOX 
 IN CAPDET.ZAERAX 
 IN CAPDET.ZCOAGX 
 IN CAPDET.ZBAREX 
 IN CAPDET.ZSEPTX 
 IN CAPDET.ZACTIX 
 IN CAPDET.ZINTEX 
 IN CAPDET.ZRAWSX 
 IN CAPDET.ZSLUDX 
 IN CAPDET.ZDRYIX 
 IN CAPDET.ZFLOTO 
 IN CAPDET.ZFILTO 
 IN CAPDET.ZCHLOO 
 IN CAPDET.ZLAGOO 
 IN CAPDET.ZAERAO 
 IN CAPDET.ZCOAGO 
 IN CAPDET.ZBAROT 
 IN CAPDET.ZSEPTO 
 IN CAPDET.ZACTIO 
 IN CAPDET.ZINTEO 
 IN CAPDET.ZRAWSO 
 IN CAPDET.ZSLUDO 
 IN CAPDET.ZDRYIO 
EG I*,D 
  IN CAPDET.FIGURE 
  IN CAPDET.CHARXO 
IN CAPDET.SPCLEX 
 IN CAPDET.ANAMIX 
  IN CAPDET.SCRNEX 
  IN CAPDET.DISIEX 
  IN CAPDET.COMMEX 
  IN CAPDET.GRITEX 
  IN CAPDET.SCRNOT 
  IN CAPDET.DISIOT 
 IN CAPDET.DISIPR 
 IN CAPDET.DISIQU 
  IN CAPDET.COMMOT 
  IN CAPDET.GRITOT 
 IN CAPDET.GRITPR 
 IN CAPDET.PUMPEX 
 IN CAPDET.PUMPOT 
 IN CAPDET.RAWSEX 
 IN CAPDET.RAWSOT 
  IN CAPDET.LIMEPR 
  IN CAPDET.ALUMPR 
  IN CAPDET.IRONPR 
  IN CAPDET.POLYPR 
  IN CAPDET.LIMEQU 
  IN CAPDET.ALUMQU 
  IN CAPDET.IRONQU 
  IN CAPDET.POLYQU 
SEG J*,D 
  IN CAPDET.STEPEX 
  IN CAPDET.STEPOT 
  IN CAPDET.SECOEX 
  IN CAPDET.SECOOT 
  IN CAPDET.CMASEX 
  IN CAPDET.CONTEX 
  IN CAPDET.EXTEEX 
  IN CAPDET.HIGHEX 
  IN CAPDET.PLUGEX 
  IN CAPDET.CMASOT 
  IN CAPDET.CONTOT 
  IN CAPDET.EXTEOT 
  IN CAPDET.HIGHOT 
  IN CAPDET.PLUGOT 
  IN CAPDET.AEROEX 
   IN CAPDET.AEROOT 
   IN CAPDET.DRYIEX 
   IN CAPDET.DRYIOT 
   IN CAPDET.DRYIPR 
   IN CAPDET.DRYIQU 
 IN CAPDET.OXIDEX 
 IN CAPDET.OXIDOT 
 IN CAPDET.OXIDPR 
 IN CAPDET.OXIDQU 
 IN CAPDET.OECOEX 
 IN CAPDET.OECOOT 
 IN CAPDET.ZOXIDX 
 IN CAPDET.ZOXIDO 
SEG K*,D 
 IN CAPDET.ANAEEX 
 IN CAPDET.ANAEOT 
 IN CAPDET.ANAEPR 
 IN CAPDET.ANAEQU 
  IN CAPDET.CENTEX 
  IN CAPDET.CENTOT 
  IN CAPDET.CENTPR 
  IN CAPDET.CENTQU 
  IN CAPDET.DATTEX 
  IN CAPDET.DATTOT 
  IN CAPDET.NRBCEX 
  IN CAPDET.NRBCOT 
  IN CAPDET.NTRFEX 
  IN CAPDET.NTRFOT 
  IN CAPDET.SLFLEX 
  IN CAPDET.SLFLOT 
  IN CAPDET.SLFLPR 
  IN CAPDET.SLFLQU 
  IN CAPDET.THICEX 
  IN CAPDET.THICOT 
  IN CAPDET.THICPR 
  IN CAPDET.THICQU 
 SEG L*,D 
  IN CAPDET.SLOWEX 
  IN CAPDET.OVEREX 
  IN CAPDET.RAPIEX 
  IN CAPDET.SLOWOT 
IN CAPDET.SLOWPR 
IN CAPDET.SLOWQU 
  IN CAPDET.OVEROT 
 IN CAPDET.OVERPR 
 IN CAPDET.OVERQU 
  IN CAPDET.RAPIOT 
 IN CAPDET.RAPIPR 
 IN CAPDET.RAPIQU 
****    CHECK DATA SET ONE 
UMMY 
OD5       50 
BOD       50 
OD        50 
COD       50 
OSTS     1000  20 20 500 600 700 
ND 
SER SPECIFIED SLUDGE PROCESS 
OLUME     50 
ERCENT VOLATILE  50 
OSTS    2000  40 40 1000 1100 1200 
ND 
ITLE CHECK DATA SET ONE  10/31/80 VERSION  MOD ZERO 
IQUID 
LOCK     PRELIM0 
LOCK     RAW   0 
LOCK     EQUALI0 
LOCK     COAGUL0 
LOCK     COMPLE0 
LOCK     CARBON0 
LOCK     N TRIC0 
LOCK     TWO ST0 
LOCK     NEUTRA0 
LOCK     FILTRA0 
LOCK     CHLORI0 
LOCK     DUMMY 0 
ECONDARY SLUDGE 
LOCK     A MIX 
RIMARY SLUDGE 
LOCK     AEROBI0 
LOCK     GRAVIT0 
LOCK     VACUUM0 
LOCK     MULTIP0 
IQUID LINE 
LOCK     PRIMAR0 
LOCK     ANION 0 
LOCK     STEP A0 
LOCK     NITRIF0 
LOCK     DENITR0 
LOCK     FLOTAT0 
LOCK     POST A0 
ECONDARY SLUDGE 
LOCK     A MIX 
RIMARY SLUDGE LINE 
LOCK     ANAERO0 
LOCK     AIR FL0 
LOCK     USER  0 
LOCK     DRYING0 
LOCK     HAULIN0 
IQUID LINE 
LOCK     CATION0 
LOCK     TRICKL0 
LOCK     RECARB0 
LOCK     MICROS0 
ECONDARY SLUDGE 
LOCK     A MIX 
RIMARY SLUDGE LINE 
LOCK     AEROBI0 
LOCK     CENTRI0 
LOCK     WET OX0 
IQUID LINE 
LOCK     CROSS 0 
LOCK     CONTAC0 
ECONDARY SLUDGE 
LOCK     AEROBI0 
LOCK     AIR FL0 
LOCK     FLTR P0 
LOCK     FLUIDI0 
ASTE INFLUENT 
VERAGE FLOW 5.0 MGD       5.0 MGD 
INIMUM FLOW  3.0 MGD 
AXIMUM FLOW  7.0 MGD 
ESIRED EFFLUENT 
NIT COSTS 
OBILIZATION 
AB AND ADMIN BUILDING 
LEARING AND GRUBBING 
ND 
ONTROL CARDS 
UTPUT QUANTITIES 
NALYZE 
O           INTEREST=6.625    DESIGN LIFE  20 YEARS 
****    CHECK DATA SET TWO 
ITLE  DATA SET TWO  10/31/80 VERSION MOD ZERO 
IQUID 
LOCK     COUNTE0 
LOCK     PLUG F0 
LOCK     N RBC 0 
LOCK     CLARIF0 
LOCK     ATTACH0 
ECONDARY SLUDGE LINE 
LOCK     AEROBI0 
LOCK     BELT F0 
IQUID LINE 
LOCK     AERATE0LAGOON0 
IQUID LINE 
LOCK     EXTEND0HIGH R0OXIDAT0PURE O0PLUG F0RBC   0 
IQUID LINE 
LOCK     OVERLA0RAPID 0SLOW I0 
ASTE INFLUENT 
VERAGE FLOW 5.0 MGD 
ESIRED EFFLUENT 
NIT COSTS 
OBILIZATION 
AB AND ADMIN BUILDING 
LEARING AND GRUBBING 
ND 
ONTROL CARDS 
UTPUT QUANTITIES 
RESENT     1 3-5 
ONSTRUCTION  1  6 
PERATION    1  4-5 
ROJECT   1  8 
NERGY   1  10-12 
IST     100 TRAINS 
O           INTEREST=6.625    DESIGN LIFE  20 YEARS 
****    CHECK DATA SET THREE 
MALL 
UMMY   MOD 0 
OD5       50 
BOD       50 
OD        50 
COD       50 
OSTS     1000  20 20 500 600 700 
ND 
SER SPECIFIED SLUDGE PROCESS MOD 0 
OLUME     50 
ERCENT VOLATILE  50 
OSTS    2000  40 40 1000 1100 1200 
ND 
ITLE SMALL SYSTEM  10/31/80 VERSION  MOD ZERO 
IQUID LINE 
LOCK     PRELIM0 
LOCK     RAW SE0 
LOCK     PRIMAR0 
LOCK     ACTIVA0 
LOCK     FILTRA0 
LOCK     CHLORI0 
LOCK     POST A0 
LOCK     DUMMY 
ECONDARY 
LOCK     DRYING0 
LOCK     USER 
RIMARY 
LOCK     SLUDGE0 
IQUID LINE 
LOCK     LAGOON0 
LOCK     INTERM0 
IQUID LINE 
LOCK     FLOTAT0EQUALI0TRICKL0OXIDAT0SEPTIC0AERATE0COAGUL0 
ASTE 
VERAGE 0.3 
INIMUM 0.1 
AXIMUM 0.5 
ESIRED 
NIT COSTS 
OBILIZATION 
AB AND ADMIN BUILDING 
LEARING AND GRUBBING 
ND 
ONTROL 
NALYZE 
UTPUT QUANTITIES 
O      I=7.0  DS=20 